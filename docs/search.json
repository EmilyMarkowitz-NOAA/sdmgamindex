[{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"example-set-up-and-context","dir":"Articles","previous_headings":"","what":"Example set up and context:","title":"Intro to GAMs","text":"example, let’s say want assess: example, use data NOAA Fisheries’ eastern Bering sea (EBS) bottom trawl survey. Resource Assessment Conservation Engineering (RACE) Division Groundfish Assessment Program (GAP) Alaska Fisheries Science Center (AFSC) conducts fisheries-independent bottom trawl surveys assess populations demersal fish crab stocks Alaska. Data presented presence-(non-zero) observations surveys therefore aggregated. sake simple example, assess data 2015 2021.","code":"SPECIES <- c(\"walleye pollock\") YEARS <- 2015:2021 SRVY <- \"EBS\""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"what-data-area-we-using","dir":"Articles","previous_headings":"","what":"1. What data area we using?","title":"Intro to GAMs","text":", use public facing data NOAA AFSC groundfish Bering sea bottom trawl survey. information data compiled, see afsc-gap-products GitHub repo.","code":"dat <- sdmgamindex::noaa_afsc_public_foss %>%    dplyr::filter(srvy == SRVY &                   year %in% YEARS &                   common_name %in% SPECIES) %>%   dplyr::mutate(hauljoin = paste0(stratum, \"_\", station, \"_\", date_time)) %>%   dplyr::select(     year, date_time, latitude_dd, longitude_dd, # spatiotemproal data     cpue_kgha, common_name, # catch data     bottom_temperature_c, depth_m, # possible covariate data     srvy, area_swept_ha, duration_hr, vessel_id, hauljoin # haul/effort data)   )  head(dat)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"prepare-the-data-for-sdmgamindexget_surveyidx","dir":"Articles","previous_headings":"","what":"2. Prepare the data for sdmgamindex::get_surveyidx():","title":"Intro to GAMs","text":"","code":"# project spatial data crs_proj <- \"EPSG:3338\" # NAD83 / Alaska Albers crs_latlon <- \"+proj=longlat +datum=WGS84\" # decimal degrees  ll <- sdmgamindex::convert_crs(    x = dat$longitude_dd,   y = dat$latitude_dd,    crs_in = crs_latlon,    crs_out = crs_proj)   YEARS <- sort(unique(dat$year))  # The sdmgamindex::get_surveyidx() expects some columns to be named in a specific way dat_wrangled <- dat %>%    dplyr::rename(     Year = year,     wCPUE = cpue_kgha,      COMMON_NAME = common_name,     GEAR_TEMPERATURE = bottom_temperature_c,      BOTTOM_DEPTH = depth_m,     HaulDur = duration_hr,     EFFORT = area_swept_ha,     Ship = vessel_id) %>%   dplyr::mutate(      # create some other vars     Lon = longitude_dd,      Lat = latitude_dd,      lon = ll$X,     lat = ll$Y,     sx = ((longitude_dd - mean(longitude_dd, na.rm = TRUE))/1000),     sy = ((latitude_dd - mean(latitude_dd, na.rm = TRUE))/1000),      ctime = as.numeric(as.character(Year)),     date_time = as.Date(x = date_time, format = \"%m/%d/%Y %H:%M:%S\"),      hour = as.numeric(format(date_time,\"%H\")),     minute = as.numeric(format(date_time,\"%M\")),     day = as.numeric(format(date_time,\"%d\")),     month = as.numeric(format(date_time,\"%m\")),     TimeShotHour = hour + minute/60,     timeOfYear = (month - 1) * 1/12 + (day - 1)/365,             # add some dummy vars and create some other vars     Country = \"USA\",     Gear = \"dummy\",     Quarter = \"2\")  %>%   dplyr::mutate(across((c(\"Year\", \"Ship\", \"COMMON_NAME\")), as.factor)) %>%    dplyr::select(wCPUE, GEAR_TEMPERATURE, BOTTOM_DEPTH, COMMON_NAME, EFFORT,                  Year, Ship, Lon, Lat, lat, lon, sx, sy,                  ctime, TimeShotHour, timeOfYear, Gear, Quarter, HaulDur, hauljoin)  head(dat_wrangled)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"define-representitive-station-points-to-fit-and-predict-the-model-at","dir":"Articles","previous_headings":"","what":"3. Define representitive station points to fit and predict the model at","title":"Intro to GAMs","text":"Since surveys done exact location year (’s intention, impossible practice), need define representative latitudes longitudes going predict . prediction grids AFSC uses 2021 VAST model-based indices (subject change - use without asking/checking still current!).","code":"pred_grid <- sdmgamindex::pred_grid_ebs  ll <- sdmgamindex::convert_crs(    x = pred_grid$lon,   y = pred_grid$lat,    crs_in = crs_latlon,    crs_out = crs_proj)   pred_grid <- pred_grid %>%    dplyr::mutate(      lon = ll$X,     lat = ll$Y,     sx = ((lon - mean(lon, na.rm = TRUE))/1000),     sy = ((lat - mean(lat, na.rm = TRUE))/1000))  head(pred_grid)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"prepare-covariate-data","dir":"Articles","previous_headings":"","what":"4. Prepare covariate data","title":"Intro to GAMs","text":"want match covariate data prediction grid.","code":"dat_cov <- sdmgamindex::pred_grid_ebs %>%    dplyr::select(-Shape_Area) %>%    dplyr::mutate(      sx = ((lon - mean(lon, na.rm = TRUE))/1000),     sy = ((lat - mean(lat, na.rm = TRUE))/1000))  sp_extrap_raster <- SpatialPoints(   coords = coordinates(as.matrix(dat_cov[,c(\"lon\", \"lat\")])),    proj4string = CRS(crs_latlon) )"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"a--data-that-varies-over-only-space-depth","dir":"Articles","previous_headings":"4. Prepare covariate data","what":"4a. Data that varies over only space (depth)","title":"Intro to GAMs","text":"Bering sea, depth rarely changes. modeler may consider making variable time-varying well say, Gulf Alaska Aleutian Islands currents island formation can markedly change depth. , going create raster depth Bering sea survey data can merge dataset prediction grid lat/lons.","code":"x <- dat_wrangled %>%   dplyr::select(Lon, Lat, BOTTOM_DEPTH) %>%   stats::na.omit()  %>%    sf::st_as_sf(x = .,                 coords = c(x = \"Lon\", y = \"Lat\"),                 crs = sf::st_crs(crs_latlon))  idw_fit <- gstat::gstat(formula = BOTTOM_DEPTH ~ 1,                         locations = x,                         nmax = 4)  # stn_predict <- raster::predict(idw_fit, x)  extrap_data0 <- raster::predict(   idw_fit, sp_extrap_raster) %>%   # as(sp_extrap_raster, Class = \"SpatialPoints\")) %>%   sf::st_as_sf() %>%   sf::st_transform(crs = crs_latlon)  %>%   stars::st_rasterize()   extrap_data <- stars::st_extract(x = extrap_data0,                                  at = as.matrix(dat_cov[,c(\"lon\", \"lat\")]))  # to make future runs of this faster: save(extrap_data0, extrap_data,       file = paste0(\"../inst/VigA_bottom_depth_raster_\",                    min(YEARS),\"-\",max(YEARS), \".rdata\")) # Just so we can see what we are looking at: plot(extrap_data0, main = \"Interpolated Bottom Depths\")   dat_cov <- cbind.data.frame(dat_cov,                              \"BOTTOM_DEPTH\" = extrap_data$var1.pred) %>%   stats::na.omit()  head(dat_cov)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"b--data-that-varies-over-space-and-time-bottom-temperature","dir":"Articles","previous_headings":"4. Prepare covariate data","what":"4b. Data that varies over space and time (bottom temperature)","title":"Intro to GAMs","text":", bottom temperature, thereby cold pool extent, show drive distribution many species. especially true walleye pollock. going lean -house prepared validated pre-prepared {coldpool} R package (S. Rohan, L. Barnett, N. Charriere). data interpolates whole area survey missing data.","code":"plot(coldpool::ebs_bottom_temperature[[1]]) # Just so we can see what we are looking at:   tmp <- c() for (i in 1:length(YEARS)) {   tmp <- c(tmp,             grep(pattern = YEARS[i], x = names(coldpool::ebs_bottom_temperature))) }  extrap_data0 <- coldpool::ebs_bottom_temperature[[tmp]] %>%    as(., Class = \"SpatialPointsDataFrame\") %>%   sf::st_as_sf() %>%   sf::st_transform(crs = crs_latlon)  %>%   stars::st_rasterize() %>%    stars::st_extract(x = .,                     at = as.matrix(dat_cov[,c(\"lon\", \"lat\")]))  names(extrap_data0) <- paste0(\"GEAR_TEMPERATURE\", YEARS)  dat_cov <- dplyr::bind_cols(dat_cov, extrap_data0) %>%    na.omit()  head(dat_cov)"},{"path":[]},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"a--catch-data","dir":"Articles","previous_headings":"5. DATRAS structure","what":"5a. Catch Data","title":"Intro to GAMs","text":"Now, need fill data zeros!","code":"# Identify vars that will be used --------------------------------------------  varsbyyr <- unique( # c(\"GEAR_TEMPERATURE\", \"cpi\")   gsub(pattern = \"[0-9]+\",         replacement = \"\",         x = names(dat_cov)[grepl(names(dat_cov),                                  pattern = \"[0-9]+\")]))  vars <- unique( # c(\"BOTTOM_DEPTH\")   names(dat_cov)[!grepl(names(dat_cov),                          pattern = \"[0-9]+\")]) vars <- vars[!(vars %in% c(\"LONG\", \"LAT\", \"lon\", \"lat\", \"sx\", \"sy\"))]  ## Fill catch data with zeros ---------------------------------------------------------  data_hauls <- dat_wrangled %>%    dplyr::select(Year, sx, sy,                  dplyr::all_of(varsbyyr), dplyr::all_of(vars),                  Ship, hauljoin,                  lat, lon, Lat, Lon,                  ctime, TimeShotHour, timeOfYear, Gear, Quarter,                  EFFORT, HaulDur)  %>%    # dplyr::filter(!is.na(GEAR_TEMPERATURE)) %>%    na.omit() %>%   dplyr::distinct()  data_catch <- dat_wrangled %>%    dplyr::select(COMMON_NAME, wCPUE, hauljoin)  dat_catch_haul <- dplyr::left_join(x = data_hauls,                                     y = data_catch,                                     by = c(\"hauljoin\")) %>%    dplyr::mutate(wCPUE = ifelse(is.na(wCPUE), 0, wCPUE))  head(dat_catch_haul) allpd <- lapply(YEARS, FUN = sdmgamindex::get_prediction_grid, x = dat_cov,                  vars = vars, varsbyyr = varsbyyr) names(allpd) <- as.character(YEARS)  head(allpd[1][[1]])"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"b--covariate-data","dir":"Articles","previous_headings":"5. DATRAS structure","what":"5b. Covariate Data","title":"Intro to GAMs","text":"","code":"## split data by species, make into DATRASraw + Nage matrix ds <- split(dat_catch_haul,dat_catch_haul$COMMON_NAME) ds <- lapply(ds, sdmgamindex::get_datrasraw) ## OBS, response is added here in \"Nage\" matrix -- use wCPUE ds <- lapply(ds,function(x) { x[[2]]$Nage <- matrix(x$wCPUE,ncol=1); colnames(x[[2]]$Nage)<-1; x } )  ds"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"formulas","dir":"Articles","previous_headings":"","what":"6. Formulas","title":"Intro to GAMs","text":"","code":"fm <-  list(   # Null model spatial and temporal with an additional year effect     \"fm_0_s\" = \"Year +     s(sx,sy,bs=c('ts'),k=376)\",            \"fm_0_s\" = \"Year +     s(Year,bs=c('ts'),k=10)\",            \"fm_0_st\" = \"Year +     s(sx,sy,bs=c('ts'),k=10,by=Year)\",      \"fm_1_s_t_st\" = \"Year +     s(sx,sy,bs=c('ts'),k=376) +     s(sx,sy,bs=c('ts'),k=10,by=Year)\",    # Model with simple covariates   \"fm_2_cov\" =     \"s(BOTTOM_DEPTH,bs='ts',k=10) + s(log(GEAR_TEMPERATURE+3),bs='ts',k=10)\" )"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"fit-the-model","dir":"Articles","previous_headings":"","what":"7. Fit the Model","title":"Intro to GAMs","text":"models want try fitting:","code":"comb <- tidyr::crossing(   \"SPECIES\" = SPECIES,    \"fm_name\" = gsub(pattern = \" \", replacement = \"_\", x = names(fm))) %>%    dplyr::left_join(     x = .,      y = data.frame(\"fm\" = gsub(pattern = \"\\n\", replacement = \"\",                                 x = unlist(fm), fixed = TRUE),                     \"fm_name\" = gsub(pattern = \" \", replacement = \"_\",                                      x = names(fm))),      by = \"fm_name\")  comb models <- fittimes <- list()  for(i in 1:nrow(comb)){   cat(\"Fitting \",comb$SPECIES[i],\"\\n\", comb$fm_name[i], \": \", comb$fm[i], \"\\n\")      temp <- paste0(comb$SPECIES[i], \" \", comb$fm_name[i])      fittimes[[ temp ]] <-     system.time ( models[[ temp ]] <-                       mgcv::gam(stats::as.formula(paste0(\"wCPUE ~ \", comb$fm[i])),       dat = dat_wrangled,        family = mgcv::tw,        gamma = 1)  ) }    save(models, fittimes, file = paste0(\"../inst/VigA_simple_gam_model_fits.Rdata\")) # Lesson 8: Modling # Created by: Emily Markowitz # Contact: Emily.Markowitz@noaa.gov # Created: 2020-12-18 # Modified: 2021-02-17   # tasks -------------------------------------------------------------------  # Be creative!  # Make a lm(), glm(), and gam() using either of these datasets to answer a  # question you have about the data. Be prepared to share your cool code with  # the class!     # 3. lm() models ---------------   # Quickly, I am going to show you all of the combinations using the purrr::map() again:  lm_mods <- map(dat, ~lm(dat$wtcpue ~ .x, data = dat) %>%                   broom::tidy())  lm_mods  # The best model looks to be the one with longitude!  # Another way of looking at this:  # p-values dat %>%    map(~lm(dat$wtcpue ~ .x, data = dat)) %>%    map(summary) %>%    map(c(\"coefficients\")) %>%    map_dbl(8)  # r2 dat %>%    map(~lm(dat$wtcpue ~ .x, data = dat)) %>%    map(summary) %>%    map(c(\"r.squared\")) %>%   unlist()  # 4. glm() models ---------------   glm_fit1 <- glm(wtcpue ~ longitude,                  family = gaussian(link = \"identity\"), # same as an lm()                 # family = \"gaussian\", # *same as line above                 data = dat)  glm_fit2 <- glm(wtcpue ~ longitude,                  family = Gamma(),                  data = dat)  glm_fit3 <- glm(wtcpue ~ longitude + latitude,                  family = gaussian(link = \"identity\"), # same as an lm()                 # family = \"gaussian\", # *same as line above                 data = dat)  glm_fit4 <- glm(wtcpue ~ longitude + latitude,                  family = Gamma(),                  data = dat)  glm_fit5 <- glm(wtcpue ~ longitude + latitude + year,                  family = gaussian(link = \"identity\"), # same as an lm()                 # family = \"gaussian\", # *same as line above                 data = dat)  glm_fit6 <- glm(wtcpue ~ longitude + latitude + year,                  family = Gamma(),                  data = dat)  glm_fit7 <- glm(wtcpue ~ longitude + latitude + year + bot_temp,                  family = gaussian(link = \"identity\"), # same as an lm()                 # family = \"gaussian\", # *same as line above                 data = dat)  glm_fit8 <- glm(wtcpue ~ longitude + latitude + year + bot_temp,                  family = Gamma(),                  data = dat)  AIC(glm_fit1, glm_fit2, glm_fit3, glm_fit4,      glm_fit5, glm_fit6, glm_fit7, glm_fit8) # Model 6 has the lowest AIC and is the most parsimonious! # bot_temp did not improve the model at all here, so why include it? # AIC is not the only metric to consider here, but I'll let you read up on that! # we can see that this model has room for improvement from looking at the plots:  plot(glm_fit6)  # Now let's predict our outputs  # make up x pred<-data.frame(\"longitude\" = rnorm(n = 30,                                       mean = mean(dat$longitude),                                       sd = sd(dat$longitude)),                   \"latitude\" = rnorm(n = 30,                                      mean = mean(dat$latitude),                                      sd = sd(dat$latitude)),                   \"year\" = rep_len(x = c(2016, 2017, 2018),                                    length.out = 10)) # predict y with your equation pred$x<-predict(object = glm_fit6,                  newdata = pred,                  type = \"response\") pred  # 5. gam() models ---------------   library(mgcv)  # Create our gam models gam_fit1 <- gam(   wtcpue ~ s(longitude),    data = dat )  gam_fit2 <- gam(   wtcpue ~ s(longitude),   family = Gamma(link=log),    data = dat )  gam_fit3 <- gam(   wtcpue ~ s(longitude) + s(latitude),   data = dat )  gam_fit4 <- gam(   wtcpue ~ s(longitude) + s(latitude),   family = Gamma(link=log),    data = dat )  gam_fit5 <- gam(   wtcpue ~ s(longitude) + s(latitude) + s(year, k = 2),   data = dat )  gam_fit6 <- gam(   wtcpue ~ s(longitude) + s(latitude) + s(year, k = 2),   family = Gamma(link=log),    data = dat )   gam_fit7 <- gam(   wtcpue ~ s(longitude, latitude, year),   data = dat )  gam_fit8 <- gam(   wtcpue ~ s(longitude, latitude, year),    family = Gamma(link=log),    data = dat )   AIC(gam_fit1, gam_fit2, gam_fit3, gam_fit4,      gam_fit5, gam_fit6, gam_fit7, gam_fit8) # Model 8 has the lowest AIC!  # by explicityly making a spatio-temporal term (as opposed to assessing  # each sepeately) we were able to obtain a better model # Again, AIC is not the only metric to consider here, but I'll let you read up on that!   # crazy, just for giggles (aka an abridged model I am playing with in real life!) gam_fit9 <- gam(   wtcpue ~ year + # a linear variable     s(longitude, latitude, bs = c('ts'), k = 379) + # ts = tensor spline, k = knots, here the number of stations (?)     s(longitude, latitude,bs=c('ts'),k=50, by=year, id=1), # the above but with a by year term   family = Gamma(link=log),    data = dat )  # Will this more developed model be better than our gam_fit8? AIC(gam_fit8, gam_fit9) # Our new gam_fit9 is just that much better than our gam_fit8! AIC(models$`walleye pollock fm_1_s_t_st`$pModels[[1]],      models$`walleye pollock fm_2_cov`$pModels[[1]]) par(mfrow = c(2,2)) lapply(models,function(x) gam.check(x$pModels[[1]])) lapply(models,function(x) summary(x$pModels[[1]]))"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"indicies-of-abundance","dir":"Articles","previous_headings":"","what":"8. Indicies of Abundance","title":"Intro to GAMs","text":"","code":"dat_design <- dplyr::bind_rows(read.csv(file = system.file(\"YFS_10210_estimate_summary.csv\",                          package = \"sdmgamindex\" )) %>%                            dplyr::mutate(common_name = \"yellowfin sole\"),                  read.csv(file = system.file(\"WEP_21740_estimate_summary.csv\",                          package = \"sdmgamindex\" ))  %>%                            dplyr::mutate(common_name = \"walleye pollock\"),                   read.csv(file = system.file(\"RKC_Table_for_SS3.csv\",                          package = \"sdmgamindex\" )) %>%    dplyr::rename(design_mt = Estimate_metric_tons,                  design_se = SD_mt) %>%    dplyr::mutate(design_se = (design_se)^2,                  design_CV = NA,                  VAST_mt = NA,                 VAST_se = NA,                  VAST_CV = NA,                  common_name = \"red king crab\") %>%    dplyr::select(-Unit, -Fleet, -SD_log))    dat <- data.frame() for (i in 1:length(models)){   temp <- models[[i]]   dat0 <- data.frame(idx = temp$idx[,1],                       lo = temp$lo[,1],                       up = temp$up[,1],                      Year = rownames(temp$idx),                       group = names(models)[i],                      formula = paste0(\"cpue_kgha ~ \",                                        as.character(temp$pModels[[1]]$formula)[[3]]))      dat <- dplyr::bind_rows(dat, dat0)  }  dat$common_name <- paste0(sapply(X = strsplit(x = dat$group, split = \" fm\"), `[`, 1))  dat <- dplyr::bind_rows(dat %>%                            dplyr::mutate(Year = as.numeric(Year)) %>%                            dplyr::select(-group),                          dat_design %>%                            dplyr::select(design_mt, common_name, Year) %>%                           dplyr::rename(idx = design_mt) %>%                           dplyr::mutate(lo = NA,                                          up = NA,                                          formula = \"design\")) %>%    dplyr::filter(Year %in% YEARS)     dat[dat$Year == 2020, c(\"idx\", \"up\", \"lo\")] <- NA  ggplot2::ggplot(data = dat,                  mapping = aes(x = Year,                                y = idx,                                group = formula,                                color = formula)) +   geom_line(size = 1.5) +    geom_point(size = 2)  +    geom_ribbon(aes(ymin = lo, ymax = up, fill = formula),                alpha=0.1,                linetype=\"dashed\",               color=\"grey\") +    ggtitle(\"Annual Index Model Results\") +   facet_wrap(vars(common_name), scales = \"free\", ncol = 1) +   theme(legend.position = \"bottom\",          legend.direction = \"vertical\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"predict-and-plot","dir":"Articles","previous_headings":"","what":"9. Predict and plot","title":"Intro to GAMs","text":"","code":"dat_pred <- dat_catch_haul %>%   dplyr::select(Year, sx, sy, Lon, Lat, GEAR_TEMPERATURE, BOTTOM_DEPTH)  dat <- data.frame() for (i in 1:length(models)) {   temp <- models[[i]]   dat0 <- data.frame(idx =                   predict.gam(                    object = temp$pModels[[1]],                    newdata = dat_pred),                        group = names(models)[i],                       formula = paste0(\"cpue_kgha ~ \",                                        as.character(temp$pModels[[1]]$formula)[[3]])                )   dat00 <- dplyr::bind_cols(dat0, dat_pred)    dat <- dplyr::bind_rows(dat, dat00)     # dat_r <- raster::rasterFromXYZ(xyz = dat00[,c(\"lon\", \"lat\", \"idx\")])      }  dat$facet_group <- paste0(sapply(X = strsplit(x = dat$group, split = \" fm\"), `[`, 1))  for (i in 1:length(unique(dat$facet_group))){      ggplot2::ggplot(data = dat %>%                    dplyr::filter(facet_group == unique(dat$facet_group)[i]),                  mapping = aes(x = Lon,                                y = Lat,                                group = group,                                color = idx)) +     scale_color_viridis_c(option = \"D\") +   geom_point()  +    ggtitle(paste0(\"Annual Index Model Results for \", unique(dat$facet_group)[i])) +   facet_grid(cols = vars(group),               rows = vars(Year)) +   theme_bw()    } sdmgamindex::plot_surveyidx(   x = models,    dat = ds,    myids = NULL,    predD = allpd)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A-gam-basics.html","id":"simulations","dir":"Articles","previous_headings":"","what":"10. Simulations","title":"Intro to GAMs","text":"","code":"REPS <- 4 ests <- list()  for(i in 1:nrow(comb)){    cat(\"Simulating \",comb$SPECIES[i],\"\\n\", comb$fm_name[i], \": \", comb$fm[i], \"\\n\")   temp <- paste0(comb$SPECIES[i], \" \", comb$fm_name[i])  # for(SPECIES in specLevels){   ests[[ temp ]] <- list()      ## simulate data   csim <- sdmgamindex::get_surveyidx_sim(models[[i]], ds[[comb$SPECIES[i]]])   sims <-lapply(1:REPS,function(j) sdmgamindex::get_surveyidx_sim(     model = models[[i]],     d = ds[[comb$SPECIES[i]]],      sampleFit = FALSE,     condSim = csim) )      ## re-estimate   tmp <- ds[[i]]   for(i in 1:REPS) {     tmp[[2]]$Nage <- matrix(sims[[i]][[1]][,1],ncol=1)     colnames(tmp$Nage)<-1          ests[[SPECIES]][[i]]  <-       sdmgamindex::get_surveyidx(         x = tmp,         ages = 1,         myids=NULL,         predD=allpd,         cutOff=0,         fam=\"Tweedie\",         modelP=fm,         gamma=1,         control=list(trace=TRUE,maxit=10))     # cat(i, \" done.\\n\")   }    }  png(\"simest.png\",width=640*pngscal,height=480*pngscal) par(mfrow=c(2,2))  for(i in 1:nrow(comb)){  # for(SPECIES in specLevels){   sdmgamindex::plot_simulation_list(     x = ests[[temp]],     base=models[[temp]],     main=temp,     lwd=2) } dev.off()"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"goals-of-the-original-exercise","dir":"Articles","previous_headings":"","what":"Goals of the original exercise:","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"Practice fitting basic spatiotemporal model. Understand inspect model output. Practice predicting model new data making visualizations predictions. Gain familiarity fitting, comparing interpreting different random field structures. Calculate area-weighted biomass index compare model structure can impact index.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"our-goals-for-this-vignette","dir":"Articles","previous_headings":"","what":"Our goals for this vignette:","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"Fit GAM obtain area-weighted biomass index Fit basic spatiotemporal model (GLMM!) using sdmTMB compare GAM GLMM Check system:","code":"PKG <- c(   \"sdmTMB\", # install.packages(\"sdmTMB\", dependencies = TRUE)   \"mgcv\",    \"gratia\",   \"visreg\",    \"gstat\",   \"dplyr\",    \"ggplot2\",    \"INLA\",   \"prediction\",   \"inlabru\",    \"purrr\")  for (p in PKG) {   if(!require(p,character.only = TRUE)) {       install.packages(p)     require(p,character.only = TRUE)} }  options(ggplot2.continuous.colour = \"viridis\") options(ggplot2.continuous.fill = \"viridis\") theme_set(theme_light()) sessionInfo()"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"work CPUE data yellowfin sole Eastern Bering Sea summer bottom trawl survey. data publicly available FOSS. dataset contains sampling locations (longitude latitude) year. also contains sampling depth meters sample CPUE density units tonnes/km2.","code":"ggplot(data = dat,         mapping = aes(x = longitude_dd, y = latitude_dd, size = cpue_kgha, color = bottom_temperature_c)) +    geom_point(alpha = 0.3)"},{"path":[]},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"add-utm-columns-log-depth-and-year-as-factor","dir":"Articles","previous_headings":"Fit a GAM to spatial data (analogous to spatial-only model in sdmTMB)","what":"Add UTM columns, log depth, and year as factor","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"","code":"dat <- add_utm_columns(dat,                         ll_crs = 4326,                        ll_names = c(\"longitude_dd\", \"latitude_dd\"))  dat$log_depth <- log(dat$depth_m) dat$year_factor <- as.factor(dat$year)  dat[,c(\"X\",\"Y\")] range(dat$X) range(dat$Y)  ggplot(dat, aes(X, Y, size = cpue_kgkm2)) +   geom_point(shape = 21) +   coord_fixed()"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"temporal-effect-plus-spatial-smoother-no-covariates","dir":"Articles","previous_headings":"Fit a GAM to spatial data (analogous to spatial-only model in sdmTMB)","what":"Temporal effect plus spatial smoother, no covariates","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"First, fit GAM without covariates: just year factor spatial smoother \\(s(X,Y)\\). .factor(year) part common component SDMs used generate indices. Get diagnostics perform model checking: Include 2-D smooth space, depth covariate.","code":"start.time <- Sys.time() fit_gam <- gam(   formula = cpue_kgha ~ as.factor(year) +     s(X, Y, k = 50),   family = tw(link = \"log\"),   data = dat )  cat(   \"The GAM took \",   difftime(Sys.time(), start.time, units = \"mins\"),   \" mins to run\" ) gam.check(fit_gam) start.time <- Sys.time() fit_gam_s <- gam(   formula = cpue_kgha ~ s(depth_m) + as.factor(year) +      s(X,Y),    family = tw(link = \"log\"),   data = dat )  cat(\"The GAM took \",      difftime(Sys.time(),start.time, units = \"mins\"),      \"mins to run\")  gam.check(fit_gam_s)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"fit-a-gam-analogous-to-a-spatiotemporal-model-in-sdmtmb","dir":"Articles","previous_headings":"","what":"Fit a GAM analogous to a spatiotemporal model in sdmTMB","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"NOTE: takes long time fit. Include 2-D smooth space year. case, different 2-D smooth year. take much longer fit two. Get diagnostics perform model checking Review console output help verify convergence, whether adequate number basis functions (k). Examine four diagnostic plots. gives different way looking model residuals. top-left Q-Q plot, compares model residuals expected/assumed distribution family. well-fit model’s residuals close 1-1 line, otherwise may - -dispersion present. bottom left histogram residuals. want shape similar distribution family specified. top-right plot residual values function linear predictor. evenly distributed around zero well-fitted model. Finally, bottom-right plot response fitted values. well-fitted model show values near 1-1 line.","code":"start.time <- Sys.time()  fit_gam_st <- gam(   formula = count ~ as.factor(year) +     s(X, Y, by = as.factor(year)),   family = tw(link = \"log\"),   data = dat )  cat(   \"The GAM took \",   difftime(Sys.time(), start.time, units = \"mins\"),   \"mins to run\" ) gam.check(fit_gam_st)"},{"path":[]},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"load-the-grid","dir":"Articles","previous_headings":"Predict to full survey area with new data","what":"Load the grid","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"Extrapolation grid EBS. spatiotemporal data, need grid year. nice tidy little chunk purrr code !","code":"# This is another form of the same grid: load(here::here(\"data/pred_grid_ebs.rda\")) # object: pred_grid_ebs #pred_grid_ebs <- read.csv(here::here(\"data/ebs_2022_epsg3338.csv\"),header = TRUE)  get_crs(dat = pred_grid_ebs,ll_names =c(\"lon\",\"lat\"))  grid <- add_utm_columns(pred_grid_ebs,                         #ll_crs = 32603,                         ll_names = c(\"lon\", \"lat\")) range(grid$X)  # Grid from example #wcvi_grid <- readRDS(here::here(\"data/wcvi-grid.rds\")) grid <- purrr::map_dfr(unique(dat$year), ~ tibble(grid, year = .x))"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"predict-cpue-across-the-grid","dir":"Articles","previous_headings":"Predict to full survey area with new data","what":"Predict CPUE across the grid","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"get predicted Plot predictions survey area. Note: EBS grid irregularly spaced, use geom_point() instead geom_tile() geom_raster().","code":"pred_gam <- predict(fit_gam, type = \"response\", newdata = grid) #This takes a long time. pred_gam_df <- cbind(grid, pred_gam) pred_gam_df$Shape_Area_ha <- pred_gam_df$Shape_Area*0.0001 # original Shape_area is in m^2 pred_gam_df$predicted_tot_grid <- pred_gam_df$Shape_Area_ha*pred_gam_df$pred_gam pred_gam_df |>   filter(year==1999) |> # single year  ggplot(aes(X, Y, color=pred_gam)) +    geom_point(size = 0.1) +    scale_fill_viridis_c() +    #facet_wrap(~year) +    coord_fixed() +   labs(color = expression(CPUE (kg/km^2))) +   theme_light() +   theme(legend.position = \"bottom\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"calculate-biomass-index-from-gam-via-simulation","dir":"Articles","previous_headings":"","what":"Calculate biomass index from GAM via simulation","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"Generally, model-based indices abundance use area grid cell prediction area calculate total index across survey area. simplest way sum predicted biomasses across full grid like :","code":"gam_idx_mt <- pred_gam_df |>    dplyr::group_by(year) |>    summarize(total_wt_mt = sum(predicted_tot_grid)/1000)  head(gam_idx_mt)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"get-uncertainties-for-gam-based-index-by-sampling-from-posteriors","dir":"Articles","previous_headings":"Calculate biomass index from GAM via simulation","what":"Get uncertainties for GAM-based index by sampling from posteriors","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"{gratia} R package evaluating displaying GAM fits. script uses fitted_samples() function, draws fitted values posterior model using Gaussian approximation.","code":"sims <- gratia::fitted_samples(fit_gam, n=10, data=grid,                                 scale=\"response\", seed=9) sims$year <- grid$year[sims$row] sims$area <- rep(pred_gam_df$Shape_Area_ha, times = 10) # matching the # of draws sims$biomass <- sims$fitted * sims$area # expand from density to biomass, given area  level <- 0.95 # specify probability for confidence interval  # Get sum of simulated biomass (density*area) across grid cells, with CI lwr_fn <- function(x) {as.numeric(quantile(x, probs = (1 - level) / 2))} upr_fn <- function(x) {as.numeric(quantile(x, probs = 1 - (1 - level) / 2))}  sims_sum <-  sims %>%    group_by(year,draw) %>%    summarise_at(\"biomass\", list(biomass = sum)) %>%   group_by(year) %>%   summarise_at(\"biomass\", list(est = median, # could use mean                            lwr = lwr_fn,                            upr = upr_fn))"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"index-standardization-using-sdmtmb","dir":"Articles","previous_headings":"","what":"Index standardization using sdmTMB","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"calculate index models, need run predict.sdmTMB() function argument return_tmb_object = TRUE. can run get_index() function extract total biomass calculations standard errors. can set area argument cell_area column km2. case value 4 km2 cells, since grid cells 2 km x 2 km. grid cells fully survey domain (land), feed vector grid areas area argument matched number grid cells. density units tonnes per km2 data, index tonnes. used bias_correction = FALSE speed things , final result want use bias correction. Let’s see much scale index changes bias correction.","code":"p <- predict(fit, newdata = grid, return_tmb_object = TRUE) index <- get_index(p, area = grid$cell_area, bias_correct = FALSE)  ggplot(index, aes(year, est)) +   geom_line() +   geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.4) +   xlab(\"Year\") +   ylab(\"Biomass estimate (tonnes)\") index_c <- get_index(p, area = grid$cell_area, bias_correct = TRUE) index_c$Method <- \"Bias correction\"  bind_rows(index, index_c) %>%   ggplot(aes(year, est, fill = Method)) +   geom_line(aes(colour = Method)) +   geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.4) +   xlab(\"Year\") +   ylab(\"Biomass estimate (tonnes)\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/A_gam_sdmTMB_example.html","id":"calculate-biomass-index-from-gam-via-simulation-1","dir":"Articles","previous_headings":"","what":"Calculate biomass index from GAM via simulation","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"Note approach uses Gaussian approximation posterior, implemented currently gratia package. However, better estimate uncertainty derived sampling actual posterior distribution. However, beyond scope today’s lesson. Plot biomass index:","code":"sims <- gratia::fitted_samples(fit_gam, n=10, newdata=grid,                                 scale=\"response\", seed=9) sims$year <- grid$year[sims$row] sims$biomass <- sims$fitted * 4 # expand from density to biomass, given area  level <- 0.95 # specify probability for confidence interval  # Get sum of simulated biomass (density*area) across grid cells, with CI lwr_fn <- function(x) {as.numeric(quantile(x, probs = (1 - level) / 2))} upr_fn <- function(x) {as.numeric(quantile(x, probs = 1 - (1 - level) / 2))}  sims_sum <-  sims %>%    group_by(year,draw) %>%    summarise_at(\"biomass\", list(biomass = sum)) %>%   group_by(year) %>%   summarise_at(\"biomass\", list(est = median, # could use mean                            lwr = lwr_fn,                            upr = upr_fn)) ggplot(sims_sum, aes(year, est)) + geom_line() +   geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.4) +   xlab('Year') + ylab('Biomass estimate (kg)')"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"goals-of-the-original-exercise","dir":"Articles","previous_headings":"","what":"Goals of the original exercise","title":"","text":"Practice fitting basic spatiotemporal model. Understand inspect model output. Practice predicting model new data making visualizations predictions. Gain familiarity fitting, comparing interpreting different random field structures. Calculate area-weighted biomass index compare model structure can impact index.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"our-goals-for-this-vignette","dir":"Articles","previous_headings":"","what":"Our goals for this vignette:","title":"","text":"Fit GAM obtain area-weighted biomass index Fit basic spatiotemporal model (GLMM!) using sdmTMB compare GAM GLMM Check system:","code":"PKG <- c(   \"sdmTMB\", # install.packages(\"sdmTMB\", dependencies = TRUE)   \"mgcv\",    \"gratia\",   \"visreg\",    \"gstat\",   \"dplyr\",    \"ggplot2\",    \"INLA\",   \"prediction\",   \"inlabru\",    \"purrr\")  for (p in PKG) {   # if(!require(p,character.only = TRUE)) {     # install.packages(p)   require(p,character.only = TRUE)} # }  options(ggplot2.continuous.colour = \"viridis\") options(ggplot2.continuous.fill = \"viridis\") theme_set(theme_light()) sessionInfo() #> R version 4.3.1 (2023-06-16 ucrt) #> Platform: x86_64-w64-mingw32/x64 (64-bit) #> Running under: Windows 10 x64 (build 19045) #>  #> Matrix products: default #>  #>  #> locale: #> [1] LC_COLLATE=English_United States.utf8  #> [2] LC_CTYPE=English_United States.utf8    #> [3] LC_MONETARY=English_United States.utf8 #> [4] LC_NUMERIC=C                           #> [5] LC_TIME=English_United States.utf8     #>  #> time zone: America/Los_Angeles #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #>  [1] purrr_1.0.2       inlabru_2.10.1    fmesher_0.1.5     prediction_0.3.14 #>  [5] ggplot2_3.5.0     dplyr_1.1.4       gstat_2.1-1       visreg_2.7.0      #>  [9] gratia_0.8.2      mgcv_1.9-1        nlme_3.1-164      sdmTMB_0.4.2      #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.4       xfun_0.42          bslib_0.6.1        lattice_0.22-5     #>  [5] vctrs_0.6.5        tools_4.3.1        generics_0.1.3     proxy_0.4-27       #>  [9] tibble_3.2.1       spacetime_1.3-1    fansi_1.0.6        xts_0.13.2         #> [13] pkgconfig_2.0.3    KernSmooth_2.23-22 Matrix_1.6-5       data.table_1.15.0  #> [17] desc_1.4.3         assertthat_0.2.1   lifecycle_1.0.4    compiler_4.3.1     #> [21] stringr_1.5.1      FNN_1.1.4          textshaping_0.3.7  munsell_0.5.0      #> [25] class_7.3-22       htmltools_0.5.7    sass_0.4.8         pillar_1.9.0       #> [29] pkgdown_2.0.7      jquerylib_0.1.4    tidyr_1.3.1        classInt_0.4-10    #> [33] cachem_1.0.8       tidyselect_1.2.0   digest_0.6.34      stringi_1.8.3      #> [37] sf_1.0-15          splines_4.3.1      fastmap_1.1.1      grid_4.3.1         #> [41] colorspace_2.1-0   cli_3.6.2          magrittr_2.0.3     patchwork_1.2.0    #> [45] utf8_1.2.4         e1071_1.7-14       withr_3.0.0        scales_1.3.0       #> [49] sp_2.1-3           rmarkdown_2.25     ragg_1.2.7         zoo_1.8-12         #> [53] mvnfast_0.2.8      memoise_2.0.1      evaluate_0.23      knitr_1.45         #> [57] rlang_1.1.3        Rcpp_1.0.12        glue_1.7.0         DBI_1.2.2          #> [61] rstudioapi_0.15.0  jsonlite_1.8.8     R6_2.5.1           units_0.8-5        #> [65] systemfonts_1.0.5  fs_1.6.3           intervals_0.15.4"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"","text":"work CPUE data yellowfin sole Eastern Bering Sea summer bottom trawl survey. data publicly available FOSS.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"add-utm-columns-log-depth-and-year-as-factor","dir":"Articles","previous_headings":"The data","what":"Add UTM columns, log depth, and year as factor","title":"","text":"dataset contains sampling locations (longitude latitude) year. also contains sampling depth meters sample CPUE density units tonnes/km2.","code":"dat <- add_utm_columns(dat,                         ll_crs = 4326,                        ll_names = c(\"longitude_dd_start\", \"latitude_dd_start\"))  dat$log_depth <- log(dat$depth_m) dat$year_factor <- as.factor(dat$year)  dat[,c(\"X\",\"Y\")] #>                   X        Y #> 1      184.85278399 6404.914 #> 2      409.66490750 6430.689 #> 3      448.83980512 6278.197 #> 4      331.88136569 6505.247 #> 5      411.47951593 6391.906 #> 6      372.66018052 6540.580 #> 7      258.37151431 6624.104 #> 8      481.24129629 6576.616 #> 9      296.33568203 6396.376 #> 10     561.21128809 6242.316 #> 11     446.36895426 6501.131 #> 12     702.71775216 6458.219 #> 13     184.14211814 6329.106 #> 14     447.28744464 6393.263 #> 15     447.01981266 6503.019 #> 16     259.70116277 6437.682 #> 17     165.61087756 6422.996 #> 18     447.62379849 6316.594 #> 19     333.61822136 6619.426 #> 20     709.55434711 6283.431 #> 21     525.88310307 6205.028 #> 22     332.85353582 6507.722 #> 23     446.54249702 6427.823 #> 24     673.67818658 6248.287 #> 25     149.67833831 6557.122 #> 26     203.13824747 6345.017 #> 27     446.52773410 6354.409 #> 28     -16.67632881 6705.819 #> 29     296.13864274 6360.552 #> 30     409.24054277 6538.693 #> 31     564.64143530 6133.081 #> 32     408.56705050 6464.860 #> 33     562.07966178 6318.073 #> 34     523.53150374 6317.082 #> 35     595.43304563 6466.272 #> 36     223.94765055 6402.540 #> 37     672.80386965 6283.241 #> 38     524.32107090 6318.885 #> 39     221.83289385 6548.484 #> 40     485.05849581 6392.352 #> 41      77.77323817 6786.752 #> 42     781.92453390 6401.140 #> 43     856.33406566 6410.052 #> 44     279.11527486 6303.108 #> 45     748.80934118 6471.943 #> 46     447.67686513 6428.106 #> 47     448.03189659 6392.899 #> 48     406.09913887 6577.867 #> 49     483.19124942 6465.301 #> 50     707.55346475 6433.550 #> 51     150.87820829 6705.609 #> 52     278.31553970 6417.471 #> 53      17.62643754 6833.015 #> 54     374.12509858 6356.211 #> 55     558.07405097 6464.849 #> 56     597.18622162 6355.953 #> 57     411.01618949 6317.234 #> 58     336.93763238 6692.114 #> 59     110.16506205 6707.925 #> 60     184.98921950 6591.689 #> 61      37.98014927 6755.506 #> 62     185.96584423 6329.673 #> 63     337.50200618 6283.149 #> 64     599.40161688 6133.257 #> 65     336.14024858 6321.177 #> 66     205.19563128 6419.236 #> 67     168.86384385 6426.655 #> 68     709.03613067 6399.355 #> 69     371.73253656 6616.689 #> 70     185.02847934 6476.365 #> 71     334.08846745 6358.746 #> 72     185.67173329 6629.722 #> 73     602.07668457 6134.342 #> 74      37.65292650 6642.175 #> 75     743.96010509 6398.128 #> 76     297.62676670 6358.457 #> 77     447.26519057 6542.267 #> 78     169.65197289 6342.023 #> 79     147.43644350 6370.917 #> 80     114.96379011 6783.644 #> 81     745.92303015 6437.153 #> 82     296.86945449 6318.878 #> 83     274.85878385 6377.843 #> 84     522.11582766 6352.867 #> 85     298.50456105 6693.210 #> 86     520.95002033 6354.117 #> 87     635.93241802 6172.831 #> 88     372.14657613 6469.616 #> 89     183.59067966 6476.189 #> 90     370.74265273 6580.790 #> 91     407.13834603 6613.146 #> 92     297.19673771 6358.044 #> 93     633.42712971 6207.853 #> 94     114.61065912 6783.709 #> 95     559.97893696 6279.686 #> 96     820.47123808 6368.262 #> 97     486.30390344 6280.978 #> 98     526.80382972 6205.142 #> 99     333.99267925 6619.109 #> 100    410.33885919 6428.083 #> 101    783.09513745 6362.256 #> 102    894.03688243 6446.971 #> 103     56.85666676 6656.743 #> 104    483.63977504 6576.592 #> 105    520.17106301 6539.084 #> 106    519.29174717 6502.056 #> 107    748.69891385 6252.833 #> 108    222.81775539 6622.695 #> 109    561.93492491 6171.109 #> 110    560.07833127 6319.212 #> 111    259.61595878 6325.730 #> 112    110.64996952 6561.043 #> 113     94.34334240 6656.718 #> 114    709.19789446 6286.663 #> 115    783.85833213 6289.060 #> 116    110.95202964 6709.855 #> 117    184.79106873 6405.541 #> 118    187.75680508 6366.338 #> 119    222.59045560 6400.492 #> 120    -35.33244692 6728.544 #> 121    634.64141622 6505.935 #> 122    410.43727446 6392.091 #> 123    260.90504690 6697.251 #> 124    297.28067003 6621.959 #> 125    446.29104303 6428.957 #> 126    703.04062214 6457.134 #> 127    521.32236110 6467.079 #> 128    221.95172747 6698.396 #> 129    334.36613172 6393.711 #> 130    597.52816102 6357.601 #> 131    520.26299671 6501.281 #> 132    183.08815283 6591.167 #> 133    296.38348439 6621.150 #> 134    371.56739935 6470.087 #> 135    260.40875560 6324.345 #> 136    445.86154962 6576.665 #> 137    445.80234030 6465.591 #> 138    747.05268809 6290.768 #> 139    260.92279496 6285.846 #> 140    670.27255390 6208.778 #> 141    165.44703364 6388.166 #> 142    896.23466104 6409.576 #> 143    522.76665904 6393.634 #> 144    600.34179253 6169.467 #> 145    524.50651225 6244.810 #> 146    147.93941867 6372.047 #> 147    598.59841307 6242.826 #> 148    596.57641806 6354.741 #> 149    483.16896240 6577.060 #> 150    855.16061744 6439.875 #> 151    747.52402383 6250.894 #> 152    637.05160327 6170.736 #> 153    856.45093677 6333.752 #> 154    485.26482438 6426.531 #> 155    708.45679512 6400.036 #> 156    221.43506250 6401.974 #> 157    335.13199241 6504.754 #> 158    671.40647329 6430.186 #> 159    113.39175053 6671.963 #> 160   -139.07029708 6857.335 #> 161     95.15999539 6693.467 #> 162    596.44432273 6463.830 #> 163    222.21044807 6511.641 #> 164    893.30564615 6446.371 #> 165    187.21144764 6703.199 #> 166    222.47199029 6550.847 #> 167    408.69121308 6581.465 #> 168    597.43683430 6241.969 #> 169    819.08838889 6481.115 #> 170    112.30329262 6672.562 #> 171    223.77399660 6439.197 #> 172    597.87770925 6242.927 #> 173    221.95554284 6514.226 #> 174    223.07422677 6589.358 #> 175    186.82080223 6665.709 #> 176    597.90920807 6354.856 #> 177    448.48912968 6390.955 #> 178      5.71887473 6798.128 #> 179    148.34532446 6480.556 #> 180    411.64923942 6280.624 #> 181    260.06975178 6623.117 #> 182    745.80673370 6321.568 #> 183    373.46205250 6394.016 #> 184    707.92227334 6248.182 #> 185    794.57807352 6471.610 #> 186    671.34292428 6358.262 #> 187    673.15084675 6468.086 #> 188    200.82103042 6382.360 #> 189    525.33150883 6244.628 #> 190    371.20130723 6688.770 #> 191     97.19877808 6691.187 #> 192    202.22251921 6310.656 #> 193    446.90810040 6465.493 #> 194    411.90941097 6244.240 #> 195    556.82424326 6542.719 #> 196    148.74243130 6632.282 #> 197    895.79565541 6373.453 #> 198     57.39681495 6696.467 #> 199    299.02376206 6546.784 #> 200    183.28568696 6478.866 #> 201     35.98322022 6605.996 #> 202    559.48880088 6206.379 #> 203    185.91569477 6365.470 #> 204    -34.98404064 6725.234 #> 205    147.61758071 6554.895 #> 206    333.28405434 6471.876 #> 207    708.87223364 6364.374 #> 208    280.47406744 6340.859 #> 209    147.99903949 6629.813 #> 210    334.95691094 6579.186 #> 211    112.48544245 6709.110 #> 212     74.68497017 6676.967 #> 213    408.64479513 6502.646 #> 214    221.64633583 6290.673 #> 215    672.79353317 6245.844 #> 216    447.78377243 6355.016 #> 217     73.12649079 6414.335 #> 218    336.40068009 6281.844 #> 219     94.03223093 6692.568 #> 220     13.66329587 6696.480 #> 221    600.08002651 6135.746 #> 222      0.32545236 6835.375 #> 223    599.02027046 6245.464 #> 224     92.70037094 6692.417 #> 225    410.76081186 6317.852 #> 226    223.30337987 6623.598 #> 227    111.56700272 6485.375 #> 228    446.50394308 6541.424 #> 229    223.15121113 6362.957 #> 230    524.24526606 6316.268 #> 231    520.10604243 6539.429 #> 232    410.13238336 6393.787 #> 233    638.21631316 6393.733 #> 234      3.61453858 6909.834 #> 235    -32.48747564 6803.333 #> 236    598.08203311 6283.375 #> 237    525.76630196 6282.444 #> 238    148.23219128 6481.830 #> 239    184.06537678 6440.593 #> 240    221.85507932 6399.967 #> 241    166.02235920 6426.260 #> 242    709.71800946 6247.803 #> 243    895.01715430 6409.193 #> 244    447.97475789 6320.300 #> 245    486.14055761 6391.847 #> 246    224.14661528 6699.126 #> 247    743.95211551 6364.165 #> 248    258.32783934 6472.333 #> 249    522.95739827 6427.636 #> 250    203.03362930 6309.530 #> 251    279.79185063 6303.921 #> 252    185.88990971 6590.118 #> 253    557.79688404 6541.968 #> 254    600.73605095 6170.791 #> 255    525.43510099 6279.268 #> 256    294.55854908 6655.220 #> 257    334.45496651 6545.202 #> 258    783.16447210 6439.778 #> 259    447.00826345 6464.883 #> 260    445.53948291 6575.839 #> 261    481.75549129 6575.266 #> 262    165.58359000 6386.887 #> 263    445.76949664 6463.670 #> 264    598.05010149 6244.925 #> 265     55.42231036 6698.529 #> 266    185.95433087 6626.322 #> 267    484.85893665 6393.377 #> 268    597.49892302 6355.213 #> 269    450.66091976 6170.930 #> 270    110.83473037 6333.494 #> 271    857.14781212 6368.523 #> 272    223.52708282 6289.312 #> 273    332.27921480 6579.210 #> 274    277.13669176 6416.042 #> 275    373.35999956 6321.231 #> 276    671.83185263 6250.699 #> 277    632.83637396 6432.294 #> 278    558.62889846 6428.231 #> 279    517.54623069 6532.835 #> 280    147.77477049 6370.372 #> 281    489.01671995 6132.752 #> 282    373.20343502 6281.898 #> 283     41.89785870 6793.272 #> 284     72.85207489 6564.564 #> 285    258.39767935 6582.869 #> 286    259.47282201 6623.950 #> 287    782.63197039 6439.452 #> 288    894.76022200 6449.377 #> 289    147.37624883 6443.241 #> 290    260.09549665 6624.562 #> 291    279.22357825 6305.119 #> 292    635.95742971 6463.617 #> 293    481.61484103 6577.604 #> 294    373.09731992 6357.126 #> 295    710.33939491 6322.857 #> 296    524.09439527 6318.494 #> 297     55.78928089 6697.141 #> 298    371.16942236 6691.242 #> 299    222.63564278 6624.050 #> 300    185.38060571 6629.517 #> 301    147.65939965 6593.513 #> 302    523.17552362 6390.857 #> 303    745.99871830 6286.452 #> 304    446.45405331 6539.452 #> 305    223.69107758 6698.719 #> 306     42.29347380 6791.664 #> 307    370.74328217 6614.542 #> 308    203.09058723 6344.945 #> 309    856.84570820 6371.969 #> 310    259.53089494 6511.867 #> 311    410.97153658 6358.075 #> 312    672.01767314 6432.409 #> 313    110.47663982 6449.942 #> 314    410.68387804 6354.266 #> 315      1.56406758 6837.124 #> 316    112.01381484 6747.439 #> 317    238.85401383 6344.810 #> 318    261.39449736 6693.060 #> 319    148.17447310 6590.941 #> 320    148.17300372 6483.461 #> 321    148.74470156 6776.087 #> 322    447.92296540 6353.461 #> 323    223.62680541 6551.680 #> 324    221.76600195 6514.139 #> 325     72.97484655 6565.608 #> 326    598.55141083 6168.847 #> 327    183.71901817 6553.327 #> 328    556.11042915 6579.907 #> 329    372.31646383 6355.225 #> 330    482.69755212 6467.442 #> 331    410.14559197 6355.240 #> 332    275.97236484 6415.196 #> 333    297.15115273 6506.275 #> 334    -33.80450021 6841.395 #> 335    782.87856151 6328.609 #> 336    633.95636670 6395.889 #> 337    485.03795980 6430.698 #> 338    558.90552044 6317.843 #> 339    449.80974665 6242.652 #> 340     53.62902724 6621.866 #> 341      2.27759987 6759.070 #> 342    147.37457027 6520.240 #> 343    370.43207449 6577.899 #> 344    335.50432613 6355.919 #> 345    -35.69925542 6727.525 #> 346    260.03278004 6400.734 #> 347    187.88311023 6700.187 #> 348    522.94503663 6356.765 #> 349     20.13963973 6662.391 #> 350    445.86854878 6600.258 #> 351    671.75437667 6394.747 #> 352    634.25732444 6468.741 #> 353    281.27945497 6343.491 #> 354    111.50063036 6446.182 #> 355    412.55049082 6243.354 #> 356    331.23109022 6582.751 #> 357    259.18792393 6363.305 #> 358    333.83803169 6468.118 #> 359    111.78520525 6598.215 #> 360    374.22766878 6244.704 #> 361    259.55688421 6658.304 #> 362    185.09915657 6591.658 #> 363    335.74385676 6396.738 #> 364    336.49583934 6288.032 #> 365    148.30465111 6408.264 #> 366    636.29102950 6281.736 #> 367    483.85905379 6540.829 #> 368    446.10116602 6501.495 #> 369    487.65820042 6244.499 #> 370    530.64411850 6137.519 #> 371    373.87863234 6284.977 #> 372    370.93553312 6580.687 #> 373    334.38893412 6431.047 #> 374    -32.82641260 6838.361 #> 375    335.51517692 6284.717 #> 376    147.34229229 6443.596 #> 377    111.56298470 6596.353 #> 378     93.25997306 6694.455 #> 379    488.56334804 6206.697 #> 380     74.94680123 6639.580 #> 381    594.17735922 6538.554 #> 382      0.74457137 6873.620 #> 383    520.32822253 6540.987 #> 384    259.33599662 6657.887 #> 385     79.21826617 6787.815 #> 386    638.58247283 6282.682 #> 387    260.23215457 6324.650 #> 388    519.29294124 6505.907 #> 389    297.88010664 6510.181 #> 390    111.39694151 6634.630 #> 391    707.66042426 6357.051 #> 392    635.38560362 6282.191 #> 393    186.17339410 6402.734 #> 394    335.12973477 6543.643 #> 395    185.34563798 6517.855 #> 396    296.18474264 6546.893 #> 397    371.98908223 6466.372 #> 398    224.33634505 6327.710 #> 399    601.92560135 6170.668 #> 400     76.50703736 6674.873 #> 401    526.01540991 6098.253 #> 402    521.02033036 6466.411 #> 403    857.88425762 6334.157 #> 404    634.19032339 6394.918 #> 405    259.02820218 6509.040 #> 406    748.84025878 6251.848 #> 407    334.08651901 6504.736 #> 408    408.84404697 6576.564 #> 409    559.42305258 6242.843 #> 410    148.56371165 6517.625 #> 411    222.52257168 6478.128 #> 412    373.19605034 6690.543 #> 413    222.76444573 6585.851 #> 414    148.77534643 6595.233 #> 415      0.02546194 6723.851 #> 416    566.16492431 6206.973 #> 417    296.24558372 6655.926 #> 418    746.87727924 6248.468 #> 419    375.50408145 6244.259 #> 420    259.24242748 6582.536 #> 421    412.30982765 6278.840 #> 422    147.41831228 6445.652 #> 423    110.96540499 6557.609 #> 424    335.28625444 6396.979 #> 425    562.50021886 6203.769 #> 426    527.23246456 6168.102 #> 427     10.10426821 6909.726 #> 428    485.79136078 6354.349 #> 429    558.90484467 6464.574 #> 430    297.76734943 6320.681 #> 431    562.58655579 6170.970 #> 432    302.35503225 6284.375 #> 433    857.47893801 6334.325 #> 434     55.72421508 6697.768 #> 435    373.13792836 6466.713 #> 436    150.39648242 6704.952 #> 437    783.07769557 6439.422 #> 438    746.65445516 6473.192 #> 439      1.03686465 6723.654 #> 440    148.37599629 6668.001 #> 441    238.69724028 6307.614 #> 442    599.79408602 6206.380 #> 443    559.03413705 6430.817 #> 444    485.32091192 6390.699 #> 445      5.37432890 6797.927 #> 446    222.05538009 6363.198 #> 447    485.81460016 6280.894 #> 448    336.33790275 6282.879 #> 449    410.20812697 6355.070 #> 450    745.01724964 6397.082 #> 451    298.14254670 6545.893 #> 452    445.58373836 6504.462 #> 453    708.69979860 6396.477 #> 454    634.35959624 6357.476 #> 455    -64.18455586 6921.508 #> 456    708.31372884 6246.525 #> 457    408.79075394 6539.296 #> 458    372.02029738 6431.931 #> 459    223.79355306 6513.921 #> 460    334.51368413 6545.110 #> 461    598.97405570 6279.796 #> 462    483.35588308 6466.840 #> 463    895.82066095 6372.322 #> 464    745.49591816 6397.673 #> 465    490.21107453 6058.258 #> 466    708.71287220 6397.265 #> 467    483.99744429 6503.178 #> 468    896.52371062 6374.878 #> 469    489.52576725 6168.662 #> 470    523.12278314 6355.124 #> 471    333.56324127 6620.115 #> 472     53.48750259 6623.579 #> 473    446.26124015 6539.802 #> 474    487.41732550 6350.353 #> 475    445.87538607 6540.846 #> 476    334.86279961 6393.701 #> 477    148.56643717 6664.416 #> 478    672.77843036 6323.356 #> 479    593.86467543 6538.286 #> 480    746.97579488 6468.131 #> 481    783.68209541 6329.383 #> 482    522.85291642 6393.776 #> 483    410.69045144 6393.582 #> 484    525.53921405 6282.412 #> 485    524.59432978 6354.767 #> 486    371.46158336 6506.849 #> 487    375.72046978 6691.111 #> 488    202.31587275 6309.238 #> 489    562.18255765 6133.403 #> 490    597.90724374 6243.473 #> 491    407.69948939 6541.048 #> 492    185.53883598 6404.203 #> 493    671.48878248 6210.071 #> 494    597.45665272 6319.420 #> 495    600.06827593 6132.036 #> 496    597.84263257 6317.635 #> 497    371.27700908 6319.133 #> 498    818.77165866 6439.706 #> 499     76.49722414 6750.540 #> 500    637.29720221 6171.633 #> 501    486.51789117 6281.779 #> 502    296.19924013 6655.007 #> 503    450.28698885 6242.473 #> 504    895.55822860 6409.783 #> 505    484.68179716 6392.266 #> 506     92.77201127 6693.098 #> 507    671.10670629 6360.206 #> 508    558.35361343 6317.299 #> 509    185.44953287 6589.052 #> 510    483.03973599 6466.839 #> 511    748.90058270 6250.946 #> 512    409.18815324 6465.412 #> 513    671.60250399 6248.200 #> 514    202.50110637 6309.277 #> 515    637.21106428 6171.510 #> 516    560.68970420 6316.196 #> 517    490.06606076 6171.108 #> 518    336.23103418 6321.213 #> 519    333.30792287 6579.053 #> 520    189.14537590 6291.795 #> 521    148.65034494 6630.107 #> 522    443.80770087 6611.816 #> 523    599.16053930 6280.654 #> 524    670.50505121 6466.018 #> 525    491.73175196 6062.492 #> 526    524.44297597 6430.196 #> 527    260.02991344 6621.048 #> 528    203.71111095 6422.321 #> 529    296.80791694 6399.476 #> 530    819.85871983 6402.927 #> 531    519.50363116 6505.274 #> 532    373.06609745 6317.582 #> 533    148.65496904 6596.071 #> 534    185.54929348 6589.289 #> 535    856.70555779 6407.212 #> 536    485.00305877 6429.743 #> 537     42.25836994 6868.091 #> 538    447.37934662 6390.974 #> 539    597.41877140 6355.037 #> 540    222.42603236 6290.632 #> 541    279.19500027 6342.382 #> 542    260.80258317 6287.295 #> 543    259.39137488 6620.777 #> 544    556.96823743 6578.002 #> 545    563.18929387 6131.090 #> 546      2.82725887 6910.243 #> 547      4.82720914 6910.407 #> 548    745.37838939 6435.519 #> 549    296.37913140 6621.328 #> 550    113.15273433 6784.723 #> 551    334.21281359 6431.225 #> 552    296.98900526 6323.059 #> 553    485.94537943 6352.385 #> 554     57.07057666 6659.984 #> 555    519.99387015 6578.283 #> 556    635.21337776 6356.631 #> 557    447.38746395 6390.818 #> 558    855.21201994 6330.193 #> 559    222.24380587 6587.984 #> 560    221.47732306 6440.135 #> 561    279.27746642 6341.954 #> 562     36.88912878 6604.247 #> 563    280.03528927 6304.201 #> 564    598.41719249 6282.960 #> 565    238.44662356 6307.949 #> 566    109.51109748 6522.924 #> 567    111.84284976 6748.661 #> 568     79.76582557 6787.637 #> 569    186.24253049 6439.236 #> 570    558.70488906 6205.495 #> 571    597.81539057 6355.153 #> 572    745.58602254 6398.032 #> 573    -32.88193086 6878.552 #> 574    298.09657639 6434.687 #> 575    370.73823108 6578.241 #> 576    559.09728630 6318.882 #> 577    446.78283887 6427.132 #> 578    634.12455305 6320.924 #> 579    600.82930506 6209.555 #> 580    110.64827887 6708.324 #> 581    857.46863591 6408.286 #> 582    333.80292016 6580.812 #> 583     42.97064196 6792.034 #> 584    485.81453861 6355.826 #> 585    559.81997123 6504.577 #> 586    634.24033732 6395.227 #> 587    149.03984051 6442.976 #> 588    295.89488222 6617.019 #> 589   -109.21523870 6816.882 #> 590    488.90529758 6242.267 #> 591    819.81478139 6441.604 #> 592     55.10494708 6658.144 #> 593    708.68084936 6359.776 #> 594    222.19173596 6548.485 #> 595    372.98433105 6318.844 #> 596    750.42981954 6473.785 #> 597    447.24028684 6280.934 #> 598    596.29018152 6356.923 #> 599    184.88009422 6518.181 #> 600    407.58193327 6614.596 #> 601    334.07442767 6471.639 #> 602    486.61062151 6242.181 #> 603    527.61932822 6207.652 #> 604    523.33561750 6242.260 #> 605    371.51041383 6610.758 #> 606    219.48322314 6698.911 #> 607    297.70550269 6506.972 #> 608    895.00661936 6410.378 #> 609    448.62954011 6280.614 #> 610    258.59834752 6435.679 #> 611    782.09173166 6475.018 #> 612    148.53448934 6594.570 #> 613    294.95919974 6658.488 #> 614    166.78360032 6424.479 #> 615    490.36742322 6062.328 #> 616    222.41399724 6698.090 #> 617    223.03879270 6663.014 #> 618    524.31755293 6172.367 #> 619    597.54332103 6354.183 #> 620    222.64665303 6514.833 #> 621    297.00513565 6432.167 #> 622     41.06147588 6829.783 #> 623    256.48570306 6400.886 #> 624    523.46683848 6392.893 #> 625     94.92703616 6655.943 #> 626    482.88979174 6501.118 #> 627    673.09213860 6244.287 #> 628    599.54300106 6208.658 #> 629    447.12586982 6356.708 #> 630    484.52767523 6392.830 #> 631    372.01790530 6431.857 #> 632    819.77083566 6405.567 #> 633    485.01545383 6392.165 #> 634    185.43508503 6591.911 #> 635    709.05056829 6395.682 #> 636    410.45834121 6393.931 #> 637    148.57448693 6741.366 #> 638    558.15630993 6465.270 #> 639    596.01467665 6428.226 #> 640    744.61333320 6361.582 #> 641    745.62393342 6397.536 #> 642    520.57230546 6504.574 #> 643    784.39921981 6328.070 #> 644    335.15595942 6692.208 #> 645    184.47377709 6402.565 #> 646     -0.15245171 6873.619 #> 647    559.05548646 6319.344 #> 648    297.07893796 6506.729 #> 649    114.93692626 6633.012 #> 650    187.47440468 6367.466 #> 651    595.92622755 6430.036 #> 652    559.92662979 6209.611 #> 653     42.58003746 6902.142 #> 654    485.71865849 6351.626 #> 655    220.82735505 6290.633 #> 656    334.66424337 6578.748 #> 657    183.77226023 6442.889 #> 658    894.89331973 6445.876 #> 659     40.43194571 6756.540 #> 660    557.67464848 6501.013 #> 661    633.35812174 6467.002 #> 662    818.36156922 6477.098 #> 663     37.97025513 6753.794 #> 664    279.81796120 6343.323 #> 665    563.80854045 6171.915 #> 666    744.81639379 6435.491 #> 667    445.70785533 6575.750 #> 668    -16.45803820 6707.114 #> 669    710.13580257 6471.872 #> 670    634.92133797 6392.865 #> 671    335.21103726 6359.193 #> 672    743.87490794 6360.300 #> 673    524.34570194 6318.517 #> 674    372.30268626 6357.990 #> 675    257.01392580 6585.480 #> 676    260.65189502 6399.854 #> 677    817.79766607 6481.177 #> 678    373.77658984 6690.694 #> 679    148.24624465 6443.480 #> 680    599.71085009 6208.143 #> 681    446.43312530 6578.848 #> 682    261.28313151 6285.375 #> 683    335.30078125 6362.094 #> 684    146.97272091 6371.130 #> 685    709.85286279 6395.430 #> 686    635.23805862 6318.142 #> 687    186.56045842 6328.683 #> 688    524.54293587 6354.603 #> 689    820.77661188 6441.804 #> 690     58.94296300 6658.404 #> 691    148.58762039 6369.742 #> 692    407.42215572 6540.797 #> 693    482.26630485 6542.097 #> 694    782.61651736 6439.953 #> 695    486.04351028 6318.949 #> 696    411.63890915 6282.436 #> 697    446.68791735 6391.265 #> 698    275.27443692 6379.384 #> 699    184.87773032 6368.083 #> 700    185.24674508 6554.765 #> 701    334.08897205 6467.810 #> 702    708.48370681 6397.050 #> 703    109.87712137 6373.318 #> 704    894.40330679 6446.578 #> 705    295.08400793 6321.816 #> 706     25.65081528 6699.740 #> 707    523.03691172 6355.942 #> 708    148.38572561 6369.190 #> 709    745.66251003 6400.313 #> 710    524.65686008 6277.219 #> 711    370.40001851 6354.500 #> 712    516.70626966 6502.879 #> 713    632.00803246 6169.420 #> 714    333.83179351 6505.316 #> 715    257.98159030 6324.232 #> 716    296.55019204 6547.479 #> 717     42.00956172 6792.117 #> 718    187.11742025 6663.723 #> 719    409.44916569 6428.109 #> 720    145.89446718 6519.647 #> 721    109.71666842 6523.230 #> 722    406.88628369 6540.981 #> 723    410.80434519 6316.682 #> 724    296.40422175 6509.064 #> 725    259.44463800 6660.208 #> 726    645.97206617 6244.925 #> 727    557.09063508 6577.771 #> 728    149.53460458 6333.286 #> 729    409.13027186 6542.707 #> 730    557.71293827 6505.083 #> 731    -69.81211273 6887.207 #> 732    408.02055385 6616.682 #> 733    258.10229093 6325.600 #> 734     75.34492790 6675.429 #> 735    671.27333354 6395.708 #> 736    523.39082382 6353.196 #> 737    708.42724776 6398.075 #> 738    490.17956455 6094.224 #> 739    185.51230258 6552.023 #> 740    109.92560809 6447.716 #> 741     80.64188377 6787.362 #> 742    333.15743517 6504.304 #> 743    110.78735332 6486.274 #> 744    671.53744332 6396.015 #> 745    782.85757716 6440.024 #> 746    221.80982687 6402.011 #> 747    525.43733886 6244.193 #> 748    556.22470563 6578.261 #> 749    371.53140362 6469.038 #> 750    484.91497369 6357.188 #> 751    111.78604611 6598.390 #> 752    558.69285552 6316.555 #> 753    184.79406202 6514.651 #> 754     42.02653159 6866.323 #> 755    820.70641542 6405.079 #> 756    823.10115527 6331.514 #> 757    794.84841012 6471.121 #> 758    297.16022751 6395.288 #> 759    334.19661949 6359.348 #> 760    149.46703203 6778.797 #> 761    595.94307208 6502.688 #> 762    372.36746614 6358.600 #> 763    819.73645203 6404.966 #> 764    112.13144793 6746.109 #> 765    489.54111944 6130.822 #> 766     36.74593511 6755.860 #> 767    259.11966885 6475.366 #> 768    673.16665862 6247.020 #> 769    176.28458731 6389.424 #> 770    671.46044610 6358.565 #> 771    671.25452199 6358.444 #> 772    785.10760934 6365.895 #> 773    337.09913862 6285.149 #> 774    636.25671247 6170.144 #> 775    333.83934219 6579.253 #> 776    117.11217266 6731.638 #> 777    634.11649141 6319.275 #> 778    561.32989303 6324.928 #> 779    525.12678481 6242.660 #> 780    221.76870264 6362.536 #> 781    598.89313861 6280.628 #> 782    745.72942256 6398.388 #> 783   -109.49210510 6739.514 #> 784    371.39100603 6434.146 #> 785    295.84168110 6433.001 #> 786    371.19794903 6576.684 #> 787    110.74642391 6635.674 #> 788    412.10019002 6279.610 #> 789    488.03434543 6244.178 #> 790    634.68567941 6320.413 #> 791    489.77314473 6060.808 #> 792    242.17135326 6420.303 #> 793    165.67277376 6387.187 #> 794    184.38214708 6514.567 #> 795    445.77422643 6541.697 #> 796    636.89797846 6245.638 #> 797    594.40807366 6542.735 #> 798    277.29852757 6414.850 #> 799    110.35293569 6709.452 #> 800    148.42642957 6519.731 #> 801    -30.70055576 6916.319 #> 802    370.62983418 6578.253 #> 803    239.09285568 6307.053 #> 804     55.42527690 6699.149 #> 805    110.32990200 6521.636 #> 806    599.44411295 6243.071 #> 807    412.08249603 6279.732 #> 808    445.11297356 6577.561 #> 809    222.31679266 6511.663 #> 810    259.52773728 6400.755 #> 811    336.59550344 6319.397 #> 812     94.63805312 6653.486 #> 813    446.13347703 6576.455 #> 814    166.47650627 6389.359 #> 815    558.61625768 6354.610 #> 816    410.56684800 6353.320 #> 817    185.07524537 6475.950 #> 818    145.72433815 6444.085 #> 819    239.49789834 6342.490 #> 820     13.99643272 6698.883 #> 821    151.44582187 6706.422 #> 822    526.43017854 6205.239 #> 823    708.37986605 6320.314 #> 824    748.99093595 6252.174 #> 825    822.09133866 6366.859 #> 826    632.98336444 6390.562 #> 827    222.76171269 6589.603 #> 828     38.41340249 6681.515 #> 829    670.58494287 6431.271 #> 830    410.12208770 6615.535 #> 831     76.34207855 6751.726 #> 832    595.75291573 6428.658 #> 833    745.48665768 6397.826 #> 834    525.53138101 6245.003 #> 835    597.31657197 6354.522 #> 836    374.40731583 6541.557 #> 837    184.61071395 6329.307 #> 838    785.75439828 6289.450 #> 839    596.98355606 6354.694 #> 840    637.27454050 6208.089 #> 841    297.14927222 6469.743 #> 842    408.37844444 6613.720 #> 843    559.20260460 6468.076 #> 844    633.29847739 6469.232 #> 845    560.21939603 6280.149 #> 846    205.60720576 6347.189 #> 847    298.02158807 6359.966 #> 848    182.47307384 6590.242 #> 849    600.51237756 6206.754 #> 850    635.24243552 6357.539 #> 851    819.61154360 6402.385 #> 852    147.62751729 6480.564 #> 853    409.09572645 6503.014 #> 854    560.16071473 6390.211 #> 855    595.60524385 6502.663 #> 856      8.61226130 6796.687 #> 857    112.92539395 6488.782 #> 858    113.92666363 6599.172 #> 859    148.12927846 6555.015 #> 860    222.23208704 6365.353 #> 861    486.92462722 6354.216 #> 862    745.92105298 6287.074 #> 863    371.86867482 6467.032 #> 864    748.37440768 6324.974 #> 865     77.14057284 6785.273 #> 866    147.05894049 6520.193 #> 867    259.45665155 6396.248 #> 868    183.78564571 6554.419 #> 869    186.53872194 6371.867 #> 870    410.02075255 6354.162 #> 871    409.69065395 6539.908 #> 872    481.86917013 6504.277 #> 873    783.15218823 6364.773 #> 874    525.44493352 6170.799 #> 875    481.81588206 6575.988 #> 876      3.24808474 6757.694 #> 877     21.15651925 6668.021 #> 878    563.64153633 6134.235 #> 879    794.74218816 6469.519 #> 880    564.11659011 6350.411 #> 881     36.75971466 6757.378 #> 882    147.13999600 6705.081 #> 883    521.70308941 6429.634 #> 884    297.59540942 6510.436 #> 885    371.72492346 6614.001 #> 886    783.55899929 6289.394 #> 887    260.35605033 6437.954 #> 888     54.96166372 6657.561 #> 889    784.50050022 6324.110 #> 890    784.88690761 6289.962 #> 891    490.40058877 6092.873 #> 892    522.53930655 6428.904 #> 893    708.53299660 6358.274 #> 894     94.26547211 6654.510 #> 895    296.67418344 6396.416 #> 896    221.63071462 6511.685 #> 897    297.06487205 6360.482 #> 898    370.52164452 6466.817 #> 899    482.71375360 6501.598 #> 900    -34.09743039 6840.556 #> 901    636.17459128 6209.200 #> 902    818.11923621 6442.457 #> 903    520.64622827 6503.756 #> 904    296.93888098 6393.987 #> 905     78.45385710 6673.885 #> 906    898.23824551 6372.578 #> 907    -68.43025596 6882.093 #> 908    448.53412102 6283.331 #> 909    597.34342298 6319.455 #> 910    520.69599170 6540.959 #> 911    558.83207970 6541.060 #> 912    147.77133224 6629.461 #> 913    237.71656275 6381.666 #> 914     74.05172948 6599.710 #> 915    260.09561546 6550.567 #> 916    709.71488090 6395.220 #> 917    446.53690982 6468.011 #> 918    225.98734758 6698.563 #> 919    448.27551892 6282.378 #> 920    297.16526373 6360.099 #> 921    374.74832761 6578.909 #> 922    707.24489737 6432.159 #> 923    372.86915447 6392.758 #> 924    203.77896183 6383.664 #> 925    372.81559815 6282.600 #> 926    856.13140285 6406.521 #> 927    744.60130155 6435.287 #> 928     58.11216989 6695.204 #> 929    409.64151262 6503.622 #> 930    258.80535064 6508.890 #> 931     76.29450947 6751.655 #> 932    187.96693603 6329.108 #> 933    371.30266532 6508.339 #> 934    223.94977285 6697.507 #> 935    450.21913214 6133.650 #> 936    257.18302461 6398.913 #> 937    148.56850946 6704.438 #> 938    296.07399453 6656.250 #> 939    857.38563673 6334.113 #> 940    562.25311029 6244.210 #> 941    558.74295096 6393.993 #> 942    559.59954627 6391.835 #> 943    342.44540618 6619.858 #> 944    149.11414935 6704.236 #> 945    523.31275496 6392.205 #> 946    597.73237701 6319.632 #> 947    295.27812634 6658.024 #> 948    601.60962460 6170.889 #> 949    822.02417121 6294.875 #> 950    524.74049939 6355.086 #> 951    185.26507291 6479.714 #> 952    559.83168514 6356.283 #> 953    449.85478494 6316.149 #> 954    148.40060360 6743.456 #> 955    259.84434437 6620.799 #> 956    488.28652601 6202.812 #> 957    297.40396334 6619.001 #> 958    279.91356218 6418.026 #> 959    373.04397967 6616.259 #> 960    298.64724141 6694.516 #> 961    184.98049146 6476.530 #> 962    818.32106169 6442.687 #> 963    446.37704160 6576.250 #> 964    182.81620168 6516.622 #> 965    746.99914429 6249.572 #> 966     74.26776205 6563.583 #> 967    599.68755240 6206.453 #> 968    202.73277602 6421.448 #> 969     74.47483591 6674.862 #> 970     74.61856457 6599.036 #> 971    148.24254697 6557.646 #> 972    449.40616726 6318.883 #> 973    601.72363498 6244.646 #> 974    708.53067100 6358.663 #> 975    258.92101772 6324.458 #> 976     35.19262820 6457.235 #> 977     74.63569575 6677.521 #> 978    410.23106088 6430.839 #> 979    782.63739817 6365.404 #> 980    370.88184780 6691.500 #> 981    746.31627515 6285.858 #> 982    485.50594040 6353.827 #> 983    203.93442924 6385.736 #> 984    595.99134323 6395.524 #> 985      0.31180063 6836.390 #> 986    259.16162447 6586.840 #> 987    633.75984322 6392.160 #> 988    201.33195993 6382.834 #> 989    111.84320266 6670.290 #> 990    634.14130041 6282.779 #> 991    783.68193823 6399.935 #> 992    672.28250354 6468.533 #> 993    298.89087822 6285.770 #> 994    259.42883460 6549.042 #> 995    222.39964783 6511.030 #> 996    707.88245080 6395.993 #> 997    333.98959265 6468.124 #> 998    183.24425877 6439.460 #> 999    335.15079656 6396.249 #> 1000   298.11045750 6580.785 #> 1001   857.15683699 6369.250 #> 1002   559.82634197 6390.863 #> 1003   794.30240679 6472.203 #> 1004   221.92203900 6363.396 #> 1005     0.96229845 6722.604 #> 1006    41.50126846 6828.542 #> 1007   709.65364160 6285.219 #> 1008   149.12416493 6555.105 #> 1009   185.77141207 6626.443 #> 1010   745.36530638 6398.050 #> 1011   595.36791697 6465.089 #> 1012   371.56246924 6577.638 #> 1013   281.90654511 6379.877 #> 1014   636.70184252 6175.021 #> 1015   559.31994183 6425.495 #> 1016   852.81350009 6332.489 #> 1017   857.63087048 6333.275 #> 1018   110.45390006 6673.738 #> 1019    74.04917966 6638.972 #> 1020   109.29293615 6745.427 #> 1021   409.47976265 6541.936 #> 1022    56.46652538 6696.954 #> 1023   746.29740053 6437.337 #> 1024   596.31052108 6428.739 #> 1025   240.55144926 6381.750 #> 1026   707.76304394 6360.711 #> 1027   782.22159033 6400.881 #> 1028   524.42554872 6281.874 #> 1029   487.15959556 6280.246 #> 1030   520.57408028 6504.568 #> 1031   147.60816832 6517.178 #> 1032   708.92629203 6322.351 #> 1033   185.53809446 6552.224 #> 1034   707.75147159 6287.016 #> 1035   488.60063587 6207.356 #> 1036   595.13553526 6545.533 #> 1037   558.73603682 6355.034 #> 1038    37.74924668 6754.791 #> 1039   111.72779925 6629.635 #> 1040   370.89466529 6465.355 #> 1041    -0.06819726 6724.545 #> 1042   819.34905245 6329.640 #> 1043   753.54337779 6473.459 #> 1044    73.89312777 6639.414 #> 1045   745.20489834 6400.887 #> 1046    37.80308552 6682.763 #> 1047   559.23281689 6356.197 #> 1048   782.52084893 6293.661 #> 1049   562.82467076 6171.380 #> 1050   484.90595808 6393.034 #> 1051   483.94905968 6504.103 #> 1052   223.08707135 6476.731 #> 1053   708.96091812 6395.947 #> 1054   148.15327042 6630.113 #> 1055   445.66547526 6465.010 #> 1056    13.69081037 6699.140 #> 1057   279.83883040 6301.728 #> 1058   636.91859388 6172.265 #> 1059   236.77990180 6309.301 #> 1060   335.40106387 6392.863 #> 1061   598.41737506 6282.952 #> 1062   205.93084577 6309.186 #> 1063   707.89482486 6431.966 #> 1064    73.96253438 6637.771 #> 1065   446.68683361 6356.222 #> 1066     6.86010202 6910.399 #> 1067    73.84412778 6751.687 #> 1068    95.68167760 6690.305 #> 1069   110.94315227 6484.298 #> 1070   335.22744584 6393.544 #> 1071   631.11263339 6503.123 #> 1072   745.67941236 6322.287 #> 1073   407.94816083 6615.550 #> 1074   856.50992382 6335.084 #> 1075   598.64809629 6279.886 #> 1076   261.58711717 6436.643 #> 1077   334.05290040 6466.201 #> 1078   294.68179609 6507.807 #> 1079   523.13985757 6430.534 #> 1080   559.12348658 6465.115 #> 1081   448.31302650 6279.449 #> 1082   491.25814233 6062.132 #> 1083   821.84558612 6331.740 #> 1084   185.91046705 6662.936 #> 1085     5.14790439 6910.962 #> 1086   745.00112565 6436.420 #> 1087   744.88535285 6360.869 #> 1088   600.39427252 6207.806 #> 1089    73.06141108 6673.897 #> 1090   149.60130470 6331.444 #> 1091   521.98800973 6392.736 #> 1092   412.89247557 6321.251 #> 1093   259.43349760 6550.051 #> 1094    36.78334286 6418.726 #> 1095   747.80097658 6325.051 #> 1096   409.60859634 6615.252 #> 1097   334.09356657 6541.909 #> 1098   600.45789546 6168.060 #> 1099   522.98595097 6391.981 #> 1100   203.04638435 6383.575 #> 1101   708.57111664 6432.971 #> 1102   258.08722811 6583.522 #> 1103   169.78421375 6341.972 #> 1104   481.92941833 6577.955 #> 1105   486.80427214 6316.424 #> 1106   408.86809838 6607.212 #> 1107   634.88277245 6467.313 #> 1108    37.62361126 6679.287 #> 1109   295.24320597 6395.529 #> 1110   298.73254850 6286.743 #> 1111   410.91989180 6429.389 #> 1112   -15.45292991 6706.115 #> 1113    73.92274689 6602.216 #> 1114   111.89096501 6636.654 #> 1115   856.03468582 6442.456 #> 1116   335.49167117 6469.138 #> 1117   485.52384097 6354.803 #> 1118    57.02954354 6660.654 #> 1119    72.99774691 6526.727 #> 1120   373.00124020 6354.356 #> 1121   484.78215734 6390.244 #> 1122   561.88808608 6132.327 #> 1123   782.82238730 6439.835 #> 1124   668.81026450 6284.865 #> 1125   110.19753325 6710.901 #> 1126   635.11262914 6357.986 #> 1127   782.40974549 6400.306 #> 1128   278.13865962 6414.723 #> 1129    -0.05756481 6725.358 #> 1130   744.39132356 6401.014 #> 1131   445.77483959 6541.903 #> 1132   450.98030116 6607.334 #> 1133   634.51374320 6321.216 #> 1134   670.60527617 6432.996 #> 1135   486.52493070 6429.271 #> 1136   409.69511485 6539.804 #> 1137   558.53910647 6319.784 #> 1138   744.31362335 6285.185 #> 1139   298.40843113 6396.640 #> 1140   520.15190415 6575.197 #> 1141   598.24659049 6316.311 #> 1142   221.38304916 6626.586 #> 1143   520.00052895 6573.459 #> 1144   597.85966692 6354.610 #> 1145   557.82904118 6539.413 #> 1146   296.62373213 6324.170 #> 1147   749.17349142 6472.139 #> 1148  -148.10811462 6747.024 #> 1149   110.68893695 6484.677 #> 1150   261.74189818 6361.564 #> 1151   857.15804840 6367.486 #> 1152   335.61538436 6543.687 #> 1153   295.47609326 6583.350 #> 1154   111.67621032 6486.715 #> 1155   110.50629787 6710.830 #> 1156   633.10500633 6501.930 #> 1157   671.15771604 6209.761 #> 1158   598.87146634 6466.782 #> 1159   298.16722346 6694.111 #> 1160   856.73476937 6405.744 #> 1161   202.66262364 6419.699 #> 1162   487.28617264 6244.732 #> 1163   525.64292588 6282.383 #> 1164   445.63296553 6464.777 #> 1165   373.03494106 6394.652 #> 1166   488.92355236 6207.819 #> 1167   371.28282822 6540.742 #> 1168   488.04934380 6240.711 #> 1169   333.23888051 6541.445 #> 1170   186.08207532 6625.439 #> 1171    36.95235275 6532.079 #> 1172   708.35564732 6249.045 #> 1173   821.08021686 6328.244 #> 1174    36.41214302 6681.372 #> 1175   222.06088598 6439.289 #> 1176   820.79953266 6405.535 #> 1177   599.86466542 6208.665 #> 1178   527.93853714 6172.503 #> 1179   167.52011110 6388.921 #> 1180   487.84407721 6318.758 #> 1181   334.43547815 6470.471 #> 1182   411.90076539 6245.316 #> 1183   409.27209033 6539.639 #> 1184   334.99195337 6692.127 #> 1185   260.09308290 6502.786 #> 1186   522.98588346 6349.473 #> 1187   758.84645074 6244.400 #> 1188    35.72444476 6644.303 #> 1189   296.66883183 6467.313 #> 1190   709.25230740 6247.662 #> 1191   112.00577850 6600.010 #> 1192   149.53093795 6778.673 #> 1193   110.59095154 6409.933 #> 1194   783.91253055 6326.965 #> 1195   600.34881144 6172.362 #> 1196   148.84566588 6406.444 #> 1197   223.46404604 6326.480 #> 1198    91.70190368 6692.826 #> 1199   525.47783354 6204.987 #> 1200   597.27226021 6391.513 #> 1201   598.77089938 6242.886 #> 1202   708.39223043 6323.615 #> 1203   186.40394768 6668.523 #> 1204   702.61231764 6458.209 #> 1205    55.18529316 6699.069 #> 1206   487.88326211 6243.872 #> 1207   784.23643421 6290.559 #> 1208   447.88404498 6315.589 #> 1209   782.76705681 6362.412 #> 1210   820.63061992 6478.918 #> 1211   447.48321966 6390.609 #> 1212    37.97755211 6753.689 #> 1213   259.20576243 6438.384 #> 1214   257.84823838 6436.687 #> 1215   600.88220973 6170.185 #> 1216   895.73583141 6410.347 #> 1217   370.72325406 6435.152 #> 1218   482.74622193 6542.832 #> 1219   486.20298914 6281.598 #> 1220   278.75437943 6414.143 #> 1221   744.87499205 6360.074 #> 1222   199.08423328 6384.343 #> 1223   446.66410093 6501.744 #> 1224   335.03152560 6396.399 #> 1225   334.26817431 6433.226 #> 1226   238.29167810 6346.284 #> 1227    -0.04689629 6721.678 #> 1228    42.15581636 6792.081 #> 1229   148.39256938 6743.878 #> 1230   563.74180746 6243.935 #> 1231   484.94815123 6393.154 #> 1232   111.50369399 6673.611 #> 1233   818.24046375 6442.084 #> 1234   745.66456171 6288.138 #> 1235   447.87539006 6319.012 #> 1236   168.69761544 6425.979 #> 1237   560.72282767 6357.725 #> 1238   708.55687632 6358.540 #> 1239   258.52536756 6472.538 #> 1240   185.53547522 6588.209 #> 1241   483.52485881 6394.083 #> 1242   371.15435907 6578.469 #> 1243   856.44808339 6407.749 #> 1244   856.34203952 6440.371 #> 1245   445.85636528 6502.255 #> 1246   484.44157941 6465.574 #> 1247   410.40038844 6430.403 #> 1248   334.42420373 6432.367 #> 1249   182.08966188 6361.107 #> 1250    36.94654686 6718.170 #> 1251   625.06428881 6490.555 #> 1252   744.43427002 6368.301 #> 1253   896.96410420 6377.072 #> 1254    41.85017285 6867.253 #> 1255   782.14493082 6401.267 #> 1256   708.99955137 6396.299 #> 1257   855.95733347 6370.509 #> 1258   820.69068281 6331.353 #> 1259   331.91479024 6469.092 #> 1260  -108.79103882 6816.249 #> 1261    40.30215102 6828.005 #> 1262   165.39505978 6386.740 #> 1263   236.78575418 6342.357 #> 1264   595.59154713 6504.779 #> 1265   147.21342400 6742.856 #> 1266   275.92200393 6378.384 #> 1267   446.76026863 6430.318 #> 1268   148.07898244 6370.924 #> 1269   222.23761088 6437.231 #> 1270   673.19739502 6247.754 #> 1271   594.78162269 6538.539 #> 1272   558.43961322 6321.155 #> 1273    75.51518980 6676.703 #> 1274   297.62550484 6395.327 #> 1275   747.17704153 6248.495 #> 1276   222.70699664 6514.115 #> 1277   525.44038417 6095.959 #> 1278   333.65578466 6653.744 #> 1279   110.64003054 6561.229 #> 1280   240.33831364 6418.867 #> 1281     5.28297937 6910.401 #> 1282   559.87475948 6355.313 #> 1283   112.04930762 6597.002 #> 1284   333.15914656 6541.729 #> 1285   222.99688539 6700.118 #> 1286   112.81249171 6601.100 #> 1287   221.40903828 6514.557 #> 1288   108.17487767 6410.748 #> 1289   148.44776025 6407.046 #> 1290   671.00003648 6396.084 #> 1291   702.32879866 6459.964 #> 1292   185.09753549 6516.995 #> 1293   596.64268303 6357.115 #> 1294   559.70689751 6356.173 #> 1295   190.38525880 6702.012 #> 1296   894.05649174 6446.455 #> 1297   110.14136507 6707.648 #> 1298   556.59933156 6575.614 #> 1299   820.82568813 6294.596 #> 1300   149.83676424 6706.444 #> 1301   297.91940280 6582.729 #> 1302   259.66690907 6545.813 #> 1303   895.52550565 6407.234 #> 1304    20.04788013 6664.806 #> 1305   110.34122503 6340.467 #> 1306   446.61816475 6428.529 #> 1307   600.11608542 6135.079 #> 1308   337.20868732 6469.259 #> 1309   294.99407131 6686.294 #> 1310   220.71073668 6364.005 #> 1311   259.57218328 6660.389 #> 1312   782.85103057 6364.473 #> 1313   485.96894979 6317.911 #> 1314    18.29571162 6627.844 #> 1315   596.39199238 6428.623 #> 1316   372.83925065 6542.010 #> 1317   240.69954578 6418.808 #> 1318   410.14790143 6428.193 #> 1319   482.39225906 6501.721 #> 1320   335.90206156 6321.857 #> 1321   556.95064231 6502.291 #> 1322   147.38197220 6483.140 #> 1323   168.47622021 6348.619 #> 1324   259.74985926 6621.807 #> 1325   113.75628063 6671.924 #> 1326   490.64902921 6131.734 #> 1327    77.68325573 6750.564 #> 1328   296.93146227 6471.266 #> 1329   819.08424808 6477.062 #> 1330   412.52940764 6243.923 #> 1331   596.14546610 6430.459 #> 1332   561.67458459 6133.986 #> 1333   277.71136940 6417.036 #> 1334   110.32781650 6597.523 #> 1335   333.79886580 6616.425 #> 1336   147.58153601 6520.246 #> 1337   566.51970084 6202.571 #> 1338   410.60053253 6353.787 #> 1339   482.20473733 6576.378 #> 1340   222.95179702 6439.396 #> 1341   371.98234419 6432.204 #> 1342   672.38931143 6468.210 #> 1343   261.75881569 6698.172 #> 1344   297.05143328 6434.857 #> 1345   561.71677870 6134.144 #> 1346    79.20390742 6787.955 #> 1347   278.30221849 6414.127 #> 1348   708.61897033 6324.296 #> 1349   563.50740761 6246.836 #> 1350   337.10901667 6318.098 #> 1351   223.27740318 6625.739 #> 1352   298.82926781 6656.935 #> 1353   373.46126380 6390.554 #> 1354   334.11619838 6433.641 #> 1355    45.34779398 6904.690 #> 1356   186.77700132 6404.464 #> 1357   372.02162236 6466.544 #> 1358   818.23927886 6443.560 #> 1359   259.54486301 6586.286 #> 1360   261.25777391 6473.384 #> 1361   746.21674678 6323.089 #> 1362   409.56669498 6538.085 #> 1363   634.44075455 6431.854 #> 1364   332.92611974 6544.849 #> 1365   260.91731231 6326.530 #> 1366   519.68059654 6578.256 #> 1367   820.65621862 6368.123 #> 1368   260.09153758 6325.701 #> 1369   224.02377985 6551.447 #> 1370   599.55498134 6132.055 #> 1371   259.55253618 6399.365 #> 1372   371.39377373 6616.724 #> 1373   371.34445485 6502.780 #> 1374   280.55145212 6340.548 #> 1375   560.40596019 6353.790 #> 1376   669.68329903 6430.645 #> 1377   203.65130507 6421.376 #> 1378   445.40553294 6575.986 #> 1379   488.58507640 6205.483 #> 1380    22.71388911 6660.743 #> 1381   856.80171459 6408.266 #> 1382    22.58821377 6703.633 #> 1383   185.49767761 6628.136 #> 1384   332.53778037 6579.683 #> 1385   372.95540425 6283.167 #> 1386   635.94816183 6246.743 #> 1387   755.72044049 6460.410 #> 1388   594.24278556 6504.579 #> 1389    78.05634113 6786.681 #> 1390    57.02607655 6657.998 #> 1391   485.37452530 6432.578 #> 1392   600.56690553 6171.087 #> 1393   166.63346762 6387.894 #> 1394   148.22485051 6633.003 #> 1395   111.58810955 6597.692 #> 1396   259.35684968 6584.891 #> 1397   111.53493851 6636.661 #> 1398   111.03302894 6561.396 #> 1399    14.79651634 6698.148 #> 1400   486.81877893 6318.122 #> 1401   635.96262290 6316.779 #> 1402   407.98138668 6467.464 #> 1403    55.46448660 6697.912 #> 1404   672.69540154 6469.108 #> 1405   370.64667867 6616.005 #> 1406   670.18695430 6469.061 #> 1407    54.89854197 6699.056 #> 1408   856.46523050 6443.259 #> 1409   334.65102497 6546.148 #> 1410   -30.91884196 6916.285 #> 1411   410.36612295 6428.692 #> 1412     0.53504954 6834.959 #> 1413   524.51002689 6206.338 #> 1414   371.77347440 6430.672 #> 1415   524.42274248 6206.223 #> 1416   110.60999652 6411.898 #> 1417   558.92335366 6430.395 #> 1418   707.84660704 6361.000 #> 1419   258.81537495 6434.515 #> 1420   745.81057875 6361.998 #> 1421   560.19530464 6284.267 #> 1422   297.44886387 6394.569 #> 1423   274.79739983 6380.897 #> 1424   204.18319892 6419.230 #> 1425   261.84436436 6288.862 #> 1426     2.87526683 6761.845 #> 1427    37.81683954 6715.110 #> 1428   673.11812160 6467.949 #> 1429   562.78034618 6130.213 #> 1430   374.75162506 6280.709 #> 1431   298.30318879 6284.218 #> 1432   169.50346769 6341.749 #> 1433   221.82183899 6552.078 #> 1434   559.99591540 6281.288 #> 1435   296.78488553 6657.503 #> 1436   262.01646474 6697.375 #> 1437   164.34153081 6341.828 #> 1438   371.22633687 6503.949 #> 1439   223.09214290 6477.370 #> 1440    38.14830701 6754.464 #> 1441    40.97061928 6791.796 #> 1442   150.23238431 6592.137 #> 1443   275.11684369 6380.302 #> 1444   186.60069019 6403.845 #> 1445   815.34343265 6441.707 #> 1446   782.08720760 6363.603 #> 1447   446.65928265 6576.203 #> 1448   634.99377587 6357.626 #> 1449   371.92434044 6432.350 #> 1450   223.86289622 6697.283 #> 1451   296.97040618 6321.562 #> 1452   370.55107851 6577.598 #> 1453   783.15313016 6440.346 #> 1454   372.66608021 6355.402 #> 1455   297.45653819 6547.614 #> 1456   278.92650349 6413.051 #> 1457   410.47190135 6353.662 #> 1458   820.91644642 6403.570 #> 1459    72.45015468 6376.849 #> 1460   282.23121653 6379.023 #> 1461   486.63643526 6314.494 #> 1462   635.73379606 6284.683 #> 1463   183.30845360 6367.198 #> 1464   259.07809685 6323.809 #> 1465   185.66187597 6625.829 #> 1466   223.31669056 6255.830 #> 1467   148.09171838 6371.128 #> 1468   822.00061332 6367.856 #> 1469   747.14987337 6251.775 #> 1470     1.03852632 6685.486 #> 1471   485.85802643 6353.255 #> 1472   200.89472298 6383.360 #> 1473   372.88157187 6431.439 #> 1474   597.96382979 6282.426 #> 1475   745.23375275 6293.040 #> 1476   820.83812162 6294.169 #> 1477   223.71167337 6699.369 #> 1478   445.95057773 6611.666 #> 1479   596.03244722 6432.501 #> 1480   222.33065105 6437.911 #> 1481   148.85544718 6668.085 #> 1482   297.10368612 6544.022 #> 1483   489.70256439 6095.452 #> 1484   148.59763373 6518.970 #> 1485   168.54214235 6345.184 #> 1486   201.86739573 6384.274 #> 1487   673.41186923 6216.720 #> 1488   448.04103342 6352.131 #> 1489    37.69269425 6682.103 #> 1490   185.85702920 6517.173 #> 1491   297.16334518 6398.277 #> 1492   166.82742355 6425.486 #> 1493   745.25502254 6397.827 #> 1494   483.35190902 6464.512 #> 1495   523.92236619 6318.099 #> 1496   185.07507387 6557.140 #> 1497   372.98364592 6320.450 #> 1498   819.80576629 6293.130 #> 1499   744.24524602 6286.508 #> 1500    81.34043384 6787.447 #> 1501   373.35380197 6322.182 #> 1502   671.63330711 6354.956 #> 1503    38.30768372 6681.347 #> 1504   188.17024329 6329.176 #> 1505   296.33628413 6547.471 #> 1506   518.18152286 6503.356 #> 1507   297.24810119 6656.294 #> 1508   412.84516230 6247.017 #> 1509   296.91227270 6434.995 #> 1510   633.87908491 6356.512 #> 1511   635.27867815 6395.017 #> 1512   184.58548321 6404.138 #> 1513    76.59686772 6638.954 #> 1514   223.30315154 6509.660 #> 1515   744.73064899 6360.478 #> 1516   709.63738380 6287.081 #> 1517   595.36973866 6428.777 #> 1518   297.20001382 6395.544 #> 1519   371.72066890 6354.385 #> 1520   522.56158700 6391.914 #> 1521   519.86649852 6541.523 #> 1522   448.32133049 6353.337 #> 1523   336.64145888 6285.523 #> 1524   150.81762029 6705.632 #> 1525   -30.46166550 6916.249 #> 1526   746.33885839 6468.002 #> 1527   632.87782737 6502.117 #> 1528   820.63243741 6368.518 #> 1529   558.55425255 6392.734 #> 1530   298.71993488 6397.495 #> 1531   333.58054753 6657.644 #> 1532   297.16837941 6434.944 #> 1533   148.46078848 6632.701 #> 1534   821.24157969 6291.442 #> 1535   820.05617867 6403.203 #> 1536   489.57621361 6132.250 #> 1537   745.36761857 6398.603 #> 1538   481.59129170 6504.743 #> 1539   448.13273197 6279.247 #> 1540   563.20956052 6131.892 #> 1541   202.00807472 6386.091 #> 1542   165.22630805 6385.680 #> 1543   112.10897111 6773.538 #> 1544   187.14643113 6702.265 #> 1545    53.92033171 6698.129 #> 1546   450.21460319 6242.101 #> 1547   222.96541714 6514.531 #> 1548   526.84347283 6100.547 #> 1549  -105.29832241 6889.160 #> 1550   782.67112257 6438.207 #> 1551   559.74734377 6390.594 #> 1552   261.29724896 6325.150 #> 1553   447.00824622 6612.048 #> 1554    93.67583826 6654.606 #> 1555   408.74570822 6466.956 #> 1556   222.63693417 6551.890 #> 1557    75.90522316 6752.462 #> 1558   713.08429925 6461.006 #> 1559     1.03178190 6874.558 #> 1560   334.06548325 6469.104 #> 1561   185.44535805 6480.569 #> 1562   446.13339641 6504.325 #> 1563   783.52186957 6289.952 #> 1564   744.98020171 6360.304 #> 1565   481.68795977 6577.548 #> 1566   522.28829481 6355.153 #> 1567   447.43255744 6390.752 #> 1568   296.27093999 6657.588 #> 1569   856.70276377 6408.009 #> 1570   635.89459454 6245.438 #> 1571   412.34648254 6281.832 #> 1572   708.89121961 6325.061 #> 1573   334.84131597 6615.775 #> 1574   448.77724518 6279.506 #> 1575   222.97955247 6435.572 #> 1576   335.65956674 6397.982 #> 1577   749.32221311 6251.977 #> 1578   559.43624944 6389.220 #> 1579   784.26131228 6289.739 #> 1580   186.68908034 6552.414 #> 1581   336.30508680 6319.499 #> 1582   671.81256172 6246.340 #> 1583   148.82190245 6741.470 #> 1584   636.17045792 6248.242 #> 1585   634.93860518 6320.691 #> 1586   297.71309865 6546.807 #> 1587   335.29756298 6359.367 #> 1588   259.63849933 6400.246 #> 1589   818.86860467 6441.928 #> 1590   221.99033556 6588.846 #> 1591   558.75236587 6426.710 #> 1592   -68.49492429 6848.247 #> 1593   709.24069434 6321.669 #> 1594   200.32450921 6383.175 #> 1595   258.71270882 6658.315 #> 1596   373.27748957 6690.564 #> 1597   446.14831774 6428.631 #> 1598   487.43569437 6244.505 #> 1599   371.64972024 6469.343 #> 1600   710.57593543 6471.475 #> 1601   524.09817832 6281.587 #> 1602   819.78485753 6405.481 #> 1603   559.26571646 6390.183 #> 1604   336.17019636 6358.996 #> 1605   671.18026256 6209.822 #> 1606   708.17475634 6285.263 #> 1607   486.85091920 6318.489 #> 1608   409.26940243 6502.696 #> 1609    73.86381992 6675.470 #> 1610   408.38066920 6466.070 #> 1611   744.05074401 6434.520 #> 1612   559.47454262 6392.910 #> 1613   634.31237354 6393.274 #> 1614   333.23257925 6506.028 #> 1615   110.94143440 6526.086 #> 1616   335.70027717 6359.793 #> 1617   261.02332279 6288.904 #> 1618   148.32611239 6480.387 #> 1619   448.18598143 6317.134 #> 1620   448.00907550 6317.564 #> 1621   185.75305140 6405.336 #> 1622   489.92842633 6096.342 #> 1623   410.20088974 6393.970 #> 1624   782.78535805 6291.445 #> 1625   781.35421500 6366.175 #> 1626   372.49169713 6468.480 #> 1627   408.43890693 6606.591 #> 1628    39.96567663 6755.616 #> 1629   818.41902935 6442.538 #> 1630   -32.80572264 6726.810 #> 1631     1.64911351 6611.092 #> 1632   484.58721103 6392.646 #> 1633   221.93906059 6585.502 #> 1634   148.17666540 6483.862 #> 1635    72.67987982 6677.664 #> 1636   240.61369476 6417.369 #> 1637    74.00815317 6602.464 #> 1638   670.74081679 6362.807 #> 1639   488.50167035 6205.316 #> 1640   109.81905678 6446.534 #> 1641   557.16097029 6578.427 #> 1642    36.87169665 6606.349 #> 1643   294.39126140 6324.536 #> 1644   482.63154622 6467.341 #> 1645   670.88192371 6396.363 #> 1646   336.04480208 6322.223 #> 1647   559.78568184 6355.847 #> 1648   519.67945725 6501.112 #> 1649   334.26640104 6430.049 #> 1650   446.45404380 6576.503 #> 1651   633.52805846 6503.029 #> 1652   297.26806227 6506.599 #> 1653   598.85319775 6208.494 #> 1654   636.27107760 6207.689 #> 1655   522.94479141 6277.697 #> 1656   487.08778923 6279.616 #> 1657   560.97645917 6130.849 #> 1658   596.65836158 6356.782 #> 1659   521.34554264 6503.038 #> 1660   222.94055062 6588.485 #> 1661   199.73729023 6382.509 #> 1662   188.81854279 6665.011 #> 1663   558.77095197 6467.737 #> 1664   236.73113618 6306.205 #> 1665    78.80754777 6786.738 #> 1666   596.30531022 6352.434 #> 1667   485.96553124 6352.465 #> 1668   794.32526635 6472.669 #> 1669   558.04030922 6315.064 #> 1670   561.66592905 6133.152 #> 1671   525.13869448 6206.550 #> 1672   259.37438015 6693.840 #> 1673   522.20553270 6577.390 #> 1674   670.84059582 6322.323 #> 1675   563.27166154 6243.490 #> 1676   257.22129787 6322.262 #> 1677   333.61491180 6508.391 #> 1678    57.58808910 6658.510 #> 1679   296.72690742 6509.012 #> 1680   561.89672026 6319.462 #> 1681   408.57412306 6542.923 #> 1682   409.13468718 6502.197 #> 1683   238.65610339 6344.415 #> 1684    54.88126774 6623.121 #> 1685   598.59233527 6132.299 #> 1686   296.88294520 6546.376 #> 1687   670.35166867 6213.718 #> 1688   525.11052736 6130.120 #> 1689   111.04219261 6708.105 #> 1690   185.31993845 6554.722 #> 1691   633.65650095 6468.609 #> 1692   259.59963251 6620.220 #> 1693   561.43523042 6243.772 #> 1694   857.43547640 6333.184 #> 1695   599.47047671 6208.638 #> 1696   371.04680944 6501.860 #> 1697   522.71919901 6352.347 #> 1698   148.32994516 6742.867 #> 1699    75.55127277 6675.582 #> 1700   564.25050997 6205.145 #> 1701   334.05017967 6503.857 #> 1702   748.16376185 6252.281 #> 1703   672.73530201 6320.072 #> 1704   114.30057137 6746.136 #> 1705   110.82755326 6746.630 #> 1706   450.58338099 6244.828 #> 1707   559.20159232 6501.954 #> 1708    -0.66465607 6722.506 #> 1709   447.12573577 6614.894 #> 1710   222.55413285 6327.180 #> 1711   110.17740312 6486.636 #> 1712   702.69652286 6458.506 #> 1713   482.73995759 6539.011 #> 1714   238.22677176 6382.690 #> 1715   333.54941850 6545.549 #> 1716   707.60238136 6362.533 #> 1717   -30.30174998 6914.854 #> 1718   333.44164545 6652.057 #> 1719   243.34466624 6420.211 #> 1720   222.28479044 6514.411 #> 1721   240.01558720 6346.542 #> 1722   446.80428654 6427.854 #> 1723   238.84388141 6342.433 #> 1724   188.16623393 6702.782 #> 1725   258.58597333 6287.783 #> 1726   598.50490219 6242.829 #> 1727   225.86939167 6290.542 #> 1728   147.77834391 6408.937 #> 1729   223.01320816 6475.591 #> 1730   486.47483987 6316.767 #> 1731   410.91597147 6357.374 #> 1732   597.33135185 6392.034 #> 1733   708.58849442 6396.503 #> 1734   240.08752941 6306.922 #> 1735   781.86746096 6439.394 #> 1736   202.30047709 6381.648 #> 1737   222.24001312 6514.038 #> 1738   783.71228849 6289.882 #> 1739   186.18729724 6628.697 #> 1740   238.28858221 6383.025 #> 1741   261.11492199 6399.900 #> 1742   632.64975085 6506.469 #> 1743   672.64867177 6210.930 #> 1744   110.22734019 6707.878 #> 1745   296.48115659 6658.257 #> 1746   635.14831011 6247.251 #> 1747   562.51134324 6172.137 #> 1748   337.26268874 6692.101 #> 1749   599.25333092 6280.178 #> 1750   446.09644100 6427.591 #> 1751   596.62143970 6393.515 #> 1752   223.10430834 6511.667 #> 1753   371.92093064 6540.628 #> 1754   371.98314566 6394.741 #> 1755   222.51093234 6550.279 #> 1756   708.66232965 6431.600 #> 1757   709.03511455 6249.709 #> 1758    36.49073834 6457.547 #> 1759   521.60878318 6465.770 #> 1760   597.05668926 6391.540 #> 1761   223.18326073 6587.723 #> 1762    73.55530833 6562.652 #> 1763   782.30663047 6400.384 #> 1764   223.05667341 6475.099 #> 1765   559.41834174 6430.135 #> 1766    94.03317761 6652.355 #> 1767   295.49760903 6692.460 #> 1768   148.53818879 6593.897 #> 1769   745.90918911 6403.621 #> 1770   139.01106600 6484.368 #> 1771   222.92483070 6474.754 #> 1772    35.50377940 6716.066 #> 1773  -111.43420033 6664.778 #> 1774   445.49082076 6463.818 #> 1775   204.58803415 6422.180 #> 1776   185.86718779 6626.242 #> 1777   296.12740283 6396.915 #> 1778   672.21872569 6284.788 #> 1779   556.95155784 6577.597 #> 1780   671.80070634 6356.200 #> 1781   519.91772125 6574.587 #> 1782    56.36844251 6696.610 #> 1783   482.64830199 6577.425 #> 1784   110.34132349 6670.494 #> 1785   599.49627163 6280.512 #> 1786   111.62294895 6559.469 #> 1787   670.39673745 6357.723 #> 1788   600.67018550 6132.754 #> 1789   409.18775331 6467.683 #> 1790   596.25956694 6503.036 #> 1791   820.88293927 6366.885 #> 1792   634.44411691 6318.377 #> 1793   559.06990793 6320.292 #> 1794   372.48663695 6428.739 #> 1795   -18.39500025 6705.224 #> 1796   708.64105791 6283.713 #> 1797   636.22714382 6209.373 #> 1798   854.77591469 6333.095 #> 1799   333.58817609 6692.457 #> 1800   447.10149665 6390.172 #> 1801   259.47943909 6619.591 #> 1802   259.37666769 6399.825 #> 1803     1.85345567 6874.787 #> 1804   560.20865859 6281.882 #> 1805   747.59572595 6286.894 #> 1806   562.70523825 6171.158 #> 1807   334.13550050 6583.629 #> 1808   709.31478146 6358.655 #> 1809   633.71093820 6501.712 #> 1810   634.26449775 6467.619 #> 1811   170.74220454 6342.011 #> 1812   526.08161440 6098.081 #> 1813   634.97431612 6170.669 #> 1814   597.69490969 6317.403 #> 1815   223.32583673 6514.388 #> 1816   482.71767499 6578.041 #> 1817   224.87196188 6586.474 #> 1818   519.94499774 6538.350 #> 1819   526.11138145 6245.163 #> 1820   794.44317876 6471.761 #> 1821   372.50804411 6357.468 #> 1822   822.61864931 6330.273 #> 1823   782.85224522 6364.743 #> 1824    19.51417926 6664.235 #> 1825   708.17592247 6395.751 #> 1826   633.38430589 6469.898 #> 1827   448.38263008 6314.720 #> 1828   333.92881647 6578.655 #> 1829   370.86626829 6506.342 #> 1830   636.45005587 6206.550 #> 1831   636.54245021 6171.415 #> 1832   373.39550648 6616.117 #> 1833   185.39438630 6515.305 #> 1834   334.08177761 6467.402 #> 1835   148.18071394 6482.378 #> 1836   447.52666268 6466.505 #> 1837   407.78171095 6468.442 #> 1838   258.94833371 6657.264 #> 1839   633.44203113 6469.456 #> 1840   451.01240508 6205.579 #> 1841   296.60119095 6696.509 #> 1842   520.10648070 6539.016 #> 1843   296.84742298 6322.964 #> 1844    -2.88972480 6913.530 #> 1845   703.23128180 6456.895 #> 1846   794.97450999 6471.599 #> 1847   557.61187321 6541.245 #> 1848    40.50766635 6792.488 #> 1849   372.23946752 6578.811 #> 1850   819.79077918 6403.405 #> 1851   110.91674243 6484.067 #> 1852   113.67796780 6783.804 #> 1853   185.62812826 6367.492 #> 1854   484.85283573 6392.862 #> 1855   896.21888521 6410.652 #> 1856   409.25648115 6466.649 #> 1857   185.42770298 6517.273 #> 1858   410.57355107 6390.236 #> 1859   446.02907408 6609.951 #> 1860   856.61849185 6408.892 #> 1861   856.73642400 6331.116 #> 1862   222.96806999 6400.062 #> 1863   525.89508522 6243.027 #> 1864     1.71245644 6837.363 #> 1865   110.57555191 6711.968 #> 1866   745.53122001 6438.357 #> 1867   856.75149612 6445.151 #> 1868   409.34214417 6356.192 #> 1869   559.29684459 6389.484 #> 1870   298.03388760 6396.691 #> 1871    76.85748637 6788.132 #> 1872    20.16961925 6624.205 #> 1873   296.58177046 6324.368 #> 1874   187.32378037 6700.203 #> 1875   527.12718146 6099.489 #> 1876   821.34996825 6405.078 #> 1877   600.59335267 6134.984 #> 1878   110.77857616 6558.082 #> 1879   525.82566315 6241.525 #> 1880   482.32863081 6502.532 #> 1881   636.32423395 6208.612 #> 1882   445.54074996 6574.857 #> 1883     1.34108324 6834.071 #> 1884   782.89557717 6439.882 #> 1885   519.33545050 6540.914 #> 1886   149.60313423 6777.388 #> 1887   296.12628746 6433.864 #> 1888   184.84187618 6551.789 #> 1889   281.74505235 6343.396 #> 1890   598.68553088 6283.278 #> 1891   236.31474964 6382.441 #> 1892   409.67788356 6428.727 #> 1893   782.61514185 6364.172 #> 1894   182.74523559 6441.522 #> 1895   145.14242142 6444.318 #> 1896   369.13405699 6505.155 #> 1897   599.99088466 6169.043 #> 1898   259.90316972 6323.964 #> 1899   447.44863890 6611.809 #> 1900   333.75897936 6582.172 #> 1901   781.92014058 6402.855 #> 1902   598.81152268 6282.873 #> 1903   297.16831042 6323.776 #> 1904   296.53704691 6434.603 #> 1905   597.45155786 6320.387 #> 1906   296.73168744 6583.964 #> 1907    95.75429854 6693.968 #> 1908   486.31542662 6352.084 #> 1909   490.65709787 6062.197 #> 1910   520.24044811 6574.607 #> 1911   596.35323886 6431.061 #> 1912   527.98058291 6284.698 #> 1913    95.29362319 6655.510 #> 1914   556.59948253 6576.405 #> 1915    95.12335803 6693.495 #> 1916    22.28308334 6627.545 #> 1917   743.21617796 6466.840 #> 1918   148.08830819 6631.560 #> 1919   166.84680752 6387.560 #> 1920   371.74495682 6467.445 #> 1921   561.24474906 6242.656 #> 1922   467.92241814 6076.603 #> 1923   259.56932224 6623.826 #> 1924   185.65172400 6439.125 #> 1925   744.42691453 6435.975 #> 1926   186.50597433 6589.483 #> 1927   635.95920783 6245.140 #> 1928   335.37408082 6319.538 #> 1929   821.38112645 6292.031 #> 1930   744.93310398 6361.987 #> 1931   599.81561965 6171.366 #> 1932   372.19750664 6468.749 #> 1933   631.81682085 6427.655 #> 1934   111.77355925 6595.371 #> 1935   334.84879323 6393.972 #> 1936   447.28992389 6393.042 #> 1937   238.98050868 6342.999 #> 1938   856.99870738 6331.403 #> 1939   557.47725473 6501.015 #> 1940   167.15299945 6425.011 #> 1941   147.05685514 6518.013 #> 1942   744.84660016 6359.903 #> 1943   745.60506158 6434.245 #> 1944   190.15174118 6701.870 #> 1945   490.31712788 6056.885 #> 1946   527.53517760 6132.418 #> 1947   372.20781281 6467.495 #> 1948   857.50828399 6408.866 #> 1949   -32.52482614 6880.011 #> 1950   559.72299620 6392.768 #> 1951   186.87727545 6366.993 #> 1952   185.16525145 6551.804 #> 1953   529.50443402 6134.272 #> 1954   169.08806972 6342.268 #> 1955    93.11254954 6654.495 #> 1956   259.46751423 6323.079 #> 1957   113.01382921 6635.177 #> 1958   407.84437994 6504.266 #> 1959   671.63360495 6396.774 #> 1960   334.64255240 6655.488 #> 1961   782.79275787 6365.873 #> 1962   527.75213535 6131.607 #> 1963   185.74683119 6662.872 #> 1964   559.16165716 6430.147 #> 1965   335.58527102 6693.021 #> 1966   260.47234111 6358.875 #> 1967   445.95037767 6576.788 #> 1968   185.27436531 6591.066 #> 1969   259.59379940 6397.346 #> 1970   672.13899138 6432.519 #> 1971     2.96508932 6832.576 #> 1972   448.19907039 6281.893 #> 1973   335.63911367 6543.395 #> 1974   184.52575354 6365.716 #> 1975   674.22070986 6248.593 #> 1976   559.99060492 6207.165 #> 1977   672.32532241 6210.665 #> 1978   223.34768370 6627.218 #> 1979   275.14660494 6377.919 #> 1980   225.29270144 6290.530 #> 1981   -69.38421867 6844.793 #> 1982   670.79648576 6395.022 #> 1983   222.99355964 6477.063 #> 1984   821.73357648 6294.790 #> 1985    73.47307515 6525.289 #> 1986   222.04413511 6548.748 #> 1987   447.41694942 6430.819 #> 1988   372.39083712 6358.113 #> 1989   260.58574736 6692.544 #> 1990   598.69327278 6279.659 #> 1991   709.10956558 6361.300 #> 1992   558.19531280 6465.009 #> 1993   335.48135109 6395.672 #> 1994   633.79480602 6432.810 #> 1995   821.45307243 6328.943 #> 1996   557.64142369 6502.473 #> 1997    75.78324931 6749.272 #> 1998   184.95210784 6591.950 #> 1999   184.56130023 6515.093 #> 2000   858.15657723 6370.366 #> 2001   223.99010293 6325.211 #> 2002   152.18215216 6705.392 #> 2003   672.73753735 6247.405 #> 2004   223.13942012 6362.257 #> 2005   148.13885626 6407.849 #> 2006   332.38110331 6469.481 #> 2007   335.46435918 6358.930 #> 2008   896.93185374 6373.891 #> 2009   601.40636886 6133.363 #> 2010   372.33710936 6541.001 #> 2011   278.23831252 6416.774 #> 2012   -31.30151742 6912.647 #> 2013   110.54386178 6449.214 #> 2014   526.55616685 6207.166 #> 2015   560.01639703 6393.901 #> 2016   857.46548384 6370.772 #> 2017   562.18520854 6320.555 #> 2018   170.07160690 6343.151 #> 2019    94.64367243 6692.316 #> 2020    57.59401122 6660.949 #> 2021   819.46995871 6477.023 #> 2022   -68.80393010 6807.224 #> 2023   707.62065986 6433.022 #> 2024   335.25921739 6689.701 #> 2025   411.12857583 6317.146 #> 2026   279.81681845 6341.773 #> 2027   184.92610897 6552.980 #> 2028   259.93876737 6506.903 #> 2029   561.02703345 6131.737 #> 2030   149.79707399 6779.817 #> 2031    73.98139735 6751.636 #> 2032   188.11703184 6701.255 #> 2033   297.24376000 6432.945 #> 2034   706.46764680 6247.488 #> 2035   895.09754056 6370.699 #> 2036   334.30537932 6541.123 #> 2037   447.79473444 6357.717 #> 2038   635.75237193 6280.122 #> 2039   562.51250295 6170.345 #> 2040   148.68675740 6779.858 #> 2041   600.19462873 6206.545 #> 2042   635.52954874 6358.346 #> 2043   371.74148864 6615.158 #> 2044   784.65572943 6291.365 #> 2045   632.58558440 6429.411 #> 2046   333.30907090 6652.464 #> 2047   259.61370704 6619.384 #> 2048   448.70246301 6279.306 #> 2049   279.30839091 6416.876 #> 2050   332.69410917 6619.165 #> 2051   222.36758524 6290.547 #> 2052     4.23204438 6796.403 #> 2053    38.96425851 6754.918 #> 2054   745.64207344 6434.885 #> 2055   165.91232220 6386.426 #> 2056   448.86273812 6281.543 #> 2057   560.26875239 6390.853 #> 2058   671.80549601 6209.878 #> 2059   333.83582293 6580.861 #> 2060   524.78682630 6170.866 #> 2061   521.48318800 6467.538 #> 2062   636.84592217 6243.697 #> 2063   558.78324987 6392.452 #> 2064   446.47687395 6539.069 #> 2065   597.32210788 6354.238 #> 2066   278.02636884 6414.577 #> 2067   296.53480398 6468.697 #> 2068   167.64868422 6424.019 #> 2069    37.86905653 6714.855 #> 2070    95.28121262 6656.221 #> 2071   821.25443228 6369.608 #> 2072   557.48036731 6430.462 #> 2073   240.38124274 6379.904 #> 2074   523.10649556 6355.556 #> 2075   205.85093404 6348.805 #> 2076   244.45899873 6416.595 #> 2077   562.46353364 6167.128 #> 2078   410.19799247 6468.683 #> 2079   111.88696365 6633.105 #> 2080    79.94889136 6789.114 #> 2081   520.79482310 6575.575 #> 2082   519.12406355 6500.757 #> 2083   296.52940936 6620.907 #> 2084   373.35230295 6358.047 #> 2085   595.95058883 6466.674 #> 2086   597.01295583 6355.640 #> 2087   485.34621914 6427.438 #> 2088   259.83116956 6549.655 #> 2089   708.55454035 6360.361 #> 2090   408.45438659 6612.606 #> 2091   411.00907853 6317.895 #> 2092    40.87918256 6794.400 #> 2093    72.89350287 6675.921 #> 2094   817.87723150 6477.339 #> 2095   600.58489512 6172.107 #> 2096   147.57393742 6446.067 #> 2097   332.68905128 6543.791 #> 2098   296.75470523 6616.749 #> 2099   334.88903165 6396.097 #> 2100   411.20899954 6317.297 #> 2101   444.81378502 6501.780 #> 2102   490.53377838 6059.304 #> 2103   258.07117105 6475.653 #> 2104   112.98612080 6599.493 #> 2105   599.05857005 6282.377 #> 2106   239.65839209 6380.586 #> 2107   334.64417518 6394.257 #> 2108   564.10279944 6170.675 #> 2109   599.92953673 6212.156 #> 2110    73.95786553 6639.825 #> 2111   818.75710893 6366.596 #> 2112   296.82538412 6435.184 #> 2113   238.36154402 6380.286 #> 2114   633.08179582 6469.662 #> 2115   184.63662175 6515.926 #> 2116   408.80385597 6576.952 #> 2117   820.74341726 6368.260 #> 2118   450.08648233 6244.099 #> 2119   743.85024879 6360.714 #> 2120   240.63621020 6420.157 #> 2121   526.48809511 6096.152 #> 2122   560.16584501 6281.363 #> 2123   183.15581449 6405.805 #> 2124   670.19839667 6208.853 #> 2125   673.30088502 6287.478 #> 2126   -32.55366775 6876.226 #> 2127   334.95119373 6355.601 #> 2128   148.93785758 6405.162 #> 2129   297.45961011 6547.727 #> 2130   222.71537844 6697.107 #> 2131   448.60020593 6242.874 #> 2132   336.49143033 6319.211 #> 2133   824.18518611 6295.274 #> 2134   557.07373096 6538.643 #> 2135   299.42957929 6694.177 #> 2136   372.58757607 6578.833 #> 2137   259.60074205 6623.543 #> 2138  -102.46618532 6850.429 #> 2139   222.59369740 6436.773 #> 2140   238.12013940 6343.007 #> 2141   296.50779931 6472.511 #> 2142   486.55630241 6244.563 #> 2143   557.03288637 6427.075 #> 2144   411.56724554 6280.836 #> 2145   447.32544390 6391.189 #> 2146   167.85192078 6345.199 #> 2147   149.17870762 6630.546 #> 2148   151.15389279 6705.213 #> 2149   671.50209418 6319.809 #> 2150   857.24213177 6335.418 #> 2151   298.51776426 6694.546 #> 2152   411.60697568 6279.839 #> 2153    95.23057645 6690.800 #> 2154   709.05680299 6396.278 #> 2155   671.40144195 6359.642 #> 2156   745.14181232 6398.184 #> 2157   334.97495252 6356.400 #> 2158   670.08162811 6469.029 #> 2159   297.56146610 6543.607 #> 2160   485.41632964 6430.444 #> 2161    71.50638724 6562.899 #> 2162   202.52917482 6307.525 #> 2163   638.15076254 6171.651 #> 2164   183.82338024 6402.617 #> 2165   711.00237987 6469.298 #> 2166   109.74331347 6409.503 #> 2167   778.47885693 6356.522 #> 2168    38.36834471 6718.307 #> 2169   247.82420174 6379.692 #> 2170    73.11379492 6602.252 #> 2171   112.50742403 6672.623 #> 2172   522.37920698 6427.623 #> 2173   818.68697949 6478.839 #> 2174   520.50430089 6576.668 #> 2175   111.57767823 6484.786 #> 2176   166.47302395 6424.934 #> 2177   633.81683578 6395.021 #> 2178   486.86660081 6571.736 #> 2179    34.84939133 6381.010 #> 2180   670.42853249 6395.489 #> 2181   297.68754009 6581.942 #> 2182   225.29454500 6328.350 #> 2183   452.06873246 6245.917 #> 2184   856.67956191 6332.858 #> 2185    41.24876729 6828.344 #> 2186   296.96018559 6397.350 #> 2187   298.43285441 6434.043 #> 2188   597.01935976 6354.403 #> 2189   746.05329831 6437.768 #> 2190   526.02048012 6167.390 #> 2191   744.66566210 6472.530 #> 2192   296.84167885 6545.597 #> 2193   446.29174410 6464.667 #> 2194     1.19889780 6837.336 #> 2195   294.57276743 6358.871 #> 2196   599.23079013 6280.354 #> 2197   783.25901085 6328.106 #> 2198   562.71183449 6171.180 #> 2199   486.57912380 6281.192 #> 2200   202.37137535 6309.227 #> 2201   559.06914055 6430.568 #> 2202   555.16130921 6542.269 #> 2203   560.80066766 6279.296 #> 2204   559.37846945 6316.635 #> 2205   184.97505789 6441.209 #> 2206   204.10357430 6419.436 #> 2207   149.49890602 6666.783 #> 2208   526.24954841 6243.905 #> 2209   562.06692302 6173.763 #> 2210   595.63803671 6501.990 #> 2211   296.22864674 6657.247 #> 2212   527.56780446 6100.575 #> 2213   206.21698063 6308.928 #> 2214   223.29556649 6474.000 #> 2215    57.94722247 6695.508 #> 2216   147.99499373 6552.267 #> 2217   671.32334317 6397.106 #> 2218   336.07876669 6321.806 #> 2219   484.80744762 6390.304 #> 2220   335.40394616 6358.746 #> 2221   224.88497156 6288.709 #> 2222   599.95641405 6206.753 #> 2223   523.68486792 6355.775 #> 2224   407.37629373 6615.898 #> 2225   524.57578168 6281.538 #> 2226   238.53377121 6346.182 #> 2227   225.31767467 6290.376 #> 2228   410.99720944 6320.371 #> 2229   261.36201890 6323.209 #> 2230   242.92604897 6420.032 #> 2231   632.67097032 6432.804 #> 2232   856.53766843 6406.771 #> 2233   672.71662440 6284.780 #> 2234   373.65184778 6616.161 #> 2235   408.27908175 6429.808 #> 2236    38.17150110 6756.767 #> 2237   447.79911056 6608.228 #> 2238   257.92953247 6436.211 #> 2239   597.93307765 6317.099 #> 2240   224.85028895 6698.875 #> 2241   223.92559473 6588.373 #> 2242   854.58352448 6442.004 #> 2243    74.26662103 6562.534 #> 2244   147.82968200 6296.184 #> 2245   600.59814959 6171.996 #> 2246   412.43648293 6281.974 #> 2247   482.64299209 6500.042 #> 2248   820.47378033 6291.291 #> 2249    19.95927975 6628.013 #> 2250   634.39728940 6321.865 #> 2251   449.07192186 6317.531 #> 2252   558.81687655 6507.241 #> 2253   637.06442495 6173.491 #> 2254   487.48315773 6244.460 #> 2255   520.16262353 6501.949 #> 2256   856.04047912 6446.725 #> 2257   408.57878294 6576.119 #> 2258   707.23383016 6433.626 #> 2259    59.69764272 6655.242 #> 2260   819.06995364 6328.331 #> 2261    34.95428714 6681.135 #> 2262   595.73789208 6358.655 #> 2263   600.50569478 6133.289 #> 2264   634.24578214 6394.542 #> 2265   258.56832254 6323.662 #> 2266   708.39484766 6360.335 #> 2267   635.87845184 6463.355 #> 2268   409.64992081 6428.615 #> 2269    73.82454287 6601.516 #> 2270   185.25741394 6554.481 #> 2271   146.28072131 6744.485 #> 2272   707.95081719 6246.990 #> 2273   183.18697134 6404.715 #> 2274   224.30357331 6399.885 #> 2275     4.71417372 6837.469 #> 2276   822.49101764 6479.345 #> 2277   278.94805661 6306.460 #> 2278   782.41335877 6437.491 #> 2279   259.94486048 6361.586 #> 2280   185.69732156 6627.511 #> 2281   447.81735931 6353.492 #> 2282   296.72930116 6506.947 #> 2283    40.05754593 6866.949 #> 2284   296.30757697 6695.384 #> 2285   238.89659063 6381.968 #> 2286   449.06487609 6352.244 #> 2287   258.64192100 6621.955 #> 2288   337.56493333 6692.059 #> 2289   110.91490065 6482.562 #> 2290    43.46359662 6792.044 #> 2291   895.70626862 6451.006 #> 2292   782.76260862 6437.586 #> 2293    -2.02852159 6873.996 #> 2294   334.72601752 6467.742 #> 2295   370.61864047 6582.390 #> 2296   486.08010523 6244.107 #> 2297   597.88790245 6317.984 #> 2298   445.68614813 6612.795 #> 2299   557.38427344 6542.097 #> 2300   447.79991083 6319.385 #> 2301   185.60311500 6626.246 #> 2302   446.27141809 6465.196 #> 2303   371.93349930 6318.461 #> 2304   258.70150221 6656.161 #> 2305   184.42777831 6442.766 #> 2306   486.46747659 6390.958 #> 2307   746.97552215 6286.426 #> 2308   487.42938166 6244.251 #> 2309   634.94391435 6357.586 #> 2310   189.60298826 6701.701 #> 2311   745.74249377 6325.865 #> 2312   484.67986284 6430.064 #> 2313   223.17691433 6514.503 #> 2314   148.16648321 6704.475 #> 2315    41.87818880 6866.383 #> 2316   672.00373073 6285.843 #> 2317   333.64679475 6620.244 #> 2318   370.17780522 6617.101 #> 2319   450.63436417 6207.105 #> 2320   412.51256846 6242.502 #> 2321   152.20874349 6781.435 #> 2322   633.99704501 6353.992 #> 2323   783.51476419 6324.254 #> 2324   337.53877483 6691.994 #> 2325   333.71517065 6655.308 #> 2326   111.30041730 6562.789 #> 2327   296.21507409 6433.319 #> 2328   333.85966042 6322.217 #> 2329   596.96777486 6392.335 #> 2330   636.31254578 6209.238 #> 2331   525.11441376 6244.756 #> 2332    82.02825806 6305.440 #> 2333   557.51461162 6319.436 #> 2334   561.10647273 6282.007 #> 2335   635.77047066 6281.974 #> 2336   202.56439737 6385.380 #> 2337   -18.12822552 6667.678 #> 2338   148.92827252 6629.369 #> 2339   296.19901902 6617.747 #> 2340   148.64479553 6592.375 #> 2341   277.73547927 6416.473 #> 2342   280.52003730 6342.119 #> 2343   372.81455419 6281.492 #> 2344   447.75678169 6317.793 #> 2345   279.38182606 6305.799 #> 2346   598.14051367 6317.505 #> 2347   821.48273522 6293.666 #> 2348   222.75950689 6511.812 #> 2349   488.48656728 6242.249 #> 2350   261.12981266 6696.603 #> 2351   633.22004819 6392.537 #> 2352   857.37271824 6332.377 #> 2353   -70.78355017 6847.186 #> 2354   604.59156169 6424.232 #> 2355   276.43970435 6378.371 #> 2356   202.83779951 6382.715 #> 2357   201.12074104 6309.013 #> 2358   522.98326071 6280.420 #> 2359   223.68044511 6324.974 #> 2360    37.80454852 6493.207 #> 2361    76.66648166 6750.706 #> 2362   410.45478375 6391.534 #> 2363   185.99432103 6402.451 #> 2364   485.94094082 6355.830 #> 2365   204.73315846 6347.355 #> 2366   147.78817139 6554.462 #> 2367   370.91042293 6578.447 #> 2368   259.89910474 6362.164 #> 2369   487.97795250 6206.754 #> 2370   520.08723058 6506.209 #> 2371   296.23194382 6695.298 #> 2372   296.71437002 6321.342 #> 2373   109.97156045 6596.445 #> 2374   636.81498939 6170.793 #> 2375   673.68984165 6284.152 #> 2376   635.37920484 6243.998 #> 2377   492.76766233 6061.611 #> 2378   299.53334210 6694.253 #> 2379   334.51298139 6469.065 #> 2380   372.80711772 6467.760 #> 2381   296.59403136 6436.612 #> 2382   148.86045970 6407.563 #> 2383   595.68599188 6465.386 #> 2384   635.76957131 6284.847 #> 2385   558.49623468 6540.364 #> 2386    37.82320451 6714.221 #> 2387   598.38440562 6393.258 #> 2388   148.34562804 6742.848 #> 2389   450.31472479 6244.372 #> 2390   709.98846953 6247.883 #> 2391   222.03296537 6366.215 #> 2392   521.94898727 6503.317 #> 2393   593.88150213 6464.968 #> 2394   482.53733471 6541.843 #> 2395   296.51964911 6692.205 #> 2396    76.28470124 6675.238 #> 2397   259.49506178 6546.583 #> 2398   223.60118083 6549.960 #> 2399   224.05340444 6588.895 #> 2400   783.85363934 6327.290 #> 2401   633.06244581 6433.139 #> 2402   408.81946559 6465.434 #> 2403   298.05592548 6543.811 #> 2404   822.36821509 6330.754 #> 2405   857.29803287 6405.083 #> 2406    74.41870002 6600.570 #> 2407   820.41932644 6329.031 #> 2408   222.97384438 6626.917 #> 2409   186.43166921 6401.154 #> 2410   223.19429301 6660.244 #> 2411   147.82592604 6333.665 #> 2412   147.06703510 6373.268 #> 2413   296.12479444 6397.373 #> 2414   522.17206323 6427.658 #> 2415   520.88114484 6538.809 #> 2416   559.09930069 6427.051 #> 2417   373.00286992 6318.179 #> 2418   112.19326313 6632.139 #> 2419   895.62145080 6375.977 #> 2420   331.31971215 6653.001 #> 2421   448.26481719 6353.965 #> 2422    94.82575295 6691.825 #> 2423   333.22094828 6396.841 #> 2424   410.54714696 6355.729 #> 2425   185.45083042 6626.126 #> 2426   225.52062770 6400.738 #> 2427   295.52410106 6471.017 #> 2428   185.31362538 6478.852 #> 2429    96.01402079 6690.178 #> 2430   112.08529484 6672.966 #> 2431   670.93504369 6359.167 #> 2432    14.79961313 6701.470 #> 2433   332.53779217 6541.643 #> 2434   410.46638408 6354.927 #> 2435   558.17775303 6576.752 #> 2436   780.26442967 6438.410 #> 2437   223.02663001 6474.205 #> 2438   259.34102522 6474.160 #> 2439   526.62283734 6094.035 #> 2440   447.14787907 6610.476 #> 2441   149.14102148 6705.815 #> 2442   147.78712075 6369.723 #> 2443   259.39680923 6509.449 #> 2444   485.95570401 6353.113 #> 2445   114.13185723 6784.314 #> 2446   239.12714769 6345.015 #> 2447   450.04108855 6243.971 #> 2448   487.18530785 6282.647 #> 2449   185.75576931 6626.183 #> 2450   445.40741047 6609.490 #> 2451    56.48583921 6697.012 #> 2452   562.47162361 6129.959 #> 2453   671.03866308 6430.477 #> 2454   334.02068410 6541.581 #> 2455   297.70342824 6655.790 #> 2456   259.66120469 6623.885 #> 2457    45.15976081 6903.694 #> 2458   111.96788352 6632.194 #> 2459   783.36927301 6440.483 #> 2460   222.75378617 6366.118 #> 2461   563.16653356 6171.613 #> 2462   111.38317094 6745.713 #> 2463   895.65379535 6408.517 #> 2464   113.73990076 6673.512 #> 2465   333.45685764 6655.907 #> 2466   224.39607672 6698.981 #> 2467   149.86466727 6739.871 #> 2468   817.66700116 6480.031 #> 2469   673.19662027 6285.027 #> 2470   672.42870800 6323.054 #> 2471   634.01718986 6394.775 #> 2472   335.92187229 6692.836 #> 2473   525.76738657 6242.057 #> 2474   298.46144427 6694.209 #> 2475   595.32584164 6502.718 #> 2476   332.53331249 6543.874 #> 2477    78.27131870 6748.788 #> 2478   184.70888217 6440.037 #> 2479   410.36315165 6353.924 #> 2480   598.04350757 6317.160 #> 2481   600.32905062 6171.116 #> 2482   630.68419590 6432.069 #> 2483   747.94376640 6252.483 #> 2484   896.28517575 6373.087 #> 2485   238.26158584 6344.763 #> 2486   220.91342148 6399.900 #> 2487   782.76967970 6399.039 #> 2488   561.35491857 6282.492 #> 2489   240.76598190 6383.857 #> 2490   708.04526731 6285.769 #> 2491   259.29862223 6435.656 #> 2492   410.45494681 6390.624 #> 2493   185.76308898 6402.391 #> 2494   448.98556594 6279.646 #> 2495   334.25302678 6542.497 #> 2496   150.59032337 6593.091 #> 2497   561.73965201 6172.330 #> 2498   449.15572117 6281.851 #> 2499   187.35844985 6325.791 #> 2500   238.65098250 6306.369 #> 2501   185.45928647 6588.551 #> 2502   486.23210948 6354.181 #> 2503   712.04289688 6250.026 #> 2504   184.34436217 6476.816 #> 2505    19.89086002 6665.370 #> 2506   204.22036338 6346.132 #> 2507   262.20158811 6658.972 #> 2508   205.93629734 6345.664 #> 2509   445.19471595 6611.535 #> 2510   596.15514628 6429.517 #> 2511   896.36446598 6374.833 #> 2512   633.26245730 6504.288 #> 2513    19.58276288 6627.613 #> 2514   709.35090903 6284.702 #> 2515    38.42951489 6829.764 #> 2516   634.68844262 6318.643 #> 2517   447.51474635 6355.682 #> 2518   222.39730389 6326.740 #> 2519   521.32373733 6467.906 #> 2520   745.08261952 6362.272 #> 2521   745.69966765 6325.581 #> 2522   562.06868995 6393.623 #> 2523   522.75394869 6392.502 #> 2524   183.78671541 6516.179 #> 2525   595.56064868 6428.387 #> 2526   149.02111720 6630.029 #> 2527   523.41881825 6281.778 #> 2528   746.17640108 6287.990 #> 2529   372.64395207 6391.351 #> 2530   334.53528308 6542.584 #> 2531   183.73770872 6332.367 #> 2532   259.34011384 6512.765 #> 2533   409.16931729 6391.762 #> 2534   706.92985663 6358.502 #> 2535   148.31622906 6629.054 #> 2536   824.22315356 6330.981 #> 2537   411.03884339 6357.018 #> 2538   635.00121699 6318.356 #> 2539   111.61628725 6596.203 #> 2540   522.65017966 6430.615 #> 2541   556.24378240 6575.825 #> 2542   602.03449110 6134.384 #> 2543   672.46237691 6282.335 #> 2544   183.29462960 6439.720 #> 2545   185.78654012 6629.212 #> 2546   633.89299444 6397.530 #> 2547   103.84205910 6715.041 #> 2548   111.80855961 6594.641 #> 2549   520.72022317 6504.346 #> 2550   446.28258830 6539.685 #> 2551   818.59400913 6401.485 #> 2552   148.41914276 6407.172 #> 2553   -34.40708740 6765.191 #> 2554   334.19163961 6285.560 #> 2555   409.59147104 6428.620 #> 2556   260.06345002 6323.640 #> 2557   204.57970203 6346.089 #> 2558   447.32695377 6544.589 #> 2559   782.92080737 6329.220 #> 2560   529.11541944 6130.664 #> 2561   372.53910230 6390.601 #> 2562   595.03171020 6503.090 #> 2563   598.22980842 6280.357 #> 2564   560.83730557 6171.034 #> 2565   671.93751090 6393.250 #> 2566   298.86843207 6582.599 #> 2567   821.72463887 6293.305 #> 2568   110.71822954 6563.355 #> 2569   296.36299899 6546.089 #> 2570   632.67361595 6502.313 #> 2571   239.38495524 6382.546 #> 2572   110.95226243 6523.357 #> 2573   822.29789791 6327.976 #> 2574    36.38614304 6569.446 #> 2575     5.71887162 6797.453 #> 2576   297.28837698 6361.086 #> 2577   -37.10997468 6539.385 #> 2578   634.42988127 6394.714 #> 2579   -30.92589153 6917.550 #> 2580   221.57750416 6362.666 #> 2581   447.06331687 6538.912 #> 2582   148.73612231 6407.650 #> 2583   240.70199360 6420.088 #> 2584    75.43098592 6638.145 #> 2585   240.73191431 6418.967 #> 2586   482.69012493 6537.005 #> 2587   491.90390929 6057.519 #> 2588   186.23055844 6514.433 #> 2589   595.94832468 6503.417 #> 2590   483.12778919 6505.010 #> 2591   559.68978418 6352.925 #> 2592   374.81916172 6317.637 #> 2593   203.92624539 6422.877 #> 2594   408.91952505 6466.974 #> 2595   237.50832258 6305.406 #> 2596   275.61141931 6377.317 #> 2597   203.99580459 6420.698 #> 2598   596.86941413 6502.602 #> 2599     3.76093807 6911.709 #> 2600   148.14168767 6632.017 #> 2601   820.90098987 6367.770 #> 2602   490.15766136 6095.899 #> 2603   279.04195104 6340.772 #> 2604   525.95534135 6245.920 #> 2605   485.19753308 6392.857 #> 2606   165.54424635 6385.701 #> 2607   205.82017514 6309.518 #> 2608   482.35571468 6578.614 #> 2609   482.78252759 6541.839 #> 2610   409.02483829 6615.143 #> 2611   223.93619052 6660.077 #> 2612   410.61616235 6317.034 #> 2613    36.78264425 6716.793 #> 2614   560.30441374 6280.120 #> 2615   710.71870476 6426.519 #> 2616   526.01350717 6131.220 #> 2617   672.34948218 6245.296 #> 2618   410.83612542 6354.701 #> 2619   373.49610296 6318.721 #> 2620   522.19976964 6427.993 #> 2621   526.15072945 6204.823 #> 2622   296.38698270 6658.372 #> 2623   184.71215688 6441.644 #> 2624   561.40842032 6279.543 #> 2625   240.73962464 6417.428 #> 2626   184.70121810 6515.380 #> 2627     1.96491755 6762.290 #> 2628   204.84266970 6343.527 #> 2629   186.35099335 6662.677 #> 2630   372.23793330 6321.139 #> 2631   672.31360780 6209.117 #> 2632   523.27059010 6314.854 #> 2633   111.22621326 6485.998 #> 2634   237.39671550 6381.916 #> 2635    37.05751767 6755.069 #> 2636   -31.52972379 6652.803 #> 2637   483.45325676 6467.024 #> 2638   409.34681104 6539.760 #> 2639   445.26683760 6281.418 #> 2640   485.22126392 6393.312 #> 2641   222.54869939 6548.603 #> 2642   110.22005287 6710.934 #> 2643   240.23494677 6343.382 #> 2644   241.24005603 6419.182 #> 2645   745.67180741 6326.041 #> 2646   111.24765672 6671.847 #> 2647   412.02595597 6280.752 #> 2648   745.85085260 6287.926 #> 2649   185.50406236 6628.828 #> 2650   185.67396972 6330.560 #> 2651   819.27408548 6401.930 #> 2652   564.09914988 6170.624 #> 2653   -71.52421664 6847.855 #> 2654   489.77683467 6095.766 #> 2655   412.02925034 6282.461 #> 2656   528.19267001 6132.764 #> 2657   525.92398085 6207.565 #> 2658   745.42839786 6398.400 #> 2659   521.17856944 6467.364 #> 2660   258.69707840 6434.892 #> 2661   410.03769794 6578.104 #> 2662   526.90024943 6097.483 #> 2663   555.63652426 6467.067 #> 2664   222.00620620 6439.669 #> 2665   371.32295495 6432.055 #> 2666   672.19173341 6318.555 #> 2667   489.84041342 6130.458 #> 2668   895.48440794 6449.359 #> 2669   487.80831048 6244.036 #> 2670   148.79919515 6776.410 #> 2671   409.77090606 6503.145 #> 2672   670.05583401 6468.893 #> 2673   525.78735735 6282.606 #> 2674    94.23062141 6692.526 #> 2675    37.60057987 6682.493 #> 2676   259.86677044 6659.564 #> 2677   372.64988858 6357.594 #> 2678   335.29031288 6396.596 #> 2679   445.78843556 6502.878 #> 2680   446.36970554 6539.380 #> 2681   258.76077814 6471.943 #> 2682   186.35266191 6517.562 #> 2683   820.74841428 6367.989 #> 2684   167.13182160 6386.280 #> 2685   674.98379596 6467.364 #> 2686   333.20517553 6508.664 #> 2687   294.51552719 6619.980 #> 2688   184.80574916 6366.069 #> 2689   744.12922107 6359.782 #> 2690   182.51708310 6369.458 #> 2691   558.84149975 6466.187 #> 2692   597.11049600 6354.066 #> 2693   110.29317008 6673.811 #> 2694   673.04994585 6470.422 #> 2695   633.82360254 6396.024 #> 2696   259.89341542 6660.033 #> 2697   451.76379985 6094.643 #> 2698   412.85763966 6242.735 #> 2699   147.40812623 6482.298 #> 2700   482.28008906 6575.819 #> 2701   222.58173798 6440.169 #> 2702   526.25599430 6131.309 #> 2703   520.92428741 6464.207 #> 2704   708.69616664 6433.106 #> 2705   525.63674344 6168.975 #> 2706    93.52949702 6654.678 #> 2707   223.72119246 6623.130 #> 2708   -32.85912785 6804.183 #> 2709   184.87536922 6551.775 #> 2710   165.64873969 6422.206 #> 2711   672.22231215 6209.057 #> 2712   410.06817030 6391.919 #> 2713   259.29562129 6362.265 #> 2714     1.05929154 6645.833 #> 2715   371.31604439 6316.588 #> 2716   223.63049532 6326.691 #> 2717   239.22239770 6345.284 #> 2718    94.20682737 6654.979 #> 2719   446.83820069 6393.572 #> 2720   636.19431266 6208.182 #> 2721   562.08554726 6132.769 #> 2722   296.51242697 6621.082 #> 2723     3.53385149 6909.310 #> 2724   223.18650686 6623.631 #> 2725   856.76956312 6409.961 #> 2726   673.77319875 6246.067 #> 2727   632.76017884 6501.819 #> 2728   205.85245527 6381.645 #> 2729    41.45841899 6904.395 #> 2730   448.34346004 6313.917 #> 2731   560.94641159 6356.125 #> 2732   516.24749500 6540.626 #> 2733   237.74223479 6308.441 #> 2734   557.71526540 6579.797 #> 2735   147.73748643 6479.400 #> 2736   297.02778313 6434.927 #> 2737   483.18650669 6503.437 #> 2738   335.70879931 6431.445 #> 2739   223.21130635 6664.056 #> 2740   297.07630835 6319.384 #> 2741   673.20951704 6467.859 #> 2742   447.70364628 6610.284 #> 2743   186.15393058 6402.199 #> 2744   595.72134298 6465.475 #> 2745   595.10691627 6503.053 #> 2746   408.84401477 6538.681 #> 2747   745.76849586 6288.702 #> 2748   147.23331752 6517.593 #> 2749   447.06639973 6465.155 #> 2750    92.57353432 6655.495 #> 2751   184.90774888 6479.884 #> 2752   671.26174042 6321.975 #> 2753   783.66238658 6289.866 #> 2754   111.77807002 6598.590 #> 2755   185.65559902 6625.734 #> 2756   708.80034197 6284.783 #> 2757   373.55350684 6579.655 #> 2758   489.65424289 6093.916 #> 2759   409.86776345 6428.885 #> 2760   634.15417169 6244.435 #> 2761   147.89615924 6558.024 #> 2762    -1.50814639 6686.474 #> 2763   482.74651797 6501.527 #> 2764   481.03527261 6575.473 #> 2765   766.75552090 6455.556 #> 2766    99.84692901 6656.173 #> 2767   262.13408399 6586.615 #> 2768   523.90929924 6318.364 #> 2769   370.96686263 6504.704 #> 2770   672.02692127 6357.046 #> 2771   371.10360073 6354.831 #> 2772   484.95175804 6393.001 #> 2773   334.92671993 6394.023 #> 2774   -17.94140522 6707.071 #> 2775   280.77180960 6341.158 #> 2776    40.08687226 6607.047 #> 2777   815.99691644 6441.812 #> 2778   670.50851709 6396.282 #> 2779   519.84224331 6575.628 #> 2780    37.35841597 6678.157 #> 2781   895.83329367 6372.860 #> 2782   204.73648695 6345.035 #> 2783   258.70889022 6510.848 #> 2784   184.78773021 6327.026 #> 2785   148.34843395 6594.010 #> 2786   240.53970805 6381.462 #> 2787   635.22521179 6357.786 #> 2788   522.53075380 6389.844 #> 2789   445.63626033 6503.780 #> 2790   261.40634801 6360.798 #> 2791    74.65948524 6674.891 #> 2792   595.60982641 6506.395 #> 2793   596.13326261 6502.744 #> 2794   525.99724545 6099.178 #> 2795   483.18549049 6466.971 #> 2796   482.04805918 6574.657 #> 2797   -33.50638017 6803.654 #> 2798   333.37086515 6508.602 #> 2799   593.99905447 6503.860 #> 2800   519.71600518 6578.010 #> 2801   166.76640189 6423.606 #> 2802   221.82920031 6551.584 #> 2803   164.95856233 6388.446 #> 2804   819.28324719 6442.753 #> 2805   560.09308777 6503.041 #> 2806   637.28029650 6207.987 #> 2807   522.50852056 6390.622 #> 2808   258.69939005 6548.935 #> 2809    37.74178457 6753.197 #> 2810    41.52903305 6902.246 #> 2811    39.47810120 6830.402 #> 2812   486.29467442 6315.380 #> 2813   221.20533933 6290.669 #> 2814   519.60956190 6572.739 #> 2815   855.95088750 6330.114 #> 2816   371.73688389 6428.520 #> 2817   115.05458952 6783.597 #> 2818   373.11041328 6317.142 #> 2819   259.71377198 6507.133 #> 2820   448.83117875 6541.220 #> 2821   560.03123879 6354.167 #> 2822   149.11748228 6741.141 #> 2823   371.61740618 6355.264 #> 2824    35.81328404 6718.828 #> 2825   111.37889579 6595.596 #> 2826   490.15891354 6057.402 #> 2827   410.01667904 6390.489 #> 2828   746.68140165 6249.749 #> 2829   370.94946011 6544.288 #> 2830   110.83358504 6711.452 #> 2831   600.25763114 6171.212 #> 2832   225.01416662 6288.391 #> 2833   671.28250758 6397.886 #> 2834   522.69434593 6280.577 #> 2835   674.36023451 6248.661 #> 2836   184.75240660 6402.825 #> 2837   526.71490285 6130.649 #> 2838   223.08807780 6661.557 #> 2839   203.59562047 6420.486 #> 2840   521.12189067 6467.345 #> 2841   490.39118089 6093.559 #> 2842   187.76600091 6700.439 #> 2843   112.01740190 6667.719 #> 2844    38.19567177 6682.254 #> 2845   110.58286662 6483.876 #> 2846   335.24264315 6393.712 #> 2847   298.95099821 6693.347 #> 2848   600.42241277 6207.937 #> 2849   444.91489533 6464.667 #> 2850   203.86419658 6309.068 #> 2851    41.40008966 6792.529 #> 2852   258.67781997 6471.672 #> 2853   560.79454730 6500.590 #> 2854   856.55491889 6334.302 #> 2855   185.74436207 6663.420 #> 2856    35.61507096 6715.846 #> 2857   185.20772684 6588.964 #> 2858   111.74022567 6598.612 #> 2859   147.70953231 6554.230 #> 2860   598.38600532 6317.355 #> 2861   449.69187801 6353.261 #> 2862    37.95134097 6753.141 #> 2863   148.28692941 6556.308 #> 2864   186.83143844 6551.833 #> 2865   185.41031285 6514.352 #> 2866   486.59190325 6316.517 #> 2867   236.97102614 6384.157 #> 2868   297.76736432 6655.682 #> 2869    74.42607617 6603.282 #> 2870    59.68371285 6655.600 #> 2871   333.31598733 6469.835 #> 2872   276.77577477 6377.523 #> 2873   112.48673983 6746.642 #> 2874    41.99734766 6791.620 #> 2875   334.31844829 6542.453 #> 2876   744.99533632 6362.550 #> 2877   297.76675459 6323.774 #> 2878   521.51137896 6464.302 #> 2879   371.35960968 6429.045 #> 2880   371.40732842 6617.593 #> 2881   672.78052836 6210.537 #> 2882   222.70956764 6401.528 #> 2883   745.80470956 6285.252 #> 2884   258.69463192 6660.650 #> 2885   335.51440310 6355.900 #> 2886   565.53496235 6276.126 #> 2887   333.54601807 6577.986 #> 2888    73.78826982 6600.679 #> 2889   522.77681945 6352.059 #> 2890   186.40179334 6666.406 #> 2891   166.97852591 6388.511 #> 2892   334.13179982 6471.429 #> 2893   710.02176815 6285.691 #> 2894   673.38901000 6246.774 #> 2895   483.00865364 6499.762 #> 2896   559.17955762 6466.726 #> 2897   334.00347685 6617.321 #> 2898   -69.18602243 6772.039 #> 2899   600.58182730 6169.894 #> 2900   483.43609421 6576.472 #> 2901   115.28575125 6784.106 #> 2902   744.93079446 6435.240 #> 2903    43.84931455 6904.284 #> 2904   448.11563234 6392.870 #> 2905   709.16802744 6247.436 #> 2906   148.23613760 6407.233 #> 2907   377.70344716 6691.277 #> 2908   525.55846959 6206.644 #> 2909   488.16476674 6241.505 #> 2910   444.31814934 6577.996 #> 2911   526.06202748 6206.802 #> 2912   334.22203280 6542.352 #> 2913   561.40735015 6132.223 #> 2914   600.61161283 6172.503 #> 2915   895.75082745 6372.354 #> 2916   373.08548346 6692.584 #> 2917   237.35906772 6380.757 #> 2918   524.06308644 6166.188 #> 2919   261.82229147 6696.237 #> 2920   333.27831916 6658.439 #> 2921   185.40515034 6554.369 #> 2922   448.63621842 6314.676 #> 2923   600.35198661 6205.602 #> 2924   280.35791806 6340.670 #> 2925   446.27960597 6428.458 #> 2926   -68.91932911 6842.984 #> 2927   600.20751840 6208.593 #> 2928   594.54031882 6468.069 #> 2929   595.03513920 6430.955 #> 2930   856.29729178 6332.957 #> 2931   447.17980017 6390.546 #> 2932   206.39698888 6346.462 #> 2933   296.21794055 6658.680 #> 2934   410.20788776 6394.285 #> 2935   333.94383345 6615.674 #> 2936   562.64754403 6167.465 #> 2937   259.80425247 6474.729 #> 2938   185.87567130 6663.428 #> 2939   204.22751218 6345.556 #> 2940   371.30087215 6578.037 #> 2941   372.17816638 6429.160 #> 2942   -25.87208159 6877.613 #> 2943   409.27938158 6505.089 #> 2944   633.64485596 6431.708 #> 2945   371.26617867 6357.778 #> 2946   166.87932582 6424.676 #> 2947   147.43957105 6479.409 #> 2948   169.81771073 6342.640 #> 2949    35.64344391 6716.649 #> 2950   522.93310134 6428.778 #> 2951   201.90281268 6383.618 #> 2952   669.50301914 6432.770 #> 2953   186.19152946 6663.128 #> 2954   259.75847401 6659.319 #> 2955    77.02256011 6788.379 #> 2956   784.01010796 6289.090 #> 2957   183.96947868 6480.295 #> 2958   297.11765037 6584.062 #> 2959   259.61826644 6436.131 #> 2960   451.06444872 6207.415 #> 2961   375.97904197 6281.388 #> 2962   186.04253409 6293.426 #> 2963   744.76216566 6361.919 #> 2964   259.81653556 6622.974 #> 2965   371.12577933 6430.252 #> 2966   597.27228655 6432.960 #> 2967   711.79737968 6288.185 #> 2968   185.62192706 6554.080 #> 2969   635.72842391 6246.477 #> 2970   410.73139772 6354.429 #> 2971   485.57581610 6428.305 #> 2972   486.57970997 6244.145 #> 2973   487.91505089 6244.182 #> 2974   598.65014035 6279.485 #> 2975   897.24892568 6372.720 #> 2976   113.06651748 6670.696 #> 2977   259.17461761 6507.337 #> 2978   371.24552091 6544.103 #> 2979   112.58028162 6669.263 #> 2980   259.35574353 6397.668 #> 2981   783.23424980 6439.256 #> 2982    73.97574145 6639.951 #> 2983   185.02369880 6515.211 #> 2984   187.50321834 6477.257 #> 2985    39.32209360 6830.389 #> 2986   406.64665960 6578.486 #> 2987   703.42408318 6457.268 #> 2988   782.57217359 6404.147 #> 2989   634.64172285 6321.224 #> 2990   259.22982890 6508.932 #> 2991   525.70055511 6095.980 #> 2992   258.76142849 6475.820 #> 2993   633.82239015 6503.658 #> 2994   150.92364491 6705.695 #> 2995   222.91072657 6401.145 #> 2996   821.95980325 6293.912 #> 2997   150.48536913 6704.641 #> 2998   407.56725373 6580.851 #> 2999   334.78279860 6358.361 #> 3000   599.12952052 6206.731 #> 3001   555.30365481 6575.995 #> 3002   239.21298943 6382.310 #> 3003   409.61309292 6465.799 #> 3004   236.89765771 6383.090 #> 3005   146.83565705 6668.161 #> 3006   259.36980873 6509.811 #> 3007   520.35684302 6504.972 #> 3008   672.75788200 6284.612 #> 3009   857.07404965 6369.366 #> 3010   707.85404152 6434.397 #> 3011   186.33315039 6662.981 #> 3012   742.54273353 6402.806 #> 3013   110.40817325 6634.666 #> 3014   707.86568980 6358.250 #> 3015   148.72505959 6630.700 #> 3016    34.81031083 6645.349 #> 3017   408.20383129 6503.024 #> 3018   521.17948510 6467.194 #> 3019   523.08304117 6353.629 #> 3020   635.60351528 6284.921 #> 3021   633.55192513 6466.507 #> 3022   672.18334349 6282.658 #> 3023   184.42993494 6513.837 #> 3024   595.93125523 6466.265 #> 3025   528.41747153 6204.801 #> 3026   748.14883581 6473.027 #> 3027   672.38311699 6283.279 #> 3028   856.17373299 6333.653 #> 3029   -33.98027297 6730.546 #> 3030   486.02490472 6392.905 #> 3031   558.34567408 6465.418 #> 3032   184.69885188 6514.635 #> 3033   782.34963587 6475.241 #> 3034   297.40576841 6321.591 #> 3035   149.54653069 6371.394 #> 3036   148.66293820 6740.782 #> 3037   745.99395416 6323.609 #> 3038   204.79858336 6419.820 #> 3039   597.15373865 6317.540 #> 3040   601.58991546 6168.654 #> 3041   444.71182666 6539.361 #> 3042   221.01593852 6475.451 #> 3043     4.80579642 6760.446 #> 3044   296.94584945 6693.958 #> 3045   445.91783252 6611.507 #> 3046   819.68177135 6480.225 #> 3047   239.12722423 6344.069 #> 3048   371.15404788 6615.117 #> 3049   332.08470624 6543.639 #> 3050   372.88486488 6395.250 #> 3051   333.77699333 6617.849 #> 3052   223.05017672 6511.512 #> 3053   520.14724546 6501.557 #> 3054     1.53713535 6871.890 #> 3055   783.09598727 6363.317 #> 3056   856.73565425 6371.850 #> 3057   568.04245120 6316.800 #> 3058   557.03435915 6576.179 #> 3059   -69.16967166 6769.865 #> 3060   558.70641533 6315.166 #> 3061    38.40285391 6757.443 #> 3062    37.62116696 6530.624 #> 3063   855.79981082 6442.509 #> 3064   525.51801671 6281.868 #> 3065   372.91448078 6317.953 #> 3066   186.00933157 6589.437 #> 3067   634.56514313 6355.235 #> 3068   600.29443282 6134.991 #> 3069   817.78148026 6474.839 #> 3070     3.68424118 6835.456 #> 3071   485.93298663 6388.592 #> 3072    57.09303662 6659.153 #> 3073     2.79745361 6760.542 #> 3074   857.08957846 6370.178 #> 3075   150.52812943 6778.526 #> 3076   598.21912507 6242.370 #> 3077   744.54956287 6438.292 #> 3078   446.85963921 6542.137 #> 3079   185.35530278 6478.668 #> 3080   450.63857034 6241.269 #> 3081   445.78770587 6501.617 #> 3082   334.83617048 6396.498 #> 3083   334.51710691 6582.800 #> 3084   298.46348248 6695.662 #> 3085    41.41510697 6828.402 #> 3086   203.80661359 6344.694 #> 3087   297.30299842 6546.517 #> 3088   410.50895064 6391.203 #> 3089   258.80386161 6585.872 #> 3090   481.77786244 6575.656 #> 3091   708.35525808 6284.966 #> 3092   894.70414957 6447.846 #> 3093    44.21748045 6904.431 #> 3094   276.80562663 6415.011 #> 3095   895.79969191 6409.050 #> 3096   184.47708755 6629.551 #> 3097   280.95743980 6305.657 #> 3098   150.46411440 6332.389 #> 3099   371.38330288 6618.008 #> 3100   150.02769441 6705.103 #> 3101   671.21178813 6395.188 #> 3102   745.57355364 6323.384 #> 3103   557.15093240 6538.748 #> 3104   297.20949402 6357.912 #> 3105   564.58199191 6244.313 #> 3106   631.59119503 6467.462 #> 3107   745.74518010 6326.343 #> 3108   519.87113284 6577.717 #> 3109   371.82977082 6432.627 #> 3110   334.97183506 6469.465 #> 3111   222.46955155 6438.627 #> 3112   221.02899648 6401.139 #> 3113   408.16021829 6578.822 #> 3114   782.33055472 6363.841 #> 3115   109.76823033 6636.263 #> 3116    35.67830935 6608.489 #> 3117   636.18435430 6209.345 #> 3118   296.63183685 6507.195 #> 3119   445.50163883 6576.058 #> 3120   446.42741934 6539.108 #> 3121   111.24679343 6633.042 #> 3122   148.25934197 6405.451 #> 3123   109.34210378 6670.508 #> 3124   333.26084784 6659.864 #> 3125   702.83445841 6461.470 #> 3126   369.64355812 6502.168 #> 3127   298.48260710 6694.261 #> 3128   222.95748506 6477.176 #> 3129   222.77632834 6550.632 #> 3130     1.97165584 6758.135 #> 3131     4.66793746 6800.759 #> 3132   410.03647046 6392.265 #> 3133   111.28970795 6373.156 #> 3134   410.01882566 6353.388 #> 3135   112.15001774 6783.839 #> 3136   371.38391052 6543.997 #> 3137   297.67376312 6397.758 #> 3138   633.61603990 6468.713 #> 3139   708.29074283 6432.702 #> 3140   672.54600238 6467.203 #> 3141   223.01225210 6662.661 #> 3142   482.67194197 6540.112 #> 3143   372.68929359 6541.996 #> 3144   556.14911699 6542.272 #> 3145    42.77787067 6904.430 #> 3146   203.73525729 6346.384 #> 3147   280.50825773 6343.159 #> 3148   372.34467181 6355.144 #> 3149   895.20109537 6372.572 #> 3150   486.84330065 6279.061 #> 3151   410.30438074 6501.738 #> 3152   165.26459196 6388.136 #> 3153    55.21073766 6700.141 #> 3154   199.75558332 6384.749 #> 3155   490.16530707 6093.558 #> 3156   447.12975593 6353.417 #> 3157    92.78833042 6654.179 #> 3158   671.40130930 6393.464 #> 3159   674.18563829 6244.825 #> 3160   783.11001048 6324.982 #> 3161   822.09585111 6365.628 #> 3162   276.84730160 6417.141 #> 3163   295.11923081 6471.749 #> 3164   238.37218413 6417.959 #> 3165   278.62740165 6305.301 #> 3166    75.74022729 6639.394 #> 3167   856.37500470 6442.766 #> 3168   222.69328176 6511.464 #> 3169     4.37429147 6910.365 #> 3170   297.47982424 6361.057 #> 3171   745.03659922 6324.491 #> 3172   110.46275910 6560.977 #> 3173   410.82958669 6354.207 #> 3174   484.40691644 6430.682 #> 3175   333.82945038 6619.154 #> 3176   333.67726281 6507.786 #> 3177   750.34457171 6251.263 #> 3178   709.34035433 6399.179 #> 3179   411.74577140 6282.563 #> 3180   556.62921473 6538.730 #> 3181   446.85974171 6390.353 #> 3182   202.63112594 6383.738 #> 3183   186.00599433 6403.455 #> 3184   485.12221885 6430.320 #> 3185   409.81215451 6391.439 #> 3186   199.69522749 6384.820 #> 3187   745.96453161 6323.438 #> 3188   374.55764589 6395.274 #> 3189   296.07718770 6472.554 #> 3190   894.92665450 6447.003 #> 3191   242.64610102 6380.351 #> 3192   632.92353564 6428.787 #> 3193   783.11510421 6400.664 #> 3194   247.98551356 6345.266 #> 3195   147.60928790 6518.333 #> 3196   148.16285163 6405.720 #> 3197   486.41456775 6428.622 #> 3198   335.65453227 6359.164 #> 3199   408.66424330 6579.663 #> 3200   526.30957921 6132.965 #> 3201   446.28686346 6427.327 #> 3202   895.22335631 6447.910 #> 3203   259.23358944 6583.151 #> 3204   297.13280234 6358.105 #> 3205    36.89171433 6604.739 #> 3206   782.88199860 6363.153 #> 3207   334.06136778 6512.274 #> 3208   412.39737233 6421.244 #> 3209   110.88097069 6711.004 #> 3210   297.97341154 6511.382 #> 3211   594.90358394 6539.539 #> 3212   525.51497830 6097.232 #> 3213   372.32896537 6578.493 #> 3214   259.46897907 6511.365 #> 3215   558.95563616 6465.762 #> 3216   557.94612075 6501.612 #> 3217   595.82819424 6465.853 #> 3218   749.47329462 6471.153 #> 3219   449.06139522 6317.367 #> 3220   412.28598537 6283.573 #> 3221   562.24225365 6208.663 #> 3222   746.66828297 6288.829 #> 3223   297.34217467 6546.811 #> 3224   450.80931067 6243.891 #> 3225   673.03735244 6251.211 #> 3226   600.11778310 6321.489 #> 3227   147.14636975 6668.305 #> 3228   166.12022105 6387.707 #> 3229   595.47091454 6502.933 #> 3230   259.01321761 6472.210 #> 3231   520.07923380 6577.095 #> 3232   633.97506967 6394.965 #> 3233   333.99528490 6582.626 #> 3234   710.76641192 6287.087 #> 3235   373.47453755 6321.122 #> 3236   486.63493894 6356.588 #> 3237   521.33221656 6467.096 #> 3238   224.10399135 6663.060 #> 3239   409.17474039 6504.310 #> 3240   148.18775717 6628.864 #> 3241   446.58231051 6394.698 #> 3242   296.64151957 6435.919 #> 3243   672.70245562 6285.065 #> 3244   558.08014739 6577.141 #> 3245   222.83461198 6664.017 #> 3246   450.93252821 6244.550 #> 3247   147.43495792 6517.064 #> 3248   297.33120229 6509.881 #> 3249   111.21328971 6744.101 #> 3250   147.88314783 6445.085 #> 3251   672.67128204 6209.992 #> 3252   783.13043669 6364.660 #> 3253   557.83572177 6502.284 #> 3254   297.14699764 6583.536 #> 3255   371.35850683 6505.487 #> 3256   636.38807256 6245.466 #> 3257    41.11604316 6791.105 #> 3258   110.94722671 6484.713 #> 3259   524.45051761 6318.354 #> 3260   221.94472379 6290.631 #> 3261   671.83935961 6355.379 #> 3262   224.78225423 6289.514 #> 3263   635.65592805 6284.304 #> 3264   371.28957012 6282.472 #> 3265   410.96768806 6578.658 #> 3266   559.91435275 6205.247 #> 3267    75.16101735 6639.913 #> 3268   223.04321610 6362.540 #> 3269    75.65853543 6562.246 #> 3270   297.07612265 6321.869 #> 3271   146.30166714 6445.229 #> 3272   487.75069244 6244.421 #> 3273   223.44008634 6698.459 #> 3274   372.16116793 6466.725 #> 3275    95.97340766 6656.558 #> 3276   259.22745343 6321.830 #> 3277   892.27944090 6370.424 #> 3278   412.03707999 6354.527 #> 3279   819.64416228 6296.107 #> 3280   371.39158465 6429.854 #> 3281   446.00761104 6541.954 #> 3282   634.40291649 6357.551 #> 3283   370.56183176 6544.092 #> 3284    78.38194314 6786.285 #> 3285   490.53148849 6060.675 #> 3286   296.64459003 6397.217 #> 3287   671.48869965 6430.201 #> 3288   411.02879737 6317.369 #> 3289   782.56836306 6364.918 #> 3290   896.45797227 6410.072 #> 3291    36.76579413 6640.870 #> 3292   669.84288759 6430.373 #> 3293    42.14977092 6903.815 #> 3294   260.20870248 6507.702 #> 3295   558.26478981 6505.600 #> 3296    78.77533053 6787.782 #> 3297   223.67295785 6363.598 #> 3298   748.29736953 6473.465 #> 3299   221.18297418 6400.049 #> 3300   221.81397175 6548.914 #> 3301    94.13996914 6656.692 #> 3302   524.86659302 6242.210 #> 3303   782.56719535 6365.040 #> 3304   557.15952749 6541.915 #> 3305   111.33387377 6671.367 #> 3306   223.57769623 6324.795 #> 3307   334.89529279 6396.294 #> 3308   673.92265953 6248.467 #> 3309    40.42071986 6904.909 #> 3310   296.58549387 6432.801 #> 3311   410.12548543 6394.255 #> 3312   820.54906209 6368.349 #> 3313   597.07556237 6357.343 #> 3314   333.68924015 6578.768 #> 3315   110.48547515 6712.649 #> 3316   634.39777461 6355.872 #> 3317   708.74920489 6288.882 #> 3318   451.35293638 6607.250 #> 3319   114.71970353 6785.397 #> 3320   169.12540183 6342.104 #> 3321   673.99419652 6247.415 #> 3322   185.76051046 6665.425 #> 3323   336.48173687 6285.374 #> 3324   371.16492266 6507.544 #> 3325   334.79622322 6578.782 #> 3326   556.01307470 6503.042 #> 3327   224.11034928 6363.841 #> 3328   -65.85558176 6845.974 #> 3329   598.01124679 6317.110 #> 3330   519.52915390 6574.969 #> 3331   372.02768608 6428.970 #> 3332   260.21202061 6545.581 #> 3333   714.30910903 6248.676 #> 3334   -31.60609436 6878.908 #> 3335   563.51734107 6246.295 #> 3336   596.33823291 6394.207 #> 3337   297.52614370 6543.505 #> 3338   490.19449806 6057.452 #> 3339   259.22526407 6660.599 #> 3340   855.40289009 6330.674 #> 3341   371.44693002 6614.038 #> 3342   222.65276211 6663.261 #> 3343    56.79961502 6659.660 #> 3344   333.24826294 6652.763 #> 3345   167.57025606 6425.015 #> 3346   147.73618777 6520.356 #> 3347    75.36041720 6638.671 #> 3348    72.99863222 6600.225 #> 3349   296.54840286 6509.487 #> 3350   371.67785955 6503.678 #> 3351   224.08978339 6475.585 #> 3352   -32.09429927 6650.795 #> 3353   634.38110604 6357.904 #> 3354   486.64480243 6278.912 #> 3355   673.44407219 6322.034 #> 3356   183.52268952 6404.131 #> 3357     5.65942754 6683.618 #> 3358   894.58270777 6446.072 #> 3359   371.20534479 6391.869 #> 3360   595.61728447 6467.131 #> 3361   110.78472648 6669.888 #> 3362   446.40810786 6579.090 #> 3363   487.49039418 6243.347 #> 3364   147.51940752 6443.441 #> 3365   148.68022133 6668.793 #> 3366    73.58014595 6638.352 #> 3367   633.06957908 6508.054 #> 3368   408.26631592 6498.207 #> 3369   443.56217718 6611.726 #> 3370   373.52998995 6395.843 #> 3371   446.52341908 6539.233 #> 3372   372.29640323 6395.022 #> 3373   408.91830442 6580.645 #> 3374   821.76461662 6328.335 #> 3375   525.51499353 6241.549 #> 3376   525.61919351 6096.228 #> 3377   373.24081819 6281.409 #> 3378   410.92629674 6357.019 #> 3379   598.26700671 6320.145 #> 3380   526.31918843 6131.351 #> 3381    40.95050854 6792.157 #> 3382     0.39693488 6724.131 #> 3383   410.57249045 6466.479 #> 3384   483.22907764 6539.945 #> 3385   675.20040569 6284.054 #> 3386    37.67663741 6715.708 #> 3387   223.16948324 6586.545 #> 3388   296.25544507 6584.432 #> 3389   708.55140318 6321.600 #> 3390   595.89853725 6502.846 #> 3391   202.94631118 6420.469 #> 3392   560.53122982 6279.696 #> 3393   111.64486122 6633.358 #> 3394   -64.04482090 6921.236 #> 3395   596.05624547 6392.189 #> 3396   184.23196760 6440.073 #> 3397   259.15335786 6622.413 #> 3398   147.86714568 6444.240 #> 3399   223.01117451 6586.645 #> 3400   239.06923784 6345.259 #> 3401   -34.17921404 6842.512 #> 3402   263.14394705 6696.388 #> 3403    57.55590411 6659.676 #> 3404   237.37835884 6306.908 #> 3405   822.39347603 6327.783 #> 3406   375.02785038 6392.841 #> 3407   527.25631326 6240.960 #> 3408   522.82662269 6425.687 #> 3409   149.29933465 6371.418 #> 3410   259.59892999 6587.861 #> 3411   110.26582395 6747.130 #> 3412   259.19265662 6583.458 #> 3413   371.93381966 6615.224 #> 3414   185.44209961 6480.602 #> 3415   224.17749539 6623.326 #> 3416   520.75622398 6538.528 #> 3417   446.32780991 6504.964 #> 3418   409.54846792 6316.854 #> 3419  -110.00675458 6740.051 #> 3420   674.60586339 6246.884 #> 3421    79.79129693 6673.138 #> 3422   673.10081676 6285.773 #> 3423   485.11831959 6392.886 #> 3424   239.25180275 6344.198 #> 3425   112.27952558 6559.645 #> 3426   225.88315902 6699.708 #> 3427   486.33113888 6318.516 #> 3428   238.54350762 6382.085 #> 3429   110.83405209 6561.430 #> 3430   260.21221601 6362.368 #> 3431    42.36388504 6902.476 #> 3432   745.39907547 6250.518 #> 3433   702.94510508 6456.862 #> 3434   486.86648735 6317.459 #> 3435   298.00189261 6359.665 #> 3436   448.57827102 6318.242 #> 3437   147.28207983 6519.762 #> 3438   222.70218148 6623.933 #> 3439   297.78313489 6359.875 #> 3440   298.67715040 6323.332 #> 3441   487.36596380 6168.611 #> 3442   408.88337365 6579.713 #> 3443   447.54916059 6613.228 #> 3444   261.01882575 6548.389 #> 3445   599.81843829 6281.356 #> 3446   522.25807564 6466.627 #> 3447   297.62492511 6323.996 #> 3448   818.08677052 6442.276 #> 3449   747.60340076 6471.895 #> 3450   481.41691035 6504.651 #> 3451   148.56360707 6258.574 #> 3452   450.51909676 6206.842 #> 3453  -145.18225218 6633.796 #> 3454   150.79128930 6705.399 #> 3455   747.50253398 6251.773 #> 3456   597.79843834 6390.614 #> 3457   295.34480237 6358.688 #> 3458   149.55270141 6632.206 #> 3459   111.52822653 6749.860 #> 3460   334.58185638 6544.584 #> 3461   519.73748503 6539.583 #> 3462   200.94805762 6310.234 #> 3463   185.27068289 6366.202 #> 3464   448.32638709 6317.040 #> 3465   296.86015318 6470.373 #> 3466   259.36272539 6620.052 #> 3467   485.34169579 6579.645 #> 3468   279.81134036 6418.450 #> 3469   296.44390360 6620.561 #> 3470   633.80766514 6467.091 #> 3471   446.06282648 6467.504 #> 3472   636.31396475 6172.079 #> 3473   564.03671269 6246.525 #> 3474   483.28994103 6466.476 #> 3475   110.51584114 6409.355 #> 3476   599.35397436 6354.028 #> 3477   671.42079033 6357.165 #> 3478    73.30298886 6564.985 #> 3479   744.45931625 6324.583 #> 3480   410.28888789 6428.939 #> 3481   409.02598059 6539.735 #> 3482   373.55804419 6283.633 #> 3483   149.17150472 6703.726 #> 3484   633.61883287 6466.436 #> 3485   408.52126020 6539.111 #> 3486   298.65281238 6694.307 #> 3487   259.39722603 6472.459 #> 3488   594.95622385 6539.806 #> 3489    41.87426372 6792.098 #> 3490    38.10811729 6714.710 #> 3491   410.29737291 6317.921 #> 3492   894.44518720 6446.312 #> 3493   335.00884701 6688.547 #> 3494   522.79981125 6313.798 #> 3495   332.97356392 6431.811 #> 3496   373.24769863 6616.813 #> 3497   817.70007527 6444.226 #> 3498   821.20818853 6366.447 #> 3499   485.35856573 6356.564 #> 3500   333.67816581 6467.999 #> 3501   295.17813747 6619.123 #> 3502   148.04376438 6591.424 #> 3503   148.55594759 6628.986 #> 3504   782.19424930 6326.626 #> 3505    95.50744234 6690.667 #> 3506   185.23069353 6514.437 #> 3507   672.79447945 6286.346 #> 3508   411.62970041 6282.581 #> 3509   224.03691054 6399.522 #> 3510   298.01680615 6396.302 #> 3511   410.61085594 6428.765 #> 3512   220.57445510 6401.205 #> 3513   490.40217589 6057.444 #> 3514   560.00714366 6205.215 #> 3515   636.10313818 6209.645 #> 3516   794.62767746 6471.655 #> 3517   277.64788579 6416.664 #> 3518   447.62706257 6319.019 #> 3519   -15.69216880 6669.547 #> 3520   636.44254312 6279.941 #> 3521   237.66515481 6305.904 #> 3522   485.83546046 6389.385 #> 3523   450.82985142 6277.345 #> 3524   672.98493512 6361.210 #> 3525   447.23515952 6539.329 #> 3526    39.32036739 6757.377 #> 3527   633.93894575 6470.331 #> 3528   597.54342499 6391.458 #> 3529   522.55865718 6393.615 #> 3530   294.38017848 6470.661 #> 3531   333.96623120 6469.809 #> 3532   491.68322737 6059.577 #> 3533   410.44170162 6353.107 #> 3534   165.65776803 6386.260 #> 3535   334.69508398 6394.158 #> 3536   708.16749739 6431.816 #> 3537   855.64389344 6370.612 #> 3538   557.31098082 6538.308 #> 3539   412.10290920 6280.180 #> 3540   110.99110011 6488.675 #> 3541   562.80534489 6168.877 #> 3542   524.79686996 6281.246 #> 3543   485.74496904 6281.865 #> 3544   635.42929527 6171.120 #> 3545   168.95803334 6344.684 #> 3546    73.49682196 6451.596 #> 3547   485.18180589 6428.385 #> 3548   334.90462857 6396.902 #> 3549   448.78297856 6278.013 #> 3550   447.25823792 6391.664 #> 3551   409.13464680 6542.334 #> 3552   222.51141850 6697.188 #> 3553   486.77014260 6318.298 #> 3554   487.05052102 6281.248 #> 3555   485.24987395 6392.981 #> 3556   332.94903009 6652.845 #> 3557   595.13609637 6539.136 #> 3558   145.79297646 6407.542 #> 3559    59.28552955 6661.173 #> 3560   408.53987128 6504.923 #> 3561   711.14451104 6395.498 #> 3562     4.21958465 6796.366 #> 3563   221.90232910 6399.818 #> 3564   296.34843141 6657.978 #> 3565   297.60949121 6472.108 #> 3566    74.70364716 6675.917 #> 3567   184.65710261 6480.270 #> 3568   371.13438375 6503.259 #> 3569    41.88607745 6866.522 #> 3570   410.28216152 6391.340 #> 3571   260.08620241 6547.356 #> 3572   447.31679200 6390.524 #> 3573   707.65268152 6321.618 #> 3574   636.95245834 6283.238 #> 3575   186.09833266 6663.363 #> 3576   115.72342944 6783.672 #> 3577   411.95575049 6320.433 #> 3578   166.90664597 6386.874 #> 3579   204.27700911 6346.438 #> 3580   148.39934957 6740.743 #> 3581   333.80750413 6540.672 #> 3582   595.95236091 6431.236 #> 3583   517.86666584 6539.683 #> 3584   335.40086112 6359.074 #> 3585   334.74461938 6542.381 #> 3586   783.43907774 6402.964 #> 3587   746.69342218 6286.939 #> 3588   748.17211622 6250.154 #> 3589   820.01711646 6477.321 #> 3590   783.22746738 6366.118 #> 3591   297.39302069 6543.994 #> 3592   185.01266087 6588.874 #> 3593   371.31853693 6392.629 #> 3594   596.86636684 6503.074 #> 3595    15.02010697 6696.693 #> 3596   562.60082380 6135.666 #> 3597   332.86550299 6544.672 #> 3598   409.48818482 6391.180 #> 3599   111.73205702 6744.944 #> 3600   205.79128786 6347.344 #> 3601   482.66782169 6467.470 #> 3602   333.57776580 6657.471 #> 3603  -135.87567787 6858.358 #> 3604   557.26382213 6504.472 #> 3605   556.42792451 6576.458 #> 3606   372.17929858 6429.140 #> 3607   601.71634448 6170.440 #> 3608   596.55331263 6317.743 #> 3609   411.69125596 6279.764 #> 3610   169.48385291 6342.271 #> 3611   601.00361003 6132.799 #> 3612   526.15899109 6242.444 #> 3613   595.89511313 6394.779 #> 3614   525.47643190 6204.485 #> 3615   410.82790381 6352.939 #> 3616    72.57974662 6525.856 #> 3617   784.86425190 6290.395 #> 3618   408.01644536 6615.439 #> 3619   481.40206165 6462.581 #> 3620   634.41264413 6317.020 #> 3621   560.45891167 6131.984 #> 3622   485.66891342 6393.425 #> 3623   333.64753620 6616.208 #> 3624   485.70348587 6320.193 #> 3625   221.91000296 6660.416 #> 3626   407.93157986 6542.864 #> 3627   109.84601210 6335.977 #> 3628   222.03410609 6549.270 #> 3629   185.11484905 6441.985 #> 3630   -34.10818978 6765.824 #> 3631   671.40030042 6247.598 #> 3632   -27.37309554 6876.714 #> 3633    46.86804013 6869.681 #> 3634   672.15072250 6210.535 #> 3635     1.75042478 6572.773 #> 3636   447.09176527 6612.771 #> 3637   445.11243078 6578.663 #> 3638   110.56770113 6447.898 #> 3639   223.25746491 6363.402 #> 3640   111.17191638 6412.631 #> 3641   334.91927737 6355.572 #> 3642   333.91387516 6506.380 #> 3643   446.39516483 6465.034 #> 3644   184.95595246 6477.142 #> 3645   486.51893080 6281.721 #> 3646   113.88079507 6785.617 #> 3647   112.01669735 6634.109 #> 3648   448.27874735 6316.484 #> 3649   148.62211974 6594.939 #> 3650   781.86246228 6402.567 #> 3651   669.34993273 6432.710 #> 3652   185.35412547 6442.294 #> 3653   856.41734877 6330.707 #> 3654   446.68151074 6428.402 #> 3655   185.00630482 6329.087 #> 3656   519.67331816 6578.562 #> 3657   410.99230503 6319.888 #> 3658   205.59989118 6344.373 #> 3659   258.67413569 6473.824 #> 3660   409.32209542 6467.922 #> 3661   149.62253969 6740.191 #> 3662   165.56355202 6384.408 #> 3663   148.61276013 6664.866 #> 3664   147.62759083 6517.065 #> 3665   152.28913022 6705.743 #> 3666    54.68384050 6623.248 #> 3667    37.71995111 6529.355 #> 3668   633.90420501 6317.997 #> 3669   633.26797045 6428.220 #> 3670   222.95782568 6588.262 #> 3671   710.50339406 6395.500 #> 3672   258.38232630 6474.214 #> 3673    57.13488899 6695.954 #> 3674   223.09622393 6662.230 #> 3675   520.20753982 6467.227 #> 3676   185.13760001 6514.489 #> 3677   299.20235500 6434.109 #> 3678   111.14207454 6523.961 #> 3679   170.34881231 6342.038 #> 3680   446.47757740 6539.820 #> 3681   334.08861326 6616.328 #> 3682   260.60092125 6472.323 #> 3683   745.91656963 6286.574 #> 3684   671.90161214 6322.527 #> 3685   223.45179732 6400.088 #> 3686   239.78616581 6381.380 #> 3687   185.41796070 6552.286 #> 3688   525.03248560 6207.549 #> 3689   166.40011441 6423.944 #> 3690   821.02428401 6330.010 #> 3691   562.47925441 6167.481 #> 3692   672.77854406 6283.111 #> 3693   445.47208080 6541.979 #> 3694   525.87537983 6241.588 #> 3695   335.69453640 6395.775 #> 3696   485.72140815 6424.876 #> 3697   822.78697203 6368.738 #> 3698   107.82121056 6598.756 #> 3699   594.10660979 6538.624 #> 3700   297.23699509 6398.507 #> 3701   670.35370745 6431.584 #> 3702    73.67553004 6600.373 #> 3703   332.75331825 6469.037 #> 3704   673.08963278 6247.908 #> 3705   259.45943539 6544.802 #> 3706   558.63408062 6468.318 #> 3707   410.55248279 6361.946 #> 3708   280.14642632 6382.110 #> 3709   450.02714595 6390.239 #> 3710   223.31986552 6290.885 #> 3711   222.85595644 6661.946 #> 3712   296.56133302 6621.669 #> 3713   559.87465563 6354.002 #> 3714   633.69645345 6469.382 #> 3715   746.71532102 6287.193 #> 3716   558.86455755 6542.725 #> 3717   490.37166233 6094.301 #> 3718   487.53888667 6242.382 #> 3719   166.96138566 6425.160 #> 3720    66.96063920 6564.015 #> 3721   150.68248206 6742.218 #> 3722   222.60801482 6511.672 #> 3723   706.90512682 6435.052 #> 3724   525.72044655 6206.672 #> 3725   111.09232708 6596.225 #> 3726   165.93017537 6386.423 #> 3727   524.72687583 6316.109 #> 3728   445.90529784 6578.852 #> 3729   203.86998448 6421.915 #> 3730   199.92187243 6309.768 #> 3731   558.11809239 6466.392 #> 3732   445.80870073 6505.664 #> 3733   489.59875854 6204.472 #> 3734   410.21290213 6428.164 #> 3735   110.95372685 6560.902 #> 3736   636.36889954 6172.295 #> 3737   523.85815459 6319.125 #> 3738   151.72371628 6704.535 #> 3739   112.16361535 6595.852 #> 3740   170.14930635 6342.587 #> 3741   520.69562568 6538.894 #> 3742   258.11551564 6323.595 #> 3743    14.20181820 6698.586 #> 3744   558.65820355 6541.084 #> 3745   224.40689109 6290.583 #> 3746   188.04501621 6666.058 #> 3747   784.03248934 6439.764 #> 3748   149.23638855 6668.166 #> 3749   259.63057156 6621.139 #> 3750   894.66062961 6447.248 #> 3751   558.03278074 6542.208 #> 3752   259.86750335 6623.748 #> 3753   408.55552862 6465.879 #> 3754   184.68881288 6365.894 #> 3755   149.52589454 6704.511 #> 3756   145.75172333 6631.142 #> 3757   708.42004847 6247.390 #> 3758   819.58815120 6406.050 #> 3759   527.22191437 6100.616 #> 3760   147.98636586 6594.827 #> 3761   373.24934500 6281.061 #> 3762   166.70630726 6385.484 #> 3763   258.78856540 6658.243 #> 3764   241.29187623 6305.367 #> 3765   184.34013133 6479.545 #> 3766   636.89098096 6282.716 #> 3767   600.76095299 6169.495 #> 3768   148.33406945 6557.554 #> 3769   371.91974995 6503.670 #> 3770   488.11110070 6207.098 #> 3771   634.41352831 6321.365 #> 3772   450.65817034 6243.281 #> 3773   148.79367132 6705.424 #> 3774   335.75502315 6323.516 #> 3775   746.96687265 6252.620 #> 3776   597.75612823 6393.896 #> 3777   783.73724177 6290.095 #> 3778   222.52017218 6698.652 #> 3779   114.93721865 6783.730 #> 3780   222.33485499 6476.527 #> 3781   564.26223947 6132.983 #> 3782   557.01000770 6427.725 #> 3783   600.03583194 6207.176 #> 3784   896.17976830 6409.951 #> 3785   745.41196438 6397.696 #> 3786   332.51371288 6655.515 #> 3787   257.34904481 6511.868 #> 3788   184.65618632 6626.660 #> 3789   184.05374964 6442.757 #> 3790   279.69103212 6306.641 #> 3791    74.08774478 6494.743 #> 3792   598.30736792 6242.836 #> 3793   260.43384892 6544.796 #> 3794   370.43706006 6614.170 #> 3795   297.26266544 6284.835 #> 3796    37.12240497 6644.273 #> 3797   449.10136214 6241.909 #> 3798   110.81090418 6483.708 #> 3799    30.50659082 6384.146 #> 3800    60.84580004 6659.719 #> 3801   335.17190273 6396.328 #> 3802   672.14827516 6208.722 #> 3803   555.66918362 6575.797 #> 3804   335.81054509 6319.715 #> 3805    37.69126865 6757.441 #> 3806   223.46509822 6551.539 #> 3807   185.01859008 6480.335 #> 3808   855.51310156 6403.715 #> 3809   558.39389206 6425.536 #> 3810   669.92304751 6210.450 #> 3811   597.90728852 6282.143 #> 3812   481.93747275 6573.314 #> 3813   596.59527366 6394.635 #> 3814   110.22191215 6707.269 #> 3815   597.66558941 6353.653 #> 3816   563.29928842 6134.353 #> 3817   636.54101830 6247.255 #> 3818   673.17985130 6470.080 #> 3819   708.60876753 6358.433 #> 3820   372.31626338 6355.586 #> 3821   279.06795689 6414.399 #> 3822   146.88306095 6442.105 #> 3823   373.14558975 6542.354 #> 3824   745.42198083 6401.348 #> 3825   150.86019202 6481.901 #> 3826   408.35324646 6468.090 #> 3827   114.00733296 6782.681 #> 3828   185.01255997 6477.151 #> 3829   260.93210992 6323.137 #> 3830   373.46715019 6320.482 #> 3831   372.23010206 6615.807 #> 3832   855.76780532 6443.000 #> 3833   561.99461983 6355.874 #> 3834   485.11522953 6430.189 #> 3835   110.73380296 6560.617 #> 3836   673.11888717 6246.901 #> 3837   446.77231261 6464.981 #> 3838   146.83644613 6369.934 #> 3839   857.21353726 6445.816 #> 3840   408.27825593 6465.924 #> 3841   224.25731358 6659.974 #> 3842   148.75710076 6518.824 #> 3843   239.12922961 6346.300 #> 3844   335.82919904 6322.167 #> 3845   563.37040554 6133.816 #> 3846   633.04188296 6281.997 #> 3847   371.57753568 6614.638 #> 3848   450.64636300 6244.022 #> 3849   335.08567482 6692.365 #> 3850   595.25997563 6465.748 #> 3851   236.76261775 6305.055 #> 3852   167.72531665 6425.165 #> 3853   491.25086596 6207.535 #> 3854   488.17214382 6280.688 #> 3855   333.81833036 6617.928 #> 3856   645.45911384 6505.396 #> 3857   522.31935283 6466.146 #> 3858   224.39369558 6289.869 #> 3859   111.64903041 6744.459 #> 3860   110.74034386 6523.509 #> 3861   110.96645535 6445.693 #> 3862   148.12449983 6556.006 #> 3863   185.50794466 6626.924 #> 3864   278.19728080 6341.464 #> 3865   558.62882297 6318.635 #> 3866    14.75158366 6696.484 #> 3867    58.19038824 6661.568 #> 3868   449.74016243 6242.363 #> 3869   222.23214446 6363.550 #> 3870   166.72268417 6423.690 #> 3871   371.79340541 6543.697 #> 3872   335.33897248 6688.797 #> 3873    76.46428935 6750.444 #> 3874   110.18914417 6708.195 #> 3875   819.22310219 6442.171 #> 3876   745.33500391 6434.663 #> 3877   596.52449834 6467.928 #> 3878   110.42386746 6558.656 #> 3879   520.21221213 6504.688 #> 3880    -0.33527295 6722.340 #> 3881   187.56004470 6402.394 #> 3882   111.72207620 6598.719 #> 3883   259.28010244 6585.880 #> 3884   486.66546149 6281.944 #> 3885   526.33253477 6206.314 #> 3886   201.23310019 6308.479 #> 3887   202.54933154 6310.534 #> 3888    79.80229942 6787.773 #> 3889     2.55093118 6759.524 #> 3890   708.48022416 6433.282 #> 3891   182.46898235 6404.248 #> 3892   296.48626302 6583.745 #> 3893    13.66450869 6698.565 #> 3894   673.59078540 6284.990 #> 3895   263.80589582 6696.274 #> 3896   411.76008393 6279.273 #> 3897   746.73789801 6400.358 #> 3898   746.20213921 6362.051 #> 3899   600.88277477 6393.724 #> 3900   557.81772652 6465.628 #> 3901    94.16923135 6656.835 #> 3902   520.29015731 6504.529 #> 3903   560.03359777 6353.594 #> 3904   450.49383730 6243.400 #> 3905   674.04445533 6469.010 #> 3906   186.10627120 6401.356 #> 3907   259.83954714 6549.495 #> 3908   598.51109746 6355.479 #> 3909   820.18340422 6405.494 #> 3910   488.25772452 6245.154 #> 3911    73.63256830 6562.736 #> 3912   298.68235480 6434.680 #> 3913   520.53206351 6428.429 #> 3914   370.92013441 6578.013 #> 3915   223.29211291 6400.536 #> 3916   485.84983716 6353.848 #> 3917   783.70305890 6288.474 #> 3918   783.20800023 6401.900 #> 3919   856.56318804 6442.332 #> 3920   165.65113640 6311.141 #> 3921   239.99796250 6418.090 #> 3922   446.46410786 6538.977 #> 3923   295.91777944 6658.808 #> 3924   596.20599219 6431.039 #> 3925   599.17924118 6245.727 #> 3926   517.65370907 6573.777 #> 3927   745.33807342 6360.598 #> 3928   186.15224620 6701.138 #> 3929   556.82630689 6501.347 #> 3930   296.15828771 6433.749 #> 3931   260.06999611 6427.777 #> 3932    75.30936812 6753.244 #> 3933   782.22944667 6466.386 #> 3934   446.44740432 6428.008 #> 3935   744.48150734 6361.646 #> 3936   671.27777557 6320.379 #> 3937   893.85719796 6448.032 #> 3938   188.02657141 6702.100 #> 3939   297.75761143 6360.701 #> 3940   600.25388605 6287.509 #> 3941   258.97021197 6657.239 #> 3942   222.99338146 6289.451 #> 3943   448.51757167 6317.267 #> 3944    52.10832441 6620.492 #> 3945   -31.99776536 6689.113 #> 3946   854.98789681 6360.829 #> 3947    42.21423234 6903.462 #> 3948    73.95973795 6602.548 #> 3949   334.03762968 6578.575 #> 3950   633.66719876 6466.565 #> 3951   445.82744576 6610.443 #> 3952   164.40869742 6422.169 #> 3953   410.68413653 6357.509 #> 3954   258.86713262 6397.169 #> 3955   113.41295526 6671.913 #> 3956     4.01909514 6800.434 #> 3957   520.41374752 6578.899 #> 3958   446.39006904 6464.702 #> 3959   784.11517702 6288.882 #> 3960   334.59571946 6429.608 #> 3961   222.38664111 6551.125 #> 3962   298.83267898 6397.383 #> 3963   147.55470846 6517.489 #> 3964   709.35172453 6322.941 #> 3965   597.77962740 6244.315 #> 3966    51.81762478 6622.926 #> 3967   559.27626387 6355.981 #> 3968   671.26243469 6359.523 #> 3969    95.15839744 6690.831 #> 3970   794.67860417 6471.447 #> 3971   599.57477616 6283.693 #> 3972   260.72133897 6694.099 #> 3973   259.40389758 6619.813 #> 3974   708.64368296 6361.214 #> 3975    36.47450324 6645.235 #> 3976   410.23269175 6428.544 #> 3977   184.92678606 6591.585 #> 3978   334.67305481 6577.814 #> 3979   409.53259120 6505.425 #> 3980   818.31689370 6443.058 #> 3981   334.83176670 6396.800 #> 3982   295.25010349 6545.974 #> 3983   519.63152880 6578.066 #> 3984   185.65669877 6514.350 #> 3985   258.69188466 6511.463 #> 3986   746.23040216 6287.739 #> 3987   633.72318306 6501.203 #> 3988   280.87872778 6380.490 #> 3989   296.22507886 6655.778 #> 3990   199.50564647 6310.628 #> 3991   783.49278229 6437.223 #> 3992   788.16704653 6466.965 #> 3993   258.64657504 6509.518 #> 3994   259.73650765 6250.301 #> 3995   369.19024145 6577.404 #> 3996   486.43170992 6244.258 #> 3997   185.06819137 6397.321 #> 3998   745.82570135 6324.135 #> 3999   149.05642347 6776.459 #> 4000   409.56726591 6390.551 #> 4001   188.51193116 6701.905 #> 4002   708.33537688 6397.991 #> 4003   335.15001817 6321.033 #> 4004   258.79452317 6512.207 #> 4005   708.44551495 6325.059 #> 4006   636.28847607 6172.149 #> 4007   111.82807531 6560.212 #> 4008   780.10533638 6291.228 #> 4009   446.67843575 6390.772 #> 4010   449.52892090 6277.460 #> 4011   109.70770521 6523.500 #> 4012   259.63414675 6587.053 #> 4013   598.82592885 6243.447 #> 4014   481.98404318 6539.092 #> 4015   597.06837832 6393.117 #> 4016   147.52877287 6779.527 #> 4017   334.49520475 6394.967 #> 4018    78.55943789 6787.766 #> 4019   222.52402597 6326.731 #> 4020    41.60126674 6829.841 #> 4021   558.78105148 6393.137 #> 4022     4.93215249 6797.775 #> 4023   820.65046190 6367.666 #> 4024   781.04432705 6438.731 #> 4025   110.74272405 6446.940 #> 4026   -72.39617527 6732.702 #> 4027   707.12221249 6358.038 #> 4028   -16.17935177 6669.183 #> 4029   597.42718459 6316.767 #> 4030   556.35110657 6575.920 #> 4031   594.49106140 6502.479 #> 4032   672.77052791 6211.128 #> 4033   371.11130366 6507.292 #> 4034   148.28997557 6664.644 #> 4035   896.05953109 6446.729 #> 4036   558.78882234 6354.754 #> 4037   184.49960488 6404.067 #> 4038   148.37849071 6740.458 #> 4039   185.93302447 6627.010 #> 4040   296.30573222 6692.933 #> 4041   484.63393993 6393.329 #> 4042   224.96370103 6325.662 #> 4043    41.02040549 6795.228 #> 4044   371.58293886 6614.943 #> 4045   222.00511384 6326.381 #> 4046   259.49969835 6399.251 #> 4047   335.36530967 6319.026 #> 4048   110.98497921 6746.856 #> 4049   109.29887327 6635.478 #> 4050   673.22459939 6467.809 #> 4051    41.82815739 6791.954 #> 4052   335.10811514 6690.151 #> 4053   745.59867104 6435.070 #> 4054   483.07980328 6467.581 #> 4055   446.09618560 6501.596 #> 4056   672.19672991 6284.756 #> 4057   556.72763527 6463.182 #> 4058   634.53789403 6467.491 #> 4059    76.63903713 6751.167 #> 4060   601.46109976 6136.172 #> 4061   241.78573786 6419.519 #> 4062   445.87387323 6540.290 #> 4063   334.21754982 6657.163 #> 4064   282.34746415 6416.481 #> 4065   109.04341735 6558.814 #> 4066   276.90327323 6379.517 #> 4067   673.00539515 6284.308 #> 4068   481.22205445 6467.853 #> 4069   560.80604227 6353.495 #> 4070   111.66744388 6636.344 #> 4071   185.02175330 6551.800 #> 4072   335.90374684 6430.932 #> 4073   238.77733266 6341.393 #> 4074   556.01623642 6567.041 #> 4075   111.01110487 6482.545 #> 4076    59.48801638 6621.974 #> 4077   185.80276105 6703.407 #> 4078   222.41252017 6587.071 #> 4079   523.07608147 6355.613 #> 4080   856.28428014 6368.934 #> 4081   297.27210723 6509.405 #> 4082   632.55612885 6497.858 #> 4083   371.11728152 6431.125 #> 4084   240.42334570 6419.168 #> 4085   -32.77165968 6764.828 #> 4086   221.22047682 6437.372 #> 4087   111.14545429 6634.721 #> 4088   112.70733358 6337.182 #> 4089   524.22808266 6319.210 #> 4090   239.04871693 6379.939 #> 4091   523.78208979 6316.503 #> 4092   239.23877118 6344.863 #> 4093   634.39970557 6395.083 #> 4094   520.30672324 6464.905 #> 4095    72.92732056 6637.929 #> 4096   147.52730410 6520.374 #> 4097   410.06747948 6506.832 #> 4098   296.44074612 6580.588 #> 4099   371.50990004 6543.641 #> 4100   522.88481776 6277.335 #> 4101   521.61411087 6467.894 #> 4102   296.59289916 6283.924 #> 4103   410.74808272 6390.379 #> 4104   409.40943449 6465.759 #> 4105   222.69178665 6288.125 #> 4106   261.91503391 6326.301 #> 4107    38.89031236 6682.079 #> 4108   296.97553015 6546.136 #> 4109   559.31594065 6464.745 #> 4110   483.96510078 6541.051 #> 4111   337.20937673 6395.713 #> 4112   410.79878430 6354.231 #> 4113   633.60528962 6322.873 #> 4114   562.32314989 6169.113 #> 4115    45.02516134 6904.823 #> 4116   745.93790868 6287.174 #> 4117   238.56891737 6342.536 #> 4118   522.88966307 6355.475 #> 4119   528.44376940 6133.170 #> 4120     1.55672733 6871.337 #> 4121   560.16882769 6430.536 #> 4122   487.57066609 6244.792 #> 4123   490.22915595 6093.202 #> 4124   745.70837781 6397.338 #> 4125   147.34457512 6517.264 #> 4126   204.10765818 6420.170 #> 4127   371.19322395 6582.388 #> 4128   222.91271150 6551.982 #> 4129   485.61630723 6314.303 #> 4130   525.98151488 6243.860 #> 4131   781.80347291 6402.983 #> 4132   373.48248799 6690.579 #> 4133   202.24673183 6384.927 #> 4134   296.47406039 6692.321 #> 4135   258.31170702 6474.135 #> 4136    40.72522111 6792.015 #> 4137    54.92914786 6699.347 #> 4138   448.70834090 6392.006 #> 4139   896.32231246 6374.270 #> 4140   447.87220117 6354.489 #> 4141   334.54036096 6431.130 #> 4142   185.09728608 6481.162 #> 4143   257.82190876 6359.591 #> 4144   112.74800541 6783.908 #> 4145   296.59911468 6546.818 #> 4146   635.71699126 6281.731 #> 4147   818.32025189 6439.854 #> 4148   169.07935559 6344.302 #> 4149   372.60021118 6394.739 #> 4150   333.33210729 6505.857 #> 4151   372.77941139 6392.543 #> 4152   371.96623290 6430.559 #> 4153   745.15236756 6436.206 #> 4154   820.90646042 6292.739 #> 4155    42.82290057 6829.324 #> 4156   599.99448293 6279.523 #> 4157   149.25090200 6407.192 #> 4158   259.09560437 6472.261 #> 4159   407.25917629 6614.084 #> 4160   336.19936907 6693.559 #> 4161   484.78796077 6430.985 #> 4162   332.91016379 6543.373 #> 4163   276.00985713 6378.376 #> 4164   184.55311663 6517.741 #> 4165   110.20200023 6560.621 #> 4166   111.62826833 6746.294 #> 4167    35.13129455 6605.158 #> 4168   408.65278597 6466.435 #> 4169   894.98208684 6447.942 #> 4170   220.74269823 6439.238 #> 4171   782.27552474 6400.829 #> 4172   411.14234894 6430.961 #> 4173   334.76235776 6431.016 #> 4174   482.49354585 6502.309 #> 4175    73.44324259 6562.287 #> 4176   598.11100747 6322.270 #> 4177   600.37168422 6171.177 #> 4178  -103.33180103 6891.613 #> 4179   708.87834523 6249.032 #> 4180   633.56757983 6469.503 #> 4181   526.33877351 6163.651 #> 4182   709.71543938 6358.407 #> 4183   448.28033035 6281.774 #> 4184   600.61174225 6169.497 #> 4185   334.85777245 6393.768 #> 4186   522.96912814 6392.947 #> 4187   -35.55278484 6763.189 #> 4188   743.17192004 6438.737 #> 4189   707.21428122 6435.768 #> 4190   745.94179810 6402.401 #> 4191   794.45222208 6471.986 #> 4192   783.11883938 6400.210 #> 4193   523.78958183 6389.022 #> 4194    37.37093936 6566.970 #> 4195   207.89196329 6346.225 #> 4196   561.32011502 6241.932 #> 4197   408.56968183 6540.372 #> 4198   374.15495267 6394.472 #> 4199   221.42086759 6400.061 #> 4200   492.07276985 6060.391 #> 4201   445.67367069 6467.177 #> 4202   747.39463485 6251.456 #> 4203   794.12607056 6472.350 #> 4204   223.13798626 6474.325 #> 4205   373.33532658 6392.218 #> 4206   707.73357817 6284.264 #> 4207     7.08520505 6797.504 #> 4208   784.08112234 6289.948 #> 4209    43.90503607 6906.329 #> 4210    55.00486442 6699.421 #> 4211   148.55790580 6592.592 #> 4212   560.98020123 6205.413 #> 4213    74.01309006 6637.111 #> 4214   819.65297848 6403.065 #> 4215   148.10999655 6554.731 #> 4216   148.09535243 6444.045 #> 4217   187.41913339 6703.034 #> 4218   110.74204848 6747.007 #> 4219   708.16892454 6435.091 #> 4220   486.28886350 6353.328 #> 4221   295.63621606 6433.904 #> 4222   671.23802098 6359.631 #> 4223   818.76837480 6442.637 #> 4224   670.92576831 6432.587 #> 4225   206.03795484 6419.614 #> 4226   149.05295653 6669.751 #> 4227   149.48221652 6779.169 #> 4228   221.62751091 6439.621 #> 4229   256.89565018 6585.247 #> 4230   749.74334313 6473.351 #> 4231   279.34301089 6306.024 #> 4232   636.82553398 6245.101 #> 4233   564.57338840 6138.423 #> 4234   561.97614526 6241.999 #> 4235   259.61478150 6547.435 #> 4236   295.74420284 6548.408 #> 4237   670.94540998 6396.217 #> 4238   223.55662043 6586.708 #> 4239   673.75355042 6247.563 #> 4240   598.26477583 6321.111 #> 4241   746.02919035 6286.634 #> 4242   745.80062074 6323.017 #> 4243   222.48161792 6511.916 #> 4244   410.31534642 6391.518 #> 4245   557.65836259 6574.787 #> 4246   334.48237750 6359.471 #> 4247   634.99842281 6283.398 #> 4248   560.28813644 6427.996 #> 4249   856.13325632 6409.158 #> 4250   486.32650125 6278.505 #> 4251   267.50220078 6282.460 #> 4252   856.93928890 6371.826 #> 4253   783.80902640 6448.846 #> 4254   631.26268868 6436.086 #> 4255   744.45629848 6434.674 #> 4256   220.83584887 6402.102 #> 4257   221.84730763 6624.854 #> 4258     3.79326669 6685.047 #> 4259   599.88456004 6134.378 #> 4260     4.20005057 6797.065 #> 4261    36.64232331 6642.161 #> 4262  -102.91411864 6851.524 #> 4263   275.27443692 6379.384 #> 4264   482.75664991 6541.703 #> 4265   335.42422493 6690.217 #> 4266   596.41891761 6428.586 #> 4267   487.03019168 6244.498 #> 4268   148.52585545 6631.903 #> 4269   595.56417464 6469.319 #> 4270   111.79076878 6596.645 #> 4271   556.30778927 6428.246 #> 4272     0.43232325 6873.753 #> 4273    55.52727130 6697.294 #> 4274   260.77589815 6696.190 #> 4275   448.39515533 6281.593 #> 4276   373.49216142 6317.933 #> 4277    73.94252448 6602.416 #> 4278   558.36408374 6465.876 #> 4279   333.73695888 6507.540 #> 4280     1.30175578 6837.297 #> 4281   820.94699770 6366.816 #> 4282   370.13583460 6615.244 #> 4283    92.83412525 6692.798 #> 4284   783.60009624 6290.514 #> 4285   410.43640896 6542.720 #> 4286   148.77441429 6442.932 #> 4287   595.35815798 6506.913 #> 4288   706.85894113 6436.467 #> 4289   519.62815624 6499.084 #> 4290   486.47969596 6355.861 #> 4291   296.70195101 6472.603 #> 4292   821.03579492 6368.723 #> 4293   745.05542404 6360.721 #> 4294   893.88812715 6446.357 #> 4295   261.66883421 6435.662 #> 4296   260.46361370 6286.436 #> 4297   483.52418755 6355.152 #> 4298    75.82799023 6675.892 #> 4299   257.69536860 6400.165 #> 4300   165.30770820 6389.664 #> 4301   526.40590854 6168.381 #> 4302   563.68559307 6245.913 #> 4303   672.73387249 6285.061 #> 4304   222.00389495 6547.573 #> 4305   446.88908556 6279.333 #> 4306   260.09824391 6546.011 #> 4307   671.54654380 6321.851 #> 4308   335.79684747 6319.369 #> 4309   410.31787214 6390.851 #> 4310   259.55698877 6547.965 #> 4311   447.32557936 6355.998 #> 4312   334.68148802 6392.773 #> 4313   296.74825776 6473.204 #> 4314   370.95598617 6507.401 #> 4315   273.79422705 6379.302 #> 4316   484.97808684 6392.704 #> 4317     2.11166269 6873.246 #> 4318   781.69146490 6402.531 #> 4319   595.72933162 6466.618 #> 4320   708.01293419 6320.868 #> 4321   296.29873541 6692.857 #> 4322   372.94420052 6321.106 #> 4323   596.21430190 6356.309 #> 4324    73.05832529 6489.543 #> 4325   222.18461025 6363.029 #> 4326   112.03179000 6411.019 #> 4327    74.61806698 6489.317 #> 4328   520.80103551 6576.207 #> 4329   747.15388291 6401.503 #> 4330   820.73248541 6367.961 #> 4331   526.95517182 6243.673 #> 4332   671.95072712 6320.170 #> 4333   111.49690473 6632.903 #> 4334   242.48962963 6416.850 #> 4335   562.51490873 6204.176 #> 4336   561.82536505 6537.635 #> 4337   671.02873035 6358.324 #> 4338   445.32827440 6575.207 #> 4339   186.07424171 6328.980 #> 4340   635.87764285 6246.685 #> 4341   519.97284015 6577.525 #> 4342   598.07640680 6241.554 #> 4343   111.54304393 6747.813 #> 4344   710.55223876 6248.582 #> 4345   295.35501272 6655.212 #> 4346   486.71803196 6279.580 #> 4347   295.60715133 6619.359 #> 4348   278.62482590 6304.424 #> 4349   447.63244398 6278.956 #> 4350     0.13049193 6609.837 #> 4351   893.99091190 6446.816 #> 4352   636.50978484 6207.483 #> 4353   163.64971705 6342.749 #> 4354   821.70792120 6293.194 #> 4355   896.59357787 6409.470 #> 4356    78.53000279 6787.748 #> 4357   633.56358316 6500.757 #> 4358   148.41531945 6591.799 #> 4359   446.11809746 6467.692 #> 4360     4.09413952 6796.672 #> 4361   333.67302622 6503.423 #> 4362     6.25117957 6797.657 #> 4363   746.83221616 6325.846 #> 4364   555.82638631 6501.091 #> 4365    92.24645263 6694.045 #> 4366    38.09242026 6753.696 #> 4367   149.24685420 6591.037 #> 4368   674.20100888 6248.107 #> 4369    73.41364978 6637.798 #> 4370   488.87136774 6170.822 #> 4371   702.98963775 6457.646 #> 4372   333.61280659 6507.013 #> 4373    37.24552769 6712.676 #> 4374   636.27533197 6209.606 #> 4375   632.82618872 6353.175 #> 4376   562.05608678 6132.698 #> 4377   820.46124470 6330.836 #> 4378   672.08148753 6321.563 #> 4379   599.94320913 6207.054 #> 4380   202.92839061 6310.003 #> 4381   449.45399946 6241.860 #> 4382   557.30504622 6502.460 #> 4383   185.09503757 6553.833 #> 4384   187.63336537 6699.820 #> 4385   745.93243265 6435.061 #> 4386   201.67332168 6310.041 #> 4387   112.82306611 6598.397 #> 4388   483.64382730 6576.213 #> 4389   707.70335426 6319.913 #> 4390    79.43634070 6787.653 #> 4391   746.12166557 6433.935 #> 4392   482.27208873 6505.273 #> 4393   744.26414289 6363.082 #> 4394   671.04091745 6396.105 #> 4395   636.07159738 6283.150 #> 4396   222.97717570 6586.080 #> 4397   298.56728494 6398.626 #> 4398   708.58975508 6435.445 #> 4399   409.81723789 6431.622 #> 4400   110.95394199 6374.969 #> 4401   296.24688422 6619.008 #> 4402   373.26148127 6356.397 #> 4403   482.03629891 6466.717 #> 4404   296.24503970 6620.867 #> 4405   858.02751945 6371.381 #> 4406     0.76748686 6609.517 #> 4407   446.25198086 6464.629 #> 4408   150.35646009 6777.844 #> 4409   -68.97236716 6846.349 #> 4410   856.10967141 6443.299 #> 4411   184.55620890 6439.924 #> 4412   372.24095504 6430.197 #> 4413   241.68176881 6418.950 #> 4414   259.06151899 6587.014 #> 4415   372.00470756 6582.006 #> 4416   335.38148884 6617.966 #> 4417    40.48357095 6679.873 #> 4418   -35.33455606 6767.252 #> 4419   261.06229218 6549.243 #> 4420   410.70577824 6391.222 #> 4421   111.39042770 6561.896 #> 4422   111.34348035 6524.350 #> 4423   525.59189155 6244.191 #> 4424   258.49008077 6586.995 #> 4425   894.39722382 6447.940 #> 4426   745.87297591 6401.275 #> 4427   258.92431340 6547.082 #> 4428   857.09280003 6444.415 #> 4429   373.42880702 6396.422 #> 4430    58.12271251 6657.950 #> 4431   279.13807110 6340.405 #> 4432   487.59015109 6242.996 #> 4433   148.82854294 6407.699 #> 4434   261.12977005 6289.156 #> 4435   199.87828639 6385.514 #> 4436   110.44191380 6449.109 #> 4437   819.20233878 6367.692 #> 4438   410.56213656 6428.676 #> 4439   559.77319141 6170.532 #> 4440   296.84621173 6470.739 #> 4441   524.35003332 6355.961 #> 4442   446.28305436 6428.231 #> 4443   448.26495488 6314.547 #> 4444   447.27002764 6392.431 #> 4445    43.07340202 6792.151 #> 4446   149.44529090 6778.579 #> 4447   148.46868636 6665.814 #> 4448   111.70802878 6636.960 #> 4449   600.00918136 6172.636 #> 4450   746.27180493 6290.067 #> 4451   109.69958077 6596.481 #> 4452   819.64380710 6404.752 #> 4453   221.72097019 6476.187 #> 4454   408.71906868 6465.578 #> 4455   332.22613761 6506.464 #> 4456   338.23817499 6691.956 #> 4457   241.48426541 6418.131 #> 4458   782.02914164 6435.894 #> 4459   672.20927797 6322.175 #> 4460   297.42350052 6323.870 #> 4461   707.81199805 6321.597 #> 4462   297.95935739 6324.779 #> 4463   185.49305217 6590.480 #> 4464   560.18850371 6354.407 #> 4465   563.18274681 6170.189 #> 4466   332.75564441 6507.714 #> 4467   372.31857659 6431.957 #> 4468   482.80627209 6501.918 #> 4469   822.43159281 6331.240 #> 4470   524.06489041 6278.838 #> 4471   335.35698835 6355.749 #> 4472   671.06457138 6432.290 #> 4473   633.01424818 6505.127 #> 4474    94.89627030 6691.041 #> 4475   446.80606942 6611.629 #> 4476   523.48777920 6318.045 #> 4477    13.97595222 6695.806 #> 4478   525.09125711 6242.078 #> 4479     4.92258657 6910.478 #> 4480   483.59212833 6577.548 #> 4481   671.63013276 6321.448 #> 4482   165.40547477 6385.172 #> 4483   259.24620147 6507.769 #> 4484   185.57044761 6292.677 #> 4485   632.96731673 6433.989 #> 4486   894.29008685 6446.921 #> 4487   560.59638106 6356.796 #> 4488   526.37050581 6281.051 #> 4489    25.24878729 6699.529 #> 4490   204.29859398 6381.770 #> 4491   296.67322590 6358.982 #> 4492   258.37597685 6658.214 #> 4493   521.00585481 6463.522 #> 4494   260.87991237 6288.726 #> 4495   371.66950625 6380.101 #> 4496   223.42765326 6661.605 #> 4497   558.01847052 6504.427 #> 4498    71.71556696 6377.076 #> 4499   560.28664739 6504.665 #> 4500   525.08322262 6204.186 #> 4501   744.73204238 6360.677 #> 4502   201.58702826 6310.067 #> 4503   820.75322696 6367.920 #> 4504   -31.51036328 6650.397 #> 4505   443.60465172 6536.724 #> 4506    35.04589091 6717.645 #> 4507   204.67539835 6419.233 #> 4508   564.86772304 6132.402 #> 4509   112.04619704 6484.320 #> 4510   260.48269288 6512.076 #> 4511   489.77852708 6094.267 #> 4512    77.77465857 6791.605 #> 4513   746.22601972 6325.423 #> 4514   448.22956748 6356.608 #> 4515   369.97137973 6577.987 #> 4516   223.85107906 6291.280 #> 4517   223.20189497 6660.740 #> 4518   597.70321774 6390.354 #> 4519   480.31651762 6503.758 #> 4520   408.71688066 6469.124 #> 4521   522.93949377 6356.250 #> 4522   523.13692778 6393.431 #> 4523   526.28813812 6167.878 #> 4524   633.05775043 6429.324 #> 4525   482.74871680 6463.213 #> 4526   597.67598937 6392.446 #> 4527   634.05154360 6466.608 #> 4528   333.91889072 6466.474 #> 4529   671.76426109 6360.056 #> 4530    92.24198014 6691.842 #> 4531   447.37138171 6392.747 #> 4532   634.45334318 6357.666 #> 4533   896.26602851 6372.760 #> 4534   556.85974973 6576.092 #> 4535   411.41842443 6316.144 #> 4536   169.85868203 6341.678 #> 4537   376.23267634 6691.128 #> 4538   167.50440993 6423.029 #> 4539   185.15420573 6329.499 #> 4540   595.52074584 6539.163 #> 4541   482.70608207 6467.251 #> 4542   298.50997182 6619.806 #> 4543   409.53840580 6539.570 #> 4544   446.12925515 6502.392 #> 4545   522.92998579 6355.906 #> 4546   895.90687310 6372.994 #> 4547   518.96580360 6574.461 #> 4548   781.50664788 6404.072 #> 4549   260.81791010 6547.625 #> 4550   674.17975013 6248.098 #> 4551   529.14774882 6134.131 #> 4552   109.41515386 6448.885 #> 4553   445.02093701 6465.297 #> 4554   489.67711757 6166.156 #> 4555    42.23126413 6790.863 #> 4556   599.00048002 6319.550 #> 4557   445.26317802 6279.395 #> 4558   203.27293800 6418.945 #> 4559    74.13361520 6675.046 #> 4560   555.92886105 6466.479 #> 4561   493.11605945 6204.268 #> 4562   410.35703985 6279.809 #> 4563   333.87252735 6545.004 #> 4564   632.86164468 6321.760 #> 4565   408.99898601 6575.830 #> 4566   187.29861543 6700.703 #> 4567    73.37965894 6602.147 #> 4568    54.94816480 6621.764 #> 4569   484.99850239 6392.258 #> 4570   110.37811743 6523.582 #> 4571   709.21373468 6285.939 #> 4572   206.03084431 6420.233 #> 4573   595.71398245 6503.033 #> 4574   447.43576444 6352.526 #> 4575   519.62515333 6504.628 #> 4576   745.28036713 6436.697 #> 4577   371.32628750 6542.896 #> 4578   370.98469334 6614.868 #> 4579   240.37724271 6306.651 #> 4580   522.84142488 6352.033 #> 4581   856.47810953 6407.213 #> 4582   821.36503096 6328.639 #> 4583   371.21221633 6544.070 #> 4584   148.50383717 6594.652 #> 4585     1.11238543 6871.185 #> 4586   336.07650960 6320.257 #> 4587   371.51996994 6615.097 #> 4588    42.60206916 6902.980 #> 4589   203.36591195 6383.939 #> 4590    73.96933754 6751.535 #> 4591    41.86921289 6866.356 #> 4592   486.57059124 6315.939 #> 4593   148.70552966 6778.823 #> 4594   595.50086444 6429.254 #> 4595   819.78976007 6440.260 #> 4596   222.75376253 6626.815 #> 4597   335.54093174 6317.470 #> 4598   261.11756341 6550.498 #> 4599   373.33796697 6391.711 #> 4600   148.17266645 6628.752 #> 4601   597.89234843 6279.968 #> 4602   523.23919860 6318.722 #> 4603   635.41390154 6243.997 #> 4604   856.97269891 6405.456 #> 4605   296.29783790 6620.883 #> 4606   167.64965075 6423.786 #> 4607   817.97214533 6443.628 #> 4608   205.76558930 6420.566 #> 4609    72.88364306 6600.987 #> 4610   782.72655322 6362.893 #> 4611   600.15642405 6319.185 #> 4612   632.11942503 6432.301 #> 4613   148.37420604 6780.502 #> 4614   279.43382173 6343.220 #> 4615   297.00501000 6510.542 #> 4616   167.81752218 6425.550 #> 4617   597.98641727 6243.097 #> 4618   637.34206743 6207.420 #> 4619   373.01944170 6319.594 #> 4620   371.64883400 6542.691 #> 4621   674.34341408 6248.408 #> 4622    56.64586774 6696.821 #> 4623    40.81705681 6680.258 #> 4624   634.71696176 6320.517 #> 4625   856.00578528 6443.855 #> 4626   146.34749994 6443.619 #> 4627   -32.91138455 6877.021 #> 4628   598.39393333 6243.133 #> 4629   408.88430829 6539.434 #> 4630   410.28627122 6353.853 #> 4631   297.31572472 6581.707 #> 4632   784.73246791 6289.909 #> 4633   708.32400276 6432.700 #> 4634   149.21904583 6741.542 #> 4635   598.15387782 6391.839 #> 4636    44.85995028 6904.891 #> 4637   146.47837222 6371.360 #> 4638   147.44495645 6445.725 #> 4639   279.90989391 6343.173 #> 4640   298.60985115 6583.567 #> 4641   372.72075355 6281.838 #> 4642   167.63617346 6388.259 #> 4643   260.77806493 6436.775 #> 4644   258.85393970 6471.029 #> 4645   710.33516600 6250.127 #> 4646   708.87505240 6398.335 #> 4647   784.68264100 6362.459 #> 4648   412.26977266 6242.730 #> 4649   167.38965797 6386.229 #> 4650   259.44027640 6360.928 #> 4651   524.28111502 6168.975 #> 4652   445.36627249 6577.211 #> 4653   634.92214822 6320.991 #> 4654   373.09605830 6281.734 #> 4655   673.61524003 6470.019 #> 4656   858.10414080 6334.156 #> 4657   223.71312308 6478.441 #> 4658   187.00415199 6401.903 #> 4659   240.01866432 6379.997 #> 4660   333.71186263 6508.405 #> 4661   487.64480173 6243.291 #> 4662   332.66815549 6654.390 #> 4663   486.69515774 6317.073 #> 4664   559.46342432 6389.606 #> 4665   745.95882361 6326.169 #> 4666   451.07222911 6317.137 #> 4667    18.34393643 6665.394 #> 4668   600.70126917 6168.836 #> 4669   818.36732437 6441.982 #> 4670   857.79144853 6370.278 #> 4671   560.28539030 6205.842 #> 4672   672.49273540 6283.390 #> 4673   297.24409682 6658.546 #> 4674    75.96791717 6750.069 #> 4675   256.83475936 6547.567 #> 4676   635.24394178 6172.449 #> 4677   635.13124846 6280.869 #> 4678   260.09510703 6364.032 #> 4679   335.09714461 6693.508 #> 4680    73.25642999 6640.682 #> 4681    74.07513995 6637.280 #> 4682   -34.61414300 6839.143 #> 4683   597.60731570 6390.987 #> 4684   708.64641970 6397.985 #> 4685   184.99316791 6479.755 #> 4686   259.04216476 6508.486 #> 4687   560.90154355 6315.180 #> 4688   482.65561857 6541.459 #> 4689   259.36880853 6582.252 #> 4690   299.53917955 6358.548 #> 4691   708.94945293 6247.081 #> 4692   595.31718481 6503.118 #> 4693   597.64059636 6317.257 #> 4694   184.54193115 6328.197 #> 4695   634.90501923 6318.359 #> 4696   526.63147915 6165.229 #> 4697   223.16246250 6663.459 #> 4698   146.89503412 6630.152 #> 4699    42.70718081 6830.604 #> 4700     4.14130024 6913.798 #> 4701   409.56178666 6507.502 #> 4702   446.78476233 6427.543 #> 4703   260.71623452 6363.042 #> 4704   112.13994667 6598.327 #> 4705   334.27431619 6430.054 #> 4706    41.77092054 6791.981 #> 4707   186.93615620 6700.195 #> 4708   856.90978953 6368.517 #> 4709   335.52122280 6284.652 #> 4710   148.14681636 6480.398 #> 4711   224.63084952 6699.044 #> 4712   668.01091589 6209.365 #> 4713   372.16729629 6429.042 #> 4714   522.96064002 6390.870 #> 4715   671.74948333 6356.803 #> 4716   486.61511598 6316.932 #> 4717   821.14531486 6444.237 #> 4718   671.26734264 6393.523 #> 4719   483.08112424 6539.357 #> 4720   409.14902384 6541.849 #> 4721   595.08241774 6502.702 #> 4722   595.72018920 6428.518 #> 4723     4.09958258 6835.754 #> 4724   297.65328720 6468.210 #> 4725   148.36351834 6741.570 #> 4726   240.80193933 6420.777 #> 4727   334.54773750 6545.100 #> 4728   258.65114123 6471.620 #> 4729   446.25994282 6278.082 #> 4730   -68.89837557 6807.357 #> 4731   186.06640149 6663.055 #> 4732   113.17464759 6670.762 #> 4733   594.97815179 6506.138 #> 4734   221.99967474 6402.074 #> 4735   595.67881431 6503.024 #> 4736   747.21486158 6251.723 #> 4737   561.74449574 6246.577 #> 4738   782.98149692 6441.208 #> 4739   148.39563642 6707.424 #> 4740   562.73953097 6169.822 #> 4741   713.56547331 6285.879 #> 4742   822.16695767 6367.403 #> 4743   222.75080618 6325.840 #> 4744   109.95835335 6707.773 #> 4745   110.52714015 6558.420 #> 4746   709.71293874 6285.777 #> 4747   257.83080791 6398.745 #> 4748    70.97492764 6635.973 #> 4749   563.75994825 6171.024 #> 4750   672.88260659 6460.640 #> 4751   521.94535749 6391.363 #> 4752   784.04854547 6289.675 #> 4753   147.44346730 6553.281 #> 4754   445.66358048 6542.645 #> 4755   372.82374846 6356.540 #> 4756    73.52640558 6528.072 #> 4757   445.53022340 6463.998 #> 4758   525.52817265 6169.791 #> 4759   333.51409935 6430.268 #> 4760   635.02286058 6243.076 #> 4761   445.82326632 6579.321 #> 4762   448.09245270 6577.895 #> 4763   446.11242550 6540.541 #> 4764   408.85056635 6578.421 #> 4765   183.41890462 6441.050 #> 4766   204.30980459 6309.168 #> 4767   185.15745226 6590.144 #> 4768  -106.25897494 6815.053 #> 4769   224.49298888 6289.817 #> 4770    42.33353050 6791.258 #> 4771   223.06491707 6588.531 #> 4772   185.16620125 6442.731 #> 4773   633.31849620 6501.125 #> 4774   633.48850049 6395.565 #> 4775    40.83592316 6791.435 #> 4776   563.23487382 6172.147 #> 4777   333.79342370 6505.601 #> 4778   334.02452083 6468.410 #> 4779   486.92563535 6279.907 #> 4780    77.69326756 6786.186 #> 4781   558.22379826 6504.000 #> 4782   223.13333156 6327.003 #> 4783   206.10375515 6348.565 #> 4784   600.38870838 6208.339 #> 4785   371.90646422 6469.131 #> 4786   633.72394377 6355.654 #> 4787   412.96286873 6282.439 #> 4788   525.94637220 6169.270 #> 4789   373.29448339 6318.111 #> 4790    42.05676634 6792.369 #> 4791   559.11769345 6578.270 #> 4792   635.30665007 6396.160 #> 4793   707.24639892 6431.879 #> 4794   782.72015324 6403.087 #> 4795   373.05952920 6318.659 #> 4796   333.98912747 6578.184 #> 4797   598.01926848 6320.192 #> 4798   113.12218177 6634.201 #> 4799   408.82896960 6468.579 #> 4800   745.16826361 6360.802 #> 4801   222.54821461 6325.109 #> 4802   445.72819775 6579.593 #> 4803   373.92325957 6395.004 #> 4804   410.53063343 6390.428 #> 4805   371.59520555 6508.925 #> 4806   223.13058955 6513.984 #> 4807   446.47732543 6277.813 #> 4808   447.99159402 6278.197 #> 4809   222.52358979 6551.264 #> 4810   257.01499966 6436.101 #> 4811   673.15403589 6467.906 #> 4812   445.25841307 6538.634 #> 4813   520.05922888 6501.746 #> 4814   672.83352405 6245.576 #> 4815   258.79997426 6657.699 #> 4816    -0.66874431 6721.844 #> 4817    73.86164840 6599.903 #> 4818   222.56068540 6362.036 #> 4819   296.67222555 6694.161 #> 4820   334.69792977 6544.355 #> 4821    58.85068094 6620.607 #> 4822   281.48877399 6343.052 #> 4823   783.96871940 6324.750 #> 4824   561.03724461 6466.870 #> 4825   334.27094148 6466.781 #> 4826   111.20650988 6371.584 #> 4827   110.56812197 6670.846 #> 4828   260.54229142 6696.233 #> 4829   185.19815828 6551.488 #> 4830   370.95568407 6506.117 #> 4831    74.02941181 6676.894 #> 4832   335.27008246 6691.761 #> 4833   449.97236053 6242.805 #> 4834   818.50592084 6480.222 #> 4835   896.42981381 6410.462 #> 4836   278.77982444 6416.526 #> 4837   110.11147805 6446.991 #> 4838   486.44422931 6244.889 #> 4839   334.20104983 6582.526 #> 4840   112.10719889 6673.263 #> 4841   857.22609965 6334.658 #> 4842    15.13538436 6696.621 #> 4843   525.96030855 6168.725 #> 4844   -35.99924361 6613.578 #> 4845   223.19801833 6663.441 #> 4846   -35.54490270 6577.440 #> 4847   371.81593446 6429.858 #> 4848   222.43765626 6439.020 #> 4849   782.41474186 6365.131 #> 4850    38.01965653 6681.975 #> 4851   112.29788666 6747.980 #> 4852   635.65942284 6208.875 #> 4853   818.58635281 6480.565 #> 4854   148.56020089 6443.555 #> 4855   258.97803266 6471.290 #> 4856   746.63809025 6435.757 #> 4857   296.72162910 6472.768 #> 4858   446.08383668 6578.966 #> 4859    74.04834920 6636.948 #> 4860   562.68806868 6316.407 #> 4861   372.86975892 6691.153 #> 4862   782.58252897 6363.578 #> 4863   409.26715354 6502.574 #> 4864   523.42221434 6318.576 #> 4865   409.22709323 6542.914 #> 4866   412.11927259 6280.259 #> 4867   149.32298753 6778.827 #> 4868   110.23301008 6557.352 #> 4869   448.40057154 6316.213 #> 4870   410.68230292 6353.890 #> 4871   296.21256539 6655.622 #> 4872   745.24697599 6468.163 #> 4873   297.07840120 6507.187 #> 4874   259.52690361 6586.613 #> 4875    57.05920362 6659.371 #> 4876   256.80978810 6325.682 #> 4877   371.37472526 6504.398 #> 4878   856.60930271 6371.358 #> 4879   166.70245742 6421.826 #> 4880   448.17026067 6390.428 #> 4881   149.61643406 6703.211 #> 4882   259.29007811 6361.330 #> 4883   595.84216084 6465.471 #> 4884   671.72376244 6466.468 #> 4885   746.61983198 6468.060 #> 4886   857.46360664 6372.436 #> 4887   820.57276198 6401.061 #> 4888   371.43523520 6356.084 #> 4889   410.53182555 6542.943 #> 4890   480.40215675 6576.109 #> 4891   485.58940386 6317.935 #> 4892   147.42286735 6517.483 #> 4893   112.52489951 6485.011 #> 4894   147.49920755 6372.741 #> 4895   185.61696944 6477.050 #> 4896   671.76187854 6323.654 #> 4897   634.38101204 6320.774 #> 4898   371.87690963 6540.274 #> 4899   238.55028578 6380.836 #> 4900   559.19870687 6353.933 #> 4901   823.27462952 6330.778 #> 4902   165.97322788 6422.753 #> 4903   299.58070289 6694.038 #> 4904   333.34704438 6544.808 #> 4905    79.76865735 6787.707 #> 4906   185.02074430 6475.931 #> 4907   895.32519969 6370.728 #> 4908   165.41152800 6387.655 #> 4909   147.50099941 6482.958 #> 4910   185.55644395 6626.083 #> 4911   523.45568344 6316.200 #> 4912   110.63824964 6710.789 #> 4913   223.27509214 6327.364 #> 4914   409.16895565 6394.375 #> 4915   563.60198413 6171.161 #> 4916   109.45993840 6598.001 #> 4917   152.29886735 6778.194 #> 4918   372.34584884 6469.041 #> 4919   708.58527378 6321.230 #> 4920   823.53101381 6330.768 #> 4921   670.26198416 6320.304 #> 4922   452.67354344 6095.969 #> 4923   185.40234076 6443.863 #> 4924    36.48873109 6571.288 #> 4925   817.14077508 6471.259 #> 4926   335.86955922 6689.727 #> 4927   333.79972738 6504.797 #> 4928   671.79632773 6209.561 #> 4929   239.99528141 6417.737 #> 4930   634.71064860 6173.660 #> 4931   673.33450612 6209.864 #> 4932   639.09103520 6172.424 #> 4933   147.54402844 6482.827 #> 4934   482.87995518 6431.438 #> 4935   408.33324356 6577.740 #> 4936   486.17929065 6356.371 #> 4937   257.29158850 6396.898 #> 4938   222.80632223 6510.347 #> 4939   335.09573293 6690.452 #> 4940   296.81349916 6395.347 #> 4941   674.30989655 6355.341 #> 4942   280.59622818 6342.412 #> 4943   490.40505097 6095.551 #> 4944   792.27240782 6471.588 #> 4945   203.93852888 6307.666 #> 4946   276.50627869 6378.719 #> 4947   152.96936673 6408.398 #> 4948    36.71429167 6713.603 #> 4949   450.94095652 6242.223 #> 4950   672.65307347 6210.508 #> 4951   407.50374820 6541.798 #> 4952   278.99224885 6417.315 #> 4953    72.60891238 6564.292 #> 4954   148.41541949 6370.833 #> 4955   259.12420491 6586.208 #> 4956   600.34641764 6205.842 #> 4957   523.78914227 6429.155 #> 4958   556.85467038 6576.849 #> 4959    56.40047363 6697.042 #> 4960   297.22065374 6321.576 #> 4961   596.87480106 6393.425 #> 4962   237.47755548 6306.103 #> 4963   600.33043717 6206.555 #> 4964   221.54019119 6548.409 #> 4965   599.19005114 6280.001 #> 4966   410.58038370 6615.210 #> 4967   522.79257912 6357.777 #> 4968   635.14167920 6206.919 #> 4969   708.50667494 6249.059 #> 4970   857.38664579 6368.610 #> 4971   600.26035398 6171.587 #> 4972   223.76844517 6588.691 #> 4973   149.01388854 6480.062 #> 4974   635.08164887 6505.193 #> 4975     1.42371458 6875.351 #> 4976   596.50856822 6505.165 #> 4977   523.90936648 6315.610 #> 4978   855.45539262 6443.854 #> 4979   486.71224614 6318.615 #> 4980   371.43091263 6540.647 #> 4981   296.36858844 6658.040 #> 4982    42.74933506 6866.467 #> 4983   297.30516440 6397.139 #> 4984   599.47399621 6318.401 #> 4985   856.02493795 6443.083 #> 4986   595.91289489 6391.664 #> 4987   558.81159023 6427.630 #> 4988   525.74555742 6207.061 #> 4989    76.15762930 6675.049 #> 4990   164.14396117 6386.649 #> 4991   558.26103711 6505.077 #> 4992   445.54015371 6575.291 #> 4993   745.38681505 6398.120 #> 4994   557.50966285 6502.043 #> 4995   373.33953783 6320.860 #> 4996   238.15524301 6308.364 #> 4997   600.40666773 6207.274 #> 4998   449.44539632 6281.328 #> 4999   599.11154480 6245.076 #> 5000   673.60777701 6469.071 #> 5001   333.06670784 6641.547 #> 5002   262.74412451 6696.591 #> 5003    35.91625506 6643.789 #> 5004    93.35801986 6653.496 #> 5005   744.99807454 6435.824 #> 5006   634.03964336 6395.196 #> 5007   148.85290136 6707.753 #> 5008   636.88617739 6172.836 #> 5009   260.97174762 6694.343 #> 5010   632.00530005 6430.317 #> 5011    36.64959756 6343.157 #> 5012   279.53377306 6302.891 #> 5013   110.59910454 6672.376 #> 5014   334.38872686 6581.831 #> 5015   146.81082370 6444.606 #> 5016    73.35539104 6487.099 #> 5017   236.55451214 6343.513 #> 5018   186.01321680 6663.397 #> 5019   745.34516185 6362.663 #> 5020   221.78922846 6697.411 #> 5021   634.05653845 6356.779 #> 5022   169.39194899 6340.959 #> 5023   746.29926211 6286.483 #> 5024   446.27219172 6430.630 #> 5025   634.86001025 6357.536 #> 5026   483.55155108 6429.423 #> 5027    53.26423730 6623.399 #> 5028   818.79116556 6440.767 #> 5029   447.05631477 6427.372 #> 5030   446.62948786 6428.890 #> 5031   598.63176991 6394.028 #> 5032   371.46579293 6390.723 #> 5033   518.81022639 6577.127 #> 5034     0.72635805 6724.310 #> 5035   110.40600525 6558.935 #> 5036   526.28917343 6166.974 #> 5037   670.70670468 6283.651 #> 5038   595.57472763 6539.489 #> 5039   370.41627213 6579.652 #> 5040   600.57839220 6133.719 #> 5041   259.11571324 6437.110 #> 5042   165.33439977 6384.968 #> 5043   445.78181906 6541.543 #> 5044    43.48831350 6904.307 #> 5045   523.05195062 6430.819 #> 5046   482.28302453 6541.241 #> 5047   260.50084078 6437.160 #> 5048   238.02714893 6305.908 #> 5049   784.78348944 6290.244 #> 5050   818.44071824 6481.251 #> 5051   557.84457681 6426.286 #> 5052   794.56772597 6471.662 #> 5053   599.82120808 6171.699 #> 5054   521.27676068 6505.961 #> 5055   224.53450862 6325.166 #> 5056   523.28252879 6426.836 #> 5057   636.28111914 6246.062 #> 5058   223.15815728 6623.181 #> 5059   448.92953895 6242.540 #> 5060   408.96339002 6464.662 #> 5061   -68.57061692 6843.842 #> 5062   671.87021152 6432.260 #> 5063   447.81672660 6356.279 #> 5064   409.34281360 6465.028 #> 5065   895.31894483 6446.411 #> 5066   204.03479661 6345.409 #> 5067   602.11689728 6209.088 #> 5068   237.77893046 6307.410 #> 5069   782.56442538 6365.979 #> 5070   481.20744134 6505.459 #> 5071   187.03455057 6476.883 #> 5072   336.00061779 6319.584 #> 5073   371.82456788 6431.177 #> 5074   784.16418650 6328.386 #> 5075   523.99180704 6279.826 #> 5076   598.42640181 6281.678 #> 5077   819.04263023 6443.310 #> 5078   821.01656169 6294.778 #> 5079   520.31080374 6575.609 #> 5080   446.79525453 6428.508 #> 5081   446.69217454 6542.278 #> 5082   705.87203576 6359.538 #> 5083   705.05181321 6455.190 #> 5084   450.30889185 6243.396 #> 5085   670.17564497 6432.747 #> 5086   636.21668315 6209.310 #> 5087    37.61227485 6756.217 #> 5088   145.75228553 6444.625 #> 5089   671.22389095 6395.987 #> 5090   223.14376845 6696.506 #> 5091   206.60331486 6342.834 #> 5092   111.96453331 6595.878 #> 5093   276.49506341 6415.389 #> 5094    36.16733770 6644.508 #> 5095   856.73720539 6371.715 #> 5096   333.99792849 6620.280 #> 5097   522.26004554 6429.588 #> 5098   522.66747394 6392.606 #> 5099   373.26802120 6283.530 #> 5100   409.75195676 6543.613 #> 5101   375.62920277 6284.777 #> 5102    74.49162154 6639.857 #> 5103   632.78768181 6430.807 #> 5104   260.38517087 6362.190 #> 5105   745.97668265 6396.980 #> 5106   523.52713080 6318.924 #> 5107   262.04846509 6323.210 #> 5108   635.88693270 6280.269 #> 5109   223.67015446 6325.916 #> 5110   335.69349735 6322.930 #> 5111   599.04251658 6280.874 #> 5112   279.79331563 6305.720 #> 5113   667.56691247 6431.992 #> 5114   222.57958145 6399.976 #> 5115   518.89570358 6540.162 #> 5116   371.31536797 6541.147 #> 5117   109.44598042 6522.719 #> 5118   745.87768360 6286.849 #> 5119   334.76743698 6470.741 #> 5120   557.87640109 6502.280 #> 5121   525.37550385 6171.060 #> 5122   258.77326624 6359.966 #> 5123   371.22603119 6690.922 #> 5124    25.16371903 6700.948 #> 5125   148.23451689 6743.842 #> 5126   260.34340969 6660.021 #> 5127   259.76777825 6620.391 #> 5128   557.98838932 6540.774 #> 5129   445.92633503 6501.277 #> 5130   223.01522575 6664.134 #> 5131   409.02842166 6544.177 #> 5132   558.87023579 6430.991 #> 5133   241.37385138 6417.102 #> 5134   597.30765251 6318.675 #> 5135   634.48850772 6358.356 #> 5136   596.03784155 6502.753 #> 5137   521.36930272 6466.843 #> 5138   198.97503452 6384.590 #> 5139   597.39053300 6390.344 #> 5140   782.96025409 6328.358 #> 5141   486.35504667 6318.214 #> 5142   110.61577039 6711.020 #> 5143    59.17494927 6657.153 #> 5144   296.15018420 6618.291 #> 5145   818.21920209 6480.785 #> 5146   372.06035902 6543.688 #> 5147   183.46331517 6589.745 #> 5148   222.28621320 6697.963 #> 5149   634.58613447 6358.629 #> 5150   895.69048154 6411.566 #> 5151   597.70739812 6243.096 #> 5152   147.90525499 6482.589 #> 5153   524.87917186 6316.960 #> 5154   600.39523357 6134.881 #> 5155   203.87441917 6344.725 #> 5156   671.09229794 6284.323 #> 5157   447.49642278 6355.849 #> 5158   411.02493296 6321.012 #> 5159   561.67037218 6171.272 #> 5160    36.31039633 6494.980 #> 5161   184.79781334 6591.813 #> 5162   167.71454187 6424.439 #> 5163   112.09427291 6782.259 #> 5164   596.04487154 6503.268 #> 5165   447.73643900 6390.806 #> 5166   337.02123979 6692.166 #> 5167   148.10890070 6482.011 #> 5168   110.97425485 6522.252 #> 5169   164.86244347 6388.077 #> 5170   150.87665758 6704.458 #> 5171   411.36627449 6316.607 #> 5172   185.31115247 6402.743 #> 5173   296.71678242 6582.626 #> 5174   337.59703521 6692.679 #> 5175   333.20871211 6505.472 #> 5176   119.10547530 6480.966 #> 5177   633.96158236 6242.708 #> 5178   824.88560700 6470.380 #> 5179   222.34472729 6663.910 #> 5180   148.58106598 6554.900 #> 5181   371.23364886 6468.944 #> 5182   168.35445289 6423.161 #> 5183   747.28980422 6323.556 #> 5184   600.61691932 6169.054 #> 5185   520.39811939 6504.287 #> 5186   559.92123554 6245.281 #> 5187   372.58170925 6392.447 #> 5188   524.12051144 6315.044 #> 5189   335.31400423 6357.679 #> 5190   372.61157430 6693.513 #> 5191   -69.05875794 6884.707 #> 5192   447.18091113 6429.950 #> 5193   238.52412448 6307.858 #> 5194   558.20342321 6468.029 #> 5195     0.49656453 6536.562 #> 5196   185.73496674 6666.123 #> 5197   295.03181140 6619.811 #> 5198   485.44777984 6430.643 #> 5199   488.39906127 6208.213 #> 5200   114.28536261 6784.272 #> 5201   743.80159635 6436.102 #> 5202   671.67780182 6321.766 #> 5203   110.49386890 6711.282 #> 5204   557.76785564 6465.034 #> 5205   258.69458025 6581.930 #> 5206     2.78606796 6684.968 #> 5207   148.09878377 6629.879 #> 5208   745.89544168 6323.832 #> 5209   521.65988170 6461.901 #> 5210   183.68391983 6332.843 #> 5211   221.79586048 6548.252 #> 5212   523.02064681 6356.266 #> 5213   262.44484332 6696.332 #> 5214   147.79720902 6368.521 #> 5215   -17.26018725 6707.167 #> 5216   258.60499013 6511.749 #> 5217   479.99916716 6577.072 #> 5218   559.06832485 6465.043 #> 5219   636.28969565 6246.644 #> 5220   521.29385534 6502.414 #> 5221   857.01986940 6369.169 #> 5222   371.57189197 6617.444 #> 5223   372.28886485 6395.406 #> 5224   485.61819433 6356.472 #> 5225   111.72625096 6635.767 #> 5226    56.71479627 6696.904 #> 5227   185.34728219 6589.540 #> 5228   481.46326353 6504.644 #> 5229   296.73047129 6284.457 #> 5230   221.86530405 6325.062 #> 5231   297.40829776 6693.469 #> 5232   561.40382047 6319.937 #> 5233   410.50085071 6395.393 #> 5234   857.47793624 6368.328 #> 5235    37.88637982 6720.208 #> 5236   707.82047260 6431.835 #> 5237   334.29978825 6544.911 #> 5238   336.65594751 6281.637 #> 5239   186.41214499 6666.534 #> 5240   819.92115538 6405.409 #> 5241   297.00586735 6471.685 #> 5242   818.95060882 6475.953 #> 5243   678.00483129 6395.481 #> 5244   221.12395891 6402.659 #> 5245   333.45882924 6618.520 #> 5246   486.71184356 6319.058 #> 5247   634.32641972 6318.744 #> 5248   368.63533620 6689.159 #> 5249   186.10178479 6328.941 #> 5250   164.79231199 6386.741 #> 5251   259.04760217 6324.499 #> 5252   185.10016101 6441.799 #> 5253   520.98955051 6466.584 #> 5254   276.67933019 6377.976 #> 5255   819.99444069 6403.981 #> 5256   709.35536350 6360.421 #> 5257   484.97986546 6429.704 #> 5258   413.24447953 6281.028 #> 5259   633.75030050 6431.738 #> 5260   487.30185689 6281.282 #> 5261   556.89695015 6578.657 #> 5262   525.97340360 6132.646 #> 5263   596.38484330 6428.478 #> 5264   184.84120863 6440.860 #> 5265   487.06274659 6319.421 #> 5266   772.77615416 6462.984 #> 5267   818.98764715 6440.168 #> 5268   258.10502960 6323.133 #> 5269   114.45521598 6784.813 #> 5270   671.64718425 6469.208 #> 5271   595.78341398 6469.140 #> 5272   445.85559085 6502.200 #> 5273   149.60263898 6780.052 #> 5274   823.99247561 6295.332 #> 5275   447.64714102 6282.153 #> 5276   259.82522259 6620.484 #> 5277   334.53103555 6433.744 #> 5278   597.80290096 6243.033 #> 5279   819.80796325 6405.401 #> 5280   276.86008372 6415.423 #> 5281   671.83487095 6208.438 #> 5282   224.64829242 6661.434 #> 5283   672.95705139 6245.141 #> 5284   297.66248264 6583.787 #> 5285   296.80182982 6359.665 #> 5286   185.70534424 6629.115 #> 5287   335.76137341 6655.631 #> 5288   410.92718926 6319.685 #> 5289   223.38401345 6399.798 #> 5290   334.96759657 6392.418 #> 5291   597.84556293 6244.971 #> 5292   712.25891126 6285.976 #> 5293   563.54365718 6247.139 #> 5294   185.92442816 6625.403 #> 5295   556.67040100 6465.126 #> 5296   297.98454781 6584.514 #> 5297   223.15945701 6585.160 #> 5298   745.67172066 6397.409 #> 5299   600.92632126 6205.598 #> 5300   448.48680955 6281.721 #> 5301   668.81008676 6433.468 #> 5302   184.72692867 6442.714 #> 5303   203.49467565 6342.732 #> 5304    74.47812187 6638.911 #> 5305   855.82798040 6329.944 #> 5306   333.51844067 6504.877 #> 5307   634.84832064 6284.863 #> 5308   565.53935776 6319.016 #> 5309   561.58853760 6393.272 #> 5310   183.65678603 6441.250 #> 5311   748.89720528 6472.365 #> 5312   259.69999116 6363.857 #> 5313   487.90780475 6278.700 #> 5314   263.50385603 6696.941 #> 5315   784.13942473 6439.803 #> 5316   781.55796122 6363.892 #> 5317   560.90702110 6278.261 #> 5318   372.50775759 6282.762 #> 5319   525.73015131 6207.344 #> 5320   782.19173455 6401.736 #> 5321   114.17612942 6781.768 #> 5322   110.93604494 6711.427 #> 5323   201.39355315 6385.502 #> 5324   561.37737037 6278.856 #> 5325   747.38716583 6250.190 #> 5326   240.65663569 6381.985 #> 5327   148.62045371 6368.247 #> 5328   337.16905880 6393.096 #> 5329   522.75278496 6392.815 #> 5330   562.57884711 6173.697 #> 5331   669.98926721 6209.990 #> 5332   222.35377000 6551.363 #> 5333   203.45077752 6384.993 #> 5334    76.51387055 6676.568 #> 5335   408.90676433 6503.223 #> 5336   333.70763840 6616.417 #> 5337   185.48391990 6552.050 #> 5338     3.92455251 6910.390 #> 5339   857.05378301 6331.827 #> 5340   705.81088050 6395.140 #> 5341   409.44309092 6540.015 #> 5342   481.83324458 6575.692 #> 5343   260.83859392 6396.474 #> 5344   297.64911750 6432.985 #> 5345   148.83765689 6481.319 #> 5346    20.89285429 6626.228 #> 5347     1.79881829 6684.756 #> 5348   744.82456513 6436.718 #> 5349   295.67571201 6622.281 #> 5350   110.99486599 6486.619 #> 5351   597.28116482 6354.465 #> 5352   708.22158804 6359.900 #> 5353   486.19303274 6353.662 #> 5354   563.57559535 6207.878 #> 5355   333.76168898 6653.614 #> 5356   856.77640104 6407.238 #> 5357   489.39942868 6056.450 #> 5358   822.34438933 6331.060 #> 5359   334.53796716 6433.512 #> 5360   261.39364790 6623.446 #> 5361   147.80851675 6371.575 #> 5362   702.24211021 6459.681 #> 5363   223.70678011 6366.517 #> 5364   114.35949326 6785.451 #> 5365   636.79401638 6207.831 #> 5366   297.80497642 6356.959 #> 5367   277.49320823 6416.718 #> 5368   260.75936065 6363.717 #> 5369    -1.20622716 6721.736 #> 5370    57.64571825 6660.033 #> 5371   110.77698256 6707.839 #> 5372   524.84203215 6170.447 #> 5373   708.51158419 6356.763 #> 5374   782.56453609 6366.003 #> 5375   708.36844811 6395.171 #> 5376   335.72222398 6320.894 #> 5377   635.32590922 6285.280 #> 5378   446.64596186 6430.741 #> 5379   668.61345143 6432.997 #> 5380   185.62245885 6551.824 #> 5381   600.22973295 6280.128 #> 5382   559.83357248 6280.120 #> 5383   335.37414443 6355.831 #> 5384   744.87428805 6321.382 #> 5385    37.68340363 6604.165 #> 5386   483.09387828 6464.037 #> 5387    35.12878674 6606.903 #> 5388   674.34117200 6247.647 #> 5389   373.08570679 6321.302 #> 5390   334.04350802 6692.415 #> 5391   276.19206421 6418.173 #> 5392   260.49007002 6360.302 #> 5393   147.86321067 6557.560 #> 5394   519.73817193 6501.780 #> 5395   521.67590979 6464.211 #> 5396   446.75471425 6504.971 #> 5397   858.76545742 6445.609 #> 5398   410.81989481 6356.280 #> 5399   481.54377624 6537.164 #> 5400   717.43008470 6249.629 #> 5401   166.16676722 6311.455 #> 5402   278.56590479 6415.701 #> 5403   560.39113083 6390.771 #> 5404   559.96602110 6427.787 #> 5405   636.73577014 6468.528 #> 5406    72.83006614 6750.805 #> 5407   148.98203185 6706.508 #> 5408   240.33565315 6343.007 #> 5409   672.52004664 6211.242 #> 5410   259.54573735 6361.182 #> 5411   819.96773429 6405.954 #> 5412   447.53606928 6353.538 #> 5413   223.24662109 6364.491 #> 5414   372.10415582 6469.807 #> 5415   820.44813111 6330.753 #> 5416   448.00279526 6315.849 #> 5417   222.68195802 6548.795 #> 5418   710.74615358 6286.183 #> 5419   636.10144909 6209.343 #> 5420   148.30582514 6669.529 #> 5421   221.49372053 6323.887 #> 5422   489.21031619 6467.470 #> 5423   635.14465726 6394.491 #> 5424   372.14903566 6466.767 #> 5425   708.63543904 6323.099 #> 5426   447.06757794 6393.690 #> 5427   564.29426835 6132.090 #> 5428   203.92223214 6420.872 #> 5429   707.33892549 6284.408 #> 5430    70.66424052 6489.907 #> 5431   672.58096062 6321.120 #> 5432   447.11769791 6611.174 #> 5433   148.43724352 6480.280 #> 5434   708.95486458 6285.750 #> 5435   707.00844628 6395.083 #> 5436   637.07753857 6283.521 #> 5437   262.31079390 6696.281 #> 5438   221.52219962 6698.846 #> 5439   407.98065254 6615.977 #> 5440   408.96764896 6577.584 #> 5441   634.27837259 6392.266 #> 5442    41.64764617 6829.169 #> 5443   446.14131523 6504.101 #> 5444   446.05871847 6502.075 #> 5445   281.32450810 6340.335 #> 5446   334.66032744 6396.535 #> 5447   599.63730642 6133.583 #> 5448   633.49656036 6467.086 #> 5449   522.29041985 6575.048 #> 5450   188.49160193 6699.005 #> 5451   446.92610864 6501.891 #> 5452   672.16488950 6321.883 #> 5453   149.04272664 6667.073 #> 5454   671.41242774 6362.024 #> 5455   708.11627062 6248.103 #> 5456   223.10190480 6660.006 #> 5457   147.52625734 6520.650 #> 5458   601.80112759 6134.049 #> 5459   147.50134578 6370.408 #> 5460   445.38236888 6465.296 #> 5461   374.04455765 6580.023 #> 5462   525.61505586 6283.035 #> 5463   409.99964882 6615.529 #> 5464   259.83191978 6620.430 #> 5465   598.03349722 6245.833 #> 5466   707.90880786 6361.046 #> 5467   635.05926434 6318.646 #> 5468   281.05627936 6340.831 #> 5469   669.59201971 6429.420 #> 5470   561.03660313 6278.376 #> 5471   372.41752199 6355.296 #> 5472   333.99591623 6616.567 #> 5473   260.75039894 6325.379 #> 5474   148.21674860 6443.617 #> 5475   297.08161705 6584.325 #> 5476   746.78317532 6467.958 #> 5477   820.10158393 6364.316 #> 5478   223.66594364 6585.992 #> 5479   236.50311666 6306.596 #> 5480   334.20121455 6583.400 #> 5481   -35.79692225 6726.805 #> 5482   448.88899342 6317.478 #> 5483   600.11832601 6134.504 #> 5484   710.15194380 6323.193 #> 5485   894.98181781 6447.550 #> 5486   447.98698934 6465.887 #> 5487   855.14458155 6440.675 #> 5488   148.01066423 6632.632 #> 5489   222.14658003 6698.334 #> 5490   111.06171896 6521.477 #> 5491   222.51900271 6514.334 #> 5492   484.99010847 6389.995 #> 5493   110.76130445 6449.673 #> 5494   484.88512712 6353.500 #> 5495   564.86064412 6130.377 #> 5496   446.64954022 6431.628 #> 5497   -67.91810914 6847.741 #> 5498    94.57335729 6655.383 #> 5499    -1.96922222 6385.409 #> 5500   559.61049179 6242.619 #> 5501   859.13712316 6332.878 #> 5502   820.01482907 6367.700 #> 5503    73.83658351 6563.722 #> 5504   671.49313955 6208.738 #> 5505   478.69052924 6578.699 #> 5506   599.60243133 6134.229 #> 5507    76.03995483 6750.071 #> 5508   489.81990780 6057.525 #> 5509   488.09664062 6205.926 #> 5510   370.87057636 6506.175 #> 5511   370.73003096 6580.787 #> 5512   856.75792748 6331.220 #> 5513   109.35977127 6447.898 #> 5514   371.64718899 6615.237 #> 5515   523.10130717 6353.380 #> 5516   745.88356687 6323.776 #> 5517   672.48446997 6284.935 #> 5518   200.78782433 6383.485 #> 5519   370.94402014 6580.602 #> 5520   519.92625743 6540.743 #> 5521    56.91173077 6659.321 #> 5522   600.30545933 6171.048 #> 5523   486.15709114 6429.035 #> 5524   486.94130578 6316.139 #> 5525   594.93735427 6466.661 #> 5526   333.64044541 6507.984 #> 5527   189.55791823 6329.413 #> 5528   446.60010115 6462.732 #> 5529   600.13478139 6132.687 #> 5530   409.95619172 6431.965 #> 5531   634.97763680 6354.953 #> 5532   297.40049753 6472.707 #> 5533   487.10859789 6278.606 #> 5534   706.31945801 6430.152 #> 5535   112.68262160 6667.791 #> 5536    43.03225561 6903.821 #> 5537   240.53471921 6419.141 #> 5538   634.53267035 6394.585 #> 5539   224.49125044 6362.314 #> 5540   782.06713523 6402.721 #> 5541   447.64519418 6353.688 #> 5542   702.63238131 6458.047 #> 5543   667.75300203 6208.453 #> 5544   633.80352123 6502.197 #> 5545   636.26206962 6247.834 #> 5546   671.13834120 6397.076 #> 5547    95.05714870 6690.992 #> 5548   225.19940068 6325.513 #> 5549   188.18713754 6329.683 #> 5550   371.62411879 6580.968 #> 5551   487.37364532 6244.633 #> 5552   633.86390064 6321.242 #> 5553   223.56635742 6365.486 #> 5554   333.98530593 6432.713 #> 5555   409.92851259 6391.303 #> 5556    41.34349191 6828.916 #> 5557   148.52787094 6408.301 #> 5558    73.70689656 6413.945 #> 5559   593.60180394 6504.693 #> 5560   743.84639692 6362.499 #> 5561   523.99338142 6354.172 #> 5562   147.89846450 6408.076 #> 5563    73.58913927 6638.593 #> 5564   558.87740048 6431.427 #> 5565   258.98962548 6438.873 #> 5566   296.92357443 6656.278 #> 5567   518.86937738 6538.855 #> 5568   222.58829585 6476.789 #> 5569   258.70797896 6620.705 #> 5570   710.97335558 6472.030 #> 5571   521.32757033 6467.198 #> 5572   222.56071809 6586.110 #> 5573   260.23394562 6325.007 #> 5574   336.45033112 6284.505 #> 5575   237.16037525 6382.285 #> 5576   857.58025111 6445.016 #> 5577   490.09488493 6060.861 #> 5578   221.07751944 6401.191 #> 5579    -0.67367319 6497.796 #> 5580   297.08130778 6507.265 #> 5581   670.98376625 6391.537 #> 5582   597.72512306 6318.702 #> 5583   149.51318465 6777.711 #> 5584   701.54349468 6357.789 #> 5585   337.27494828 6320.249 #> 5586   167.56824112 6422.568 #> 5587   109.18161043 6411.048 #> 5588   240.51197599 6345.321 #> 5589   482.63988495 6542.170 #> 5590   745.25695473 6251.294 #> 5591   408.38616358 6614.979 #> 5592   632.13763232 6465.270 #> 5593   188.32708302 6368.407 #> 5594   259.03954199 6397.662 #> 5595    54.41923306 6623.070 #> 5596   485.13009304 6427.673 #> 5597   782.53365335 6402.896 #> 5598   296.32786502 6658.617 #> 5599   856.84893371 6369.864 #> 5600   562.69580511 6243.959 #> 5601   222.23899999 6700.316 #> 5602   184.96898665 6551.110 #> 5603   333.99947783 6505.120 #> 5604   524.49422741 6280.918 #> 5605   480.63368194 6500.945 #> 5606    92.41694348 6692.120 #> 5607   445.58970825 6428.943 #> 5608   296.72277629 6469.575 #> 5609     0.20349178 6725.375 #> 5610   822.98599476 6327.622 #> 5611   856.65826717 6368.229 #> 5612   856.56211474 6410.476 #> 5613   483.40726357 6464.442 #> 5614   745.32304565 6400.782 #> 5615   595.52071170 6430.254 #> 5616   483.52898004 6468.193 #> 5617   202.15928820 6418.430 #> 5618   408.10050247 6542.217 #> 5619   185.82640845 6664.197 #> 5620   262.32703918 6322.598 #> 5621   856.53551922 6443.444 #> 5622   894.65652739 6448.750 #> 5623   486.10995493 6355.977 #> 5624   199.12413683 6384.500 #> 5625   185.28995015 6588.715 #> 5626   296.72026906 6471.947 #> 5627   148.23862572 6553.898 #> 5628   260.38936095 6362.385 #> 5629    78.18983342 6748.519 #> 5630   448.33178414 6315.520 #> 5631   857.25412381 6408.818 #> 5632   794.37154873 6471.460 #> 5633   820.19942017 6405.398 #> 5634   749.13221846 6472.067 #> 5635   633.42987619 6469.504 #> 5636   147.99493369 6703.361 #> 5637   224.44110892 6663.436 #> 5638   559.67417174 6319.526 #> 5639   558.84259203 6316.582 #> 5640   486.32325113 6318.518 #> 5641   632.67414853 6432.371 #> 5642   186.18757523 6404.518 #> 5643   335.85381208 6321.668 #> 5644   220.85511522 6438.499 #> 5645   198.95289180 6309.953 #> 5646   819.69232382 6444.161 #> 5647   634.79843163 6319.543 #> 5648   259.99071015 6623.846 #> 5649   222.54327731 6475.185 #> 5650   894.48696745 6449.930 #> 5651   257.68355839 6325.706 #> 5652   520.59452944 6504.648 #> 5653   147.26684673 6518.461 #> 5654   299.74338672 6321.477 #> 5655   203.26659684 6343.875 #> 5656    74.32767129 6449.899 #> 5657   636.78000879 6210.570 #> 5658   633.37697912 6357.610 #> 5659   486.99221202 6090.916 #> 5660     2.53433443 6761.892 #> 5661   113.18449583 6451.043 #> 5662   111.77999185 6413.900 #> 5663   336.01947525 6322.781 #> 5664   298.05466039 6396.533 #> 5665   671.83958096 6321.633 #> 5666   594.64563884 6538.526 #> 5667   222.78920335 6548.284 #> 5668    38.42430291 6757.651 #> 5669   336.17444756 6322.088 #> 5670   564.13773380 6133.519 #> 5671   711.25419518 6249.077 #> 5672   562.13042792 6207.771 #> 5673   336.08515743 6319.306 #> 5674   451.43050422 6204.870 #> 5675   450.19974364 6356.242 #> 5676   278.47401668 6414.813 #> 5677   296.56899797 6547.508 #> 5678    93.27424460 6692.089 #> 5679   372.89824824 6578.061 #> 5680   672.46355585 6247.323 #> 5681   411.72068593 6317.749 #> 5682   409.26132380 6505.981 #> 5683   561.42996814 6244.179 #> 5684   671.62080339 6357.140 #> 5685   709.46001546 6283.869 #> 5686   187.67116031 6405.150 #> 5687   408.72216752 6540.281 #> 5688   372.65451316 6690.528 #> 5689   187.67690383 6701.487 #> 5690    71.23879144 6524.436 #> 5691    54.22266963 6621.044 #> 5692    37.70951777 6715.611 #> 5693   702.34949641 6459.422 #> 5694   488.49854801 6205.782 #> 5695   783.65874484 6290.901 #> 5696   240.60918247 6417.364 #> 5697   258.77385723 6471.601 #> 5698   147.93470725 6481.434 #> 5699    37.35794567 6682.001 #> 5700   110.58995640 6710.987 #> 5701   817.72145133 6329.227 #> 5702   371.63934792 6541.359 #> 5703   412.19616691 6279.889 #> 5704   376.04887067 6691.101 #> 5705   147.84749352 6703.406 #> 5706   633.50267557 6500.380 #> 5707   671.38891140 6357.639 #> 5708   409.51834090 6506.557 #> 5709   560.74406597 6279.182 #> 5710   260.95875256 6511.934 #> 5711   223.25795176 6660.152 #> 5712   632.96228967 6470.720 #> 5713   371.34262091 6465.138 #> 5714   409.99298739 6502.835 #> 5715   259.68545860 6434.237 #> 5716   260.32787056 6546.531 #> 5717   224.12514448 6361.750 #> 5718   235.94097902 6307.528 #> 5719   334.17227779 6505.017 #> 5720   150.02237842 6630.357 #> 5721   521.07066772 6464.661 #> 5722   702.22893311 6459.847 #> 5723   223.01676000 6584.904 #> 5724   372.28559288 6614.426 #> 5725   371.63417645 6503.516 #> 5726   596.25705536 6428.258 #> 5727   295.97955577 6433.821 #> 5728   147.85278348 6554.668 #> 5729   560.21660923 6279.787 #> 5730   296.69862801 6580.536 #> 5731   373.35920894 6506.911 #> 5732   223.50637088 6588.658 #> 5733   709.45449634 6247.670 #> 5734   636.23526108 6245.137 #> 5735   896.09059954 6372.538 #> 5736   820.75259302 6370.603 #> 5737   296.61617361 6432.125 #> 5738   238.60147593 6342.380 #> 5739   333.87014584 6507.789 #> 5740    38.06381920 6755.899 #> 5741   557.10348500 6502.394 #> 5742   707.98016580 6358.004 #> 5743   111.91533779 6558.298 #> 5744   257.22106523 6510.538 #> 5745   373.66475139 6320.943 #> 5746   483.09394675 6467.603 #> 5747   783.41833609 6325.066 #> 5748   597.71181002 6242.742 #> 5749   409.48069127 6281.349 #> 5750    45.24062786 6751.876 #> 5751   187.62081265 6292.393 #> 5752   147.71646325 6444.096 #> 5753   519.95070457 6540.902 #> 5754   448.33899964 6354.261 #> 5755   857.50516507 6445.085 #> 5756   521.14503005 6577.489 #> 5757     8.74852256 6834.784 #> 5758   672.42171759 6321.527 #> 5759   147.60581501 6556.128 #> 5760   334.13368083 6467.939 #> 5761   186.84587293 6402.829 #> 5762   748.70451618 6326.575 #> 5763   -31.82083851 6844.640 #> 5764   481.48134064 6578.807 #> 5765   221.88313624 6550.581 #> 5766   633.52395620 6317.548 #> 5767   108.95459231 6524.230 #> 5768   564.54873934 6132.913 #> 5769   447.80704476 6355.047 #> 5770   279.56676012 6342.988 #> 5771   111.46112335 6708.809 #> 5772   447.10998365 6390.090 #> 5773    25.21183990 6699.517 #> 5774   199.81513724 6384.164 #> 5775   -30.77918689 6878.901 #> 5776   223.60159042 6474.524 #> 5777   186.26740039 6553.212 #> 5778   524.17229256 6280.420 #> 5779   708.35249487 6360.657 #> 5780    36.16156708 6681.409 #> 5781   559.33932835 6353.455 #> 5782   223.49785627 6626.135 #> 5783   111.48436570 6672.845 #> 5784    94.27117729 6693.392 #> 5785   820.19784559 6439.440 #> 5786   489.51906587 6092.475 #> 5787   169.13027705 6385.584 #> 5788   896.35571947 6373.110 #> 5789   670.84938603 6208.200 #> 5790   520.51935225 6466.030 #> 5791   524.23303444 6391.232 #> 5792    41.42832251 6867.940 #> 5793   782.67208134 6366.116 #> 5794   819.89763838 6441.608 #> 5795    55.52869315 6658.225 #> 5796    56.33646744 6697.253 #> 5797   595.67332498 6503.554 #> 5798   448.58560910 6616.414 #> 5799   482.51356925 6504.956 #> 5800   411.77842364 6279.534 #> 5801   561.31554889 6131.522 #> 5802   410.44669172 6353.363 #> 5803   371.67646838 6507.066 #> 5804   558.73714108 6430.760 #> 5805   563.80260020 6174.124 #> 5806   521.60993671 6357.994 #> 5807   708.41936552 6246.228 #> 5808   337.74291903 6691.823 #> 5809   332.03785319 6657.695 #> 5810   297.16662599 6506.081 #> 5811   334.41298168 6432.909 #> 5812    55.76060197 6658.693 #> 5813   223.83475255 6698.706 #> 5814   596.80027388 6319.220 #> 5815   562.08198279 6206.805 #> 5816   259.30254228 6658.265 #> 5817   708.00150232 6246.575 #> 5818   592.70709510 6431.086 #> 5819   485.73266105 6389.009 #> 5820   258.18102101 6362.937 #> 5821   782.71995605 6364.761 #> 5822   259.21204318 6621.510 #> 5823   415.93129493 6095.823 #> 5824   259.64673987 6326.082 #> 5825   410.34915577 6391.239 #> 5826   597.36910956 6353.756 #> 5827   894.04372513 6448.504 #> 5828   855.93827380 6407.070 #> 5829   603.46353902 6134.804 #> 5830   297.14341220 6584.203 #> 5831   168.44040134 6424.919 #> 5832   111.11600928 6559.275 #> 5833   522.50337674 6430.035 #> 5834   334.19188081 6542.853 #> 5835   240.11203688 6380.047 #> 5836     0.25854752 6649.379 #> 5837   595.51397934 6505.575 #> 5838   335.52699166 6691.732 #> 5839   558.14444422 6390.739 #> 5840   332.79937349 6617.434 #> 5841   672.48328664 6466.625 #> 5842    40.57042047 6829.639 #> 5843   238.72409092 6307.369 #> 5844   259.24390592 6362.893 #> 5845    73.62504178 6459.794 #> 5846   748.56800115 6252.815 #> 5847   815.97120505 6441.434 #> 5848   746.05881169 6285.846 #> 5849   148.83590549 6666.196 #> 5850   297.15258031 6545.120 #> 5851   408.12576648 6615.920 #> 5852   895.54656248 6410.158 #> 5853   636.35598793 6171.560 #> 5854   595.63967825 6503.293 #> 5855   148.99397514 6482.901 #> 5856   110.41260504 6712.262 #> 5857   203.49367213 6420.171 #> 5858   822.56578342 6295.286 #> 5859   484.87246052 6431.302 #> 5860   521.93313123 6430.897 #> 5861   185.01547984 6440.474 #> 5862   482.00233046 6541.399 #> 5863   370.23686456 6581.361 #> 5864   527.61103281 6101.333 #> 5865   412.02479783 6321.111 #> 5866   447.14397790 6357.038 #> 5867   817.69934944 6480.889 #> 5868   224.05300445 6588.945 #> 5869   490.63851933 6060.068 #> 5870   185.45011205 6556.374 #> 5871   371.19886117 6357.993 #> 5872   597.97692957 6431.697 #> 5873   184.63027283 6329.268 #> 5874   482.99964450 6504.608 #> 5875   257.35083998 6473.327 #> 5876   373.08670480 6280.266 #> 5877   597.50032596 6320.198 #> 5878   818.99250167 6292.254 #> 5879   522.71472103 6390.352 #> 5880   894.49864094 6448.914 #> 5881   894.14476559 6446.423 #> 5882   636.13585745 6246.348 #> 5883   110.58958789 6746.014 #> 5884   447.67676659 6393.435 #> 5885   408.27513230 6575.832 #> 5886   671.71661409 6320.197 #> 5887   671.94185542 6467.159 #> 5888   523.80486045 6279.607 #> 5889    73.38736956 6599.263 #> 5890   447.59475283 6282.816 #> 5891   632.60709404 6503.191 #> 5892   560.19917895 6501.546 #> 5893   703.17453849 6435.034 #> 5894   410.97924960 6316.986 #> 5895   488.93133475 6169.923 #> 5896   747.60935785 6288.141 #> 5897   295.64458877 6361.525 #> 5898   148.61667100 6743.696 #> 5899   258.76341395 6509.994 #> 5900   517.42933053 6539.572 #> 5901   334.00259176 6544.236 #> 5902   482.69735892 6501.434 #> 5903   333.69133612 6505.210 #> 5904   632.74587284 6395.227 #> 5905    37.06811379 6686.767 #> 5906   783.34358259 6326.755 #> 5907   744.54856949 6400.599 #> 5908   281.65791166 6341.296 #> 5909   671.07615173 6433.138 #> 5910    71.96401084 6600.885 #> 5911   817.75427578 6445.195 #> 5912   446.64307110 6463.568 #> 5913   672.37439617 6285.061 #> 5914   296.52948084 6580.434 #> 5915   375.04921048 6690.791 #> 5916   445.99300654 6503.738 #> 5917   167.08855315 6423.727 #> 5918   188.70155766 6701.852 #> 5919   856.49562888 6369.439 #> 5920    37.85356313 6680.215 #> 5921   526.36896005 6134.067 #> 5922   520.35377405 6541.801 #> 5923   594.66341599 6543.261 #> 5924   258.90644163 6470.562 #> 5925   150.38977020 6629.719 #> 5926   205.24392482 6345.431 #> 5927   671.35161732 6320.226 #> 5928   279.57948529 6306.531 #> 5929   223.67745334 6361.814 #> 5930   597.12611160 6358.232 #> 5931   150.43845543 6705.272 #> 5932   522.34529167 6389.923 #> 5933   745.57339153 6434.846 #> 5934    76.29921541 6750.860 #> 5935   555.87430488 6539.489 #> 5936   111.78987982 6633.388 #> 5937   371.35320887 6505.678 #> 5938   896.54772872 6372.949 #> 5939   522.73234019 6429.986 #> 5940   524.28705639 6281.666 #> 5941   783.19067903 6326.406 #> 5942   482.52758852 6500.586 #> 5943   703.01569190 6458.090 #> 5944   633.86305952 6466.288 #> 5945    37.57188022 6682.801 #> 5946   856.75238457 6411.338 #> 5947   371.75534796 6428.026 #> 5948   113.77727741 6671.942 #> 5949   224.21463158 6364.902 #> 5950   296.98505498 6360.283 #> 5951   278.07200080 6417.392 #> 5952   170.08473388 6342.092 #> 5953   559.89855498 6204.498 #> 5954   371.90653867 6428.477 #> 5955   148.48835770 6660.852 #> 5956   148.12085149 6371.493 #> 5957   335.84188551 6356.383 #> 5958   636.48546900 6280.396 #> 5959   110.67186568 6561.320 #> 5960   295.48744029 6505.774 #> 5961   484.45624826 6465.433 #> 5962   412.65615061 6281.513 #> 5963   672.45083274 6281.630 #> 5964   223.04390415 6626.438 #> 5965   259.38330166 6583.916 #> 5966   259.71367164 6510.950 #> 5967   110.62685686 6523.373 #> 5968   300.48169699 6322.427 #> 5969   822.42368680 6293.657 #> 5970   522.45438927 6390.699 #> 5971   297.09544918 6398.234 #> 5972   260.10926432 6250.318 #> 5973   202.34069464 6420.318 #> 5974   560.59799996 6353.308 #> 5975   444.51204377 6502.923 #> 5976   598.05812491 6317.004 #> 5977   709.18763105 6286.253 #> 5978   371.49592298 6542.537 #> 5979   408.64029061 6505.048 #> 5980   370.11053254 6689.441 #> 5981   222.72370830 6400.836 #> 5982   597.01317937 6394.174 #> 5983   633.96189464 6394.246 #> 5984   147.58019550 6444.463 #> 5985   407.96123971 6617.019 #> 5986   525.73824557 6207.659 #> 5987   525.63078024 6244.611 #> 5988   560.68992283 6320.335 #> 5989   167.35685841 6345.447 #> 5990   149.21021556 6741.620 #> 5991   335.07998946 6507.582 #> 5992   526.17808432 6096.999 #> 5993   597.18929120 6391.413 #> 5994   449.10379438 6320.128 #> 5995   299.64540753 6582.675 #> 5996   633.68619058 6394.460 #> 5997   372.43480208 6393.696 #> 5998   110.86223285 6712.131 #> 5999   147.00106522 6557.544 #> 6000   149.50636791 6593.509 #> 6001   110.60249936 6711.258 #> 6002   242.10019329 6420.057 #> 6003   595.95990279 6474.694 #> 6004   672.79280481 6283.018 #> 6005   667.29646072 6399.482 #> 6006   448.38033211 6394.353 #> 6007   746.05685420 6325.175 #> 6008   -66.15128638 6917.037 #> 6009    55.17803102 6699.732 #> 6010    14.06783188 6699.265 #> 6011   296.36790568 6508.593 #> 6012   633.06940690 6502.122 #> 6013   485.77229882 6430.357 #> 6014   237.92589703 6380.523 #> 6015   563.93527907 6207.172 #> 6016   632.71071714 6433.529 #> 6017   600.80380001 6132.739 #> 6018   634.11777882 6356.749 #> 6019   520.20003514 6541.223 #> 6020   893.89870049 6450.145 #> 6021   483.20038732 6464.696 #> 6022   223.40972852 6437.212 #> 6023    72.73457498 6752.185 #> 6024   782.53021493 6288.837 #> 6025   519.97302692 6540.476 #> 6026   596.58129629 6356.935 #> 6027   370.76309999 6503.219 #> 6028   238.82509658 6308.218 #> 6029   111.01560078 6486.483 #> 6030   165.85090311 6423.455 #> 6031   148.92036578 6705.768 #> 6032   259.12239389 6513.564 #> 6033   479.39736171 6502.898 #> 6034   222.47491754 6402.423 #> 6035   111.70630975 6447.732 #> 6036   259.98701438 6362.859 #> 6037   371.30707947 6543.797 #> 6038   485.83569442 6319.088 #> 6039    75.60161591 6752.815 #> 6040   895.31587835 6409.700 #> 6041   148.41358483 6407.624 #> 6042    58.33746045 6657.002 #> 6043   595.06318453 6542.521 #> 6044   333.73873224 6657.810 #> 6045   521.96081047 6465.547 #> 6046   409.14461453 6575.229 #> 6047   147.62928418 6517.937 #> 6048    40.58596948 6830.185 #> 6049   559.35774810 6389.280 #> 6050   636.79508992 6208.721 #> 6051   855.59391582 6334.183 #> 6052   200.13448168 6310.942 #> 6053   202.83723193 6344.464 #> 6054   594.94779734 6541.565 #> 6055   594.69034915 6427.719 #> 6056   482.76770071 6467.554 #> 6057   297.64271334 6434.609 #> 6058   856.20465877 6443.095 #> 6059    73.00263729 6451.893 #> 6060   669.53518740 6393.761 #> 6061   446.53878390 6356.270 #> 6062   783.28073833 6436.165 #> 6063   709.74052822 6360.366 #> 6064   482.63600951 6504.979 #> 6065   596.81892353 6356.638 #> 6066   259.34642663 6398.245 #> 6067   406.59748576 6615.809 #> 6068   224.22995323 6287.219 #> 6069   525.64919284 6282.159 #> 6070   557.88991291 6428.220 #> 6071   333.50902570 6507.058 #> 6072   369.62391836 6688.975 #> 6073   635.73047249 6209.888 #> 6074   559.56122373 6391.074 #> 6075   278.26017611 6415.737 #> 6076   259.52685970 6507.602 #> 6077   262.08784648 6695.312 #> 6078   164.68882556 6426.780 #> 6079   744.57927364 6440.709 #> 6080   373.87721194 6690.727 #> 6081   820.37491307 6366.870 #> 6082   632.91490573 6505.707 #> 6083   447.41608964 6390.127 #> 6084   202.51561780 6420.996 #> 6085   146.38867056 6372.216 #> 6086   711.20480787 6250.282 #> 6087   111.42816071 6673.391 #> 6088   445.35727384 6469.820 #> 6089   297.12064955 6434.739 #> 6090   261.14132201 6322.751 #> 6091   296.04522688 6396.815 #> 6092   150.08186102 6780.114 #> 6093   523.67949197 6315.315 #> 6094    20.10596548 6663.647 #> 6095   297.14969908 6583.682 #> 6096    72.16533785 6526.778 #> 6097   -73.19322087 6619.531 #> 6098   562.45859815 6277.779 #> 6099   708.15765794 6321.126 #> 6100   595.78604806 6466.213 #> 6101   112.94700073 6672.013 #> 6102   200.79853070 6308.032 #> 6103   856.17091157 6443.020 #> 6104   148.98891201 6556.590 #> 6105   187.10951919 6700.248 #> 6106   564.47828108 6205.936 #> 6107   635.95442048 6244.457 #> 6108   484.58076224 6577.373 #> 6109   334.78198391 6358.535 #> 6110   260.58565767 6325.478 #> 6111   746.37873646 6467.976 #> 6112   526.23136589 6245.149 #> 6113   296.52270503 6621.405 #> 6114   897.13875964 6372.887 #> 6115   746.87701033 6468.141 #> 6116   488.68312921 6204.816 #> 6117   795.74475586 6469.603 #> 6118   335.16306079 6690.339 #> 6119    35.07025833 6642.898 #> 6120   239.93852173 6380.314 #> 6121   671.45033539 6396.294 #> 6122   674.46021594 6248.667 #> 6123   335.54888678 6618.834 #> 6124   274.93869660 6380.197 #> 6125   465.62102886 6076.948 #> 6126   599.31751301 6280.784 #> 6127   783.98461927 6328.321 #> 6128   148.75663061 6408.243 #> 6129   114.79289521 6783.526 #> 6130   823.27593459 6293.864 #> 6131    75.84085889 6675.522 #> 6132   598.04382389 6242.888 #> 6133   520.17267100 6504.486 #> 6134   633.31514781 6321.451 #> 6135   184.81585799 6477.046 #> 6136  -104.48512260 6853.691 #> 6137   150.84575645 6668.202 #> 6138   185.11237628 6551.379 #> 6139   784.23963220 6289.786 #> 6140   531.30916442 6101.486 #> 6141   447.24119667 6356.317 #> 6142    72.47633707 6413.496 #> 6143   524.35407905 6281.837 #> 6144   258.46637995 6586.178 #> 6145    37.29882009 6644.761 #> 6146   643.50288529 6505.695 #> 6147   557.45891316 6501.746 #> 6148    21.47608424 6665.690 #> 6149   169.46730989 6422.784 #> 6150   259.83039873 6437.762 #> 6151   527.96780736 6133.217 #> 6152   597.63361671 6318.665 #> 6153   147.68209160 6557.895 #> 6154   596.68765362 6467.676 #> 6155   260.09633901 6547.609 #> 6156   632.82417662 6432.962 #> 6157    37.40437581 6681.566 #> 6158   411.13105035 6390.145 #> 6159   410.03989669 6327.826 #> 6160   521.61031329 6463.673 #> 6161    71.84989284 6639.037 #> 6162   669.92720954 6286.338 #> 6163   -32.77266760 6801.907 #> 6164   598.25932448 6283.342 #> 6165   332.76869832 6616.749 #> 6166   186.94297802 6363.882 #> 6167    -2.10375793 6721.048 #> 6168     1.14626095 6874.545 #> 6169   260.99903213 6400.063 #> 6170   297.41507350 6435.698 #> 6171   377.93480660 6691.322 #> 6172    74.14362031 6599.969 #> 6173   222.43550808 6436.367 #> 6174   165.79859243 6385.316 #> 6175   187.17549625 6329.346 #> 6176   445.56807750 6502.389 #> 6177   450.37624913 6242.968 #> 6178   409.21864450 6504.500 #> 6179   261.37713883 6694.635 #> 6180   748.30546810 6250.832 #> 6181   293.95642027 6692.451 #> 6182   259.76285083 6437.025 #> 6183   148.24606041 6558.004 #> 6184   110.10419305 6373.683 #> 6185   895.91752528 6373.640 #> 6186   600.26695985 6134.301 #> 6187   670.38348532 6433.381 #> 6188   561.09563501 6278.830 #> 6189   794.21526417 6471.975 #> 6190   596.46945594 6355.676 #> 6191   259.60419203 6548.662 #> 6192   259.00876417 6399.982 #> 6193   -32.77800498 6803.426 #> 6194   223.03233354 6588.141 #> 6195    75.69585395 6676.160 #> 6196   671.01301423 6395.128 #> 6197   745.87523023 6437.457 #> 6198   259.60099439 6623.407 #> 6199   485.23809335 6391.551 #> 6200   557.64860394 6501.870 #> 6201   411.73860529 6353.898 #> 6202   186.01929720 6668.340 #> 6203   276.44121595 6380.277 #> 6204    78.58962349 6750.379 #> 6205   484.46023334 6541.905 #> 6206   201.08942276 6385.937 #> 6207   185.08039048 6592.788 #> 6208   260.57512066 6545.914 #> 6209   447.74965683 6428.563 #> 6210   239.28667349 6381.745 #> 6211   148.03411312 6408.023 #> 6212   260.56651325 6362.484 #> 6213   708.82090870 6358.331 #> 6214    73.62508253 6598.467 #> 6215   784.04581731 6290.568 #> 6216   449.14926324 6312.829 #> 6217   220.47615949 6552.157 #> 6218   523.66133101 6318.500 #> 6219    94.88769947 6690.969 #> 6220    95.22078479 6694.270 #> 6221   298.33942213 6396.491 #> 6222   111.59379616 6745.557 #> 6223   185.75211406 6590.949 #> 6224   335.47910425 6318.934 #> 6225   335.77355570 6321.944 #> 6226   237.12602374 6344.217 #> 6227   595.60127579 6465.544 #> 6228   149.42947134 6629.411 #> 6229   259.84000640 6623.680 #> 6230    43.06120476 6905.385 #> 6231   408.82200002 6614.891 #> 6232   113.93585257 6784.216 #> 6233   856.44631690 6405.416 #> 6234   855.67389652 6368.907 #> 6235   147.44750901 6368.734 #> 6236    70.18733701 6672.922 #> 6237   146.66633250 6482.775 #> 6238   745.76250693 6285.763 #> 6239   148.72525680 6333.588 #> 6240   371.80664880 6430.490 #> 6241   483.28197433 6537.973 #> 6242   494.37246412 6061.765 #> 6243   789.02507380 6466.376 #> 6244   259.47337847 6661.306 #> 6245   185.00866872 6514.983 #> 6246    35.52763707 6716.326 #> 6247   408.80908950 6615.587 #> 6248   521.50174241 6390.637 #> 6249   410.26406179 6431.333 #> 6250   522.87959208 6355.985 #> 6251   184.65690800 6477.023 #> 6252   222.30732114 6439.141 #> 6253   258.67778317 6659.404 #> 6254    45.05613300 6835.187 #> 6255   185.04507070 6556.049 #> 6256   224.05454734 6293.892 #> 6257   369.76398580 6505.157 #> 6258   524.56374057 6319.132 #> 6259   223.54201052 6588.069 #> 6260   201.59990884 6382.173 #> 6261   446.48208909 6576.675 #> 6262   819.10231534 6442.441 #> 6263   260.12432170 6436.594 #> 6264   484.97840183 6426.642 #> 6265   332.58981080 6579.996 #> 6266   446.04671976 6613.249 #> 6267   525.85638091 6205.322 #> 6268   376.14938268 6319.012 #> 6269   148.18973207 6632.171 #> 6270   259.55189792 6509.013 #> 6271   148.84255351 6669.434 #> 6272   260.59312485 6694.928 #> 6273   560.10118757 6352.805 #> 6274   783.55930947 6327.886 #> 6275   409.08410310 6503.162 #> 6276   637.82238262 6172.342 #> 6277   237.73743282 6379.838 #> 6278   596.30825981 6392.635 #> 6279   557.12335455 6538.940 #> 6280   446.06714968 6539.404 #> 6281   112.55116170 6785.902 #> 6282   224.11248709 6290.387 #> 6283   148.55273568 6592.057 #> 6284   673.83562076 6467.855 #> 6285   409.02131192 6469.605 #> 6286   147.87593710 6367.918 #> 6287   485.20828272 6430.903 #> 6288   855.71431536 6441.749 #> 6289    78.49692648 6749.791 #> 6290   373.44909692 6356.034 #> 6291   894.78730584 6408.933 #> 6292   672.18373032 6321.502 #> 6293   410.66637401 6319.901 #> 6294   260.77243918 6325.760 #> 6295   449.08308003 6318.787 #> 6296   371.14903387 6469.545 #> 6297   410.12270874 6428.283 #> 6298   279.39248119 6340.175 #> 6299   199.36373777 6309.273 #> 6300    76.46153185 6674.961 #> 6301   148.06249103 6669.811 #> 6302   149.07617696 6591.338 #> 6303   818.76266996 6479.863 #> 6304   601.25409789 6169.968 #> 6305   337.08228804 6395.020 #> 6306   447.77308639 6353.468 #> 6307   261.33453331 6360.477 #> 6308   481.53145583 6504.352 #> 6309   746.77319932 6359.898 #> 6310   894.74065044 6445.561 #> 6311   297.39603640 6509.364 #> 6312   408.77585258 6576.995 #> 6313   283.94289549 6417.193 #> 6314   446.33951996 6467.487 #> 6315   520.21405364 6501.319 #> 6316   258.63938449 6584.269 #> 6317   222.68717310 6401.750 #> 6318   747.81504543 6471.015 #> 6319   144.50677332 6518.859 #> 6320   279.63240539 6303.797 #> 6321   223.16171372 6660.302 #> 6322   148.57330226 6744.373 #> 6323   521.38529803 6578.566 #> 6324   446.67168015 6612.962 #> 6325   185.03238955 6591.775 #> 6326   410.51625148 6354.783 #> 6327   556.83713276 6539.248 #> 6328   416.94987312 6286.503 #> 6329   594.65844788 6506.167 #> 6330   297.19407097 6357.929 #> 6331   149.23314092 6740.946 #> 6332   297.28592998 6359.759 #> 6333    74.57611632 6638.031 #> 6334   745.97257523 6434.996 #> 6335   111.42172032 6746.244 #> 6336   600.36560042 6394.534 #> 6337   221.92952998 6697.433 #> 6338   294.49691459 6509.355 #> 6339   446.85682158 6541.560 #> 6340   486.66733011 6318.434 #> 6341   445.90117674 6465.579 #> 6342   273.83774371 6378.389 #> 6343   445.31320638 6538.485 #> 6344   635.24605580 6320.917 #> 6345   634.14804615 6244.453 #> 6346    41.00981171 6792.736 #> 6347   895.45092702 6412.347 #> 6348   781.81253709 6400.129 #> 6349   558.56561788 6426.618 #> 6350   151.27336671 6779.603 #> 6351   446.49187057 6577.328 #> 6352   561.24889201 6279.003 #> 6353   521.37562566 6578.264 #> 6354   483.68433883 6467.693 #> 6355   598.17594141 6355.163 #> 6356   592.27729845 6540.459 #> 6357   632.21675605 6506.641 #> 6358   259.27998882 6548.919 #> 6359   150.49547566 6668.590 #> 6360   185.53723445 6665.619 #> 6361   298.34099485 6359.448 #> 6362    37.64666051 6713.203 #> 6363   221.88324537 6625.654 #> 6364   557.34765339 6575.187 #> 6365   855.87364781 6405.431 #> 6366   222.65019705 6478.214 #> 6367   109.76207075 6447.693 #> 6368   819.82460902 6405.109 #> 6369   557.76611314 6465.912 #> 6370   222.64964548 6512.254 #> 6371   259.60567733 6396.952 #> 6372   559.06431771 6390.935 #> 6373   411.01395785 6317.470 #> 6374   222.72037543 6511.452 #> 6375   223.56303299 6623.721 #> 6376   297.83306224 6471.996 #> 6377   444.34806855 6504.318 #> 6378   370.91664951 6543.262 #> 6379   634.61474443 6392.262 #> 6380   111.03891602 6524.544 #> 6381   257.13725228 6624.790 #> 6382    95.91493040 6691.217 #> 6383   856.51674232 6404.939 #> 6384   259.79315066 6287.078 #> 6385   557.04817773 6579.381 #> 6386   371.28135648 6541.282 #> 6387   514.47151181 6325.184 #> 6388   558.95048430 6243.069 #> 6389   486.48772541 6280.972 #> 6390   370.91490369 6539.790 #> 6391   259.56948718 6474.892 #> 6392   488.12795745 6205.521 #> 6393   335.20127050 6356.135 #> 6394   258.88298846 6468.143 #> 6395   186.89047223 6628.318 #> 6396     3.19853968 6759.186 #> 6397   407.54523411 6504.180 #> 6398   673.68587816 6281.458 #> 6399   147.67795745 6517.805 #> 6400   747.71444931 6249.892 #> 6401   483.37493543 6467.193 #> 6402   333.15702779 6507.921 #> 6403    18.16182900 6624.284 #> 6404   669.98552445 6428.900 #> 6405   335.14265514 6391.038 #> 6406   449.25703816 6276.737 #> 6407   858.25548620 6332.882 #> 6408   184.17588205 6329.013 #> 6409   783.53081078 6326.246 #> 6410   258.97604786 6623.061 #> 6411   297.69155402 6507.642 #> 6412   298.87577547 6248.975 #> 6413   334.36024626 6543.421 #> 6414   295.27798769 6658.424 #> 6415   148.97986328 6557.624 #> 6416   594.70998879 6467.833 #> 6417   223.24261929 6586.226 #> 6418   110.87333426 6411.455 #> 6419   482.36058141 6504.333 #> 6420   636.83321571 6207.914 #> 6421    94.12720676 6654.049 #> 6422   600.45571265 6170.834 #> 6423   275.59466802 6378.548 #> 6424   446.25189215 6577.942 #> 6425   371.43084481 6389.830 #> 6426   147.65769696 6519.871 #> 6427   200.84402579 6308.478 #> 6428   707.65405012 6434.655 #> 6429   371.21436004 6469.733 #> 6430    73.76252973 6599.889 #> 6431   633.30077852 6428.497 #> 6432   635.95845084 6243.711 #> 6433   147.93751239 6405.833 #> 6434   221.96913130 6440.480 #> 6435   447.50645406 6614.803 #> 6436   598.22102974 6279.472 #> 6437   748.59022666 6288.508 #> 6438   371.88676939 6541.139 #> 6439   260.12343703 6660.301 #> 6440   672.73422370 6284.606 #> 6441   331.98749090 6657.460 #> 6442   259.02617780 6657.599 #> 6443   599.74925745 6280.525 #> 6444   671.27886294 6359.001 #> 6445   633.86369114 6469.305 #> 6446   223.87241945 6698.028 #> 6447   560.60717401 6131.351 #> 6448    73.29746007 6565.443 #> 6449   747.17085288 6435.128 #> 6450   148.33911553 6742.932 #> 6451   334.32798541 6430.077 #> 6452    94.17183546 6654.393 #> 6453   486.76907707 6281.773 #> 6454   744.97849603 6360.443 #> 6455   294.69016952 6658.483 #> 6456   258.88401022 6474.910 #> 6457    41.36119041 6827.974 #> 6458   414.08123187 6319.131 #> 6459   487.25057073 6281.949 #> 6460   525.18926464 6354.549 #> 6461   702.33514165 6459.588 #> 6462   521.28807691 6464.429 #> 6463   794.73367418 6471.348 #> 6464   371.27231393 6540.549 #> 6465   199.15659836 6309.627 #> 6466   446.14299875 6502.169 #> 6467   670.96330436 6208.525 #> 6468   224.00558558 6290.043 #> 6469   189.81376759 6702.316 #> 6470   149.86123414 6669.016 #> 6471   482.62474059 6504.663 #> 6472   709.28752496 6323.634 #> 6473   748.50372772 6252.114 #> 6474   259.54273377 6512.086 #> 6475    56.28610519 6698.157 #> 6476   110.90794273 6522.464 #> 6477   744.74282857 6361.808 #> 6478   558.50665400 6575.171 #> 6479   672.26193519 6321.464 #> 6480   595.84642209 6503.077 #> 6481    75.37023842 6750.595 #> 6482   597.48285231 6354.445 #> 6483   444.29038965 6608.858 #> 6484   238.47384269 6382.776 #> 6485   146.87536925 6368.957 #> 6486   222.69000693 6327.816 #> 6487   482.80142506 6546.178 #> 6488   818.75904730 6479.328 #> 6489   222.39716878 6552.318 #> 6490   205.91929209 6345.256 #> 6491   186.24269748 6626.115 #> 6492    92.37224678 6691.611 #> 6493   -33.82520860 6804.798 #> 6494   821.36114693 6367.808 #> 6495   522.30762024 6430.381 #> 6496   222.96509476 6661.262 #> 6497   259.66063591 6624.384 #> 6498    43.64848324 6827.920 #> 6499   281.08381113 6342.637 #> 6500   334.27744223 6581.085 #> 6501   483.06262973 6576.948 #> 6502   672.25869679 6319.829 #> 6503   221.75513370 6439.012 #> 6504   297.18749963 6508.375 #> 6505   600.15908449 6359.168 #> 6506   148.71443261 6518.083 #> 6507   186.86023625 6329.637 #> 6508   333.20708901 6431.380 #> 6509   296.75013664 6584.127 #> 6510   237.71358911 6305.866 #> 6511   598.06381512 6317.098 #> 6512   297.07042477 6546.406 #> 6513   858.80494754 6447.632 #> 6514   636.61134408 6280.884 #> 6515   795.01815805 6472.179 #> 6516   558.23995091 6538.923 #> 6517   784.00241118 6291.200 #> 6518   744.59307639 6361.093 #> 6519   782.96888903 6328.758 #> 6520   168.02190897 6424.857 #> 6521   335.87857364 6321.878 #> 6522   334.12733935 6470.419 #> 6523   745.81996443 6323.821 #> 6524   111.83799187 6636.690 #> 6525   332.83545061 6658.223 #> 6526   223.22312575 6477.562 #> 6527   407.88321723 6583.502 #> 6528   296.33650333 6356.954 #> 6529   371.97910581 6504.433 #> 6530   280.99765893 6306.038 #> 6531   818.64358049 6476.843 #> 6532   411.26680253 6317.214 #> 6533   260.55129704 6694.007 #> 6534   487.01194372 6352.130 #> 6535   335.82129165 6506.314 #> 6536   298.20635849 6617.936 #> 6537   483.30344078 6537.886 #> 6538   410.29394678 6427.848 #> 6539   782.52851242 6402.969 #> 6540   782.61182352 6402.370 #> 6541   708.53337124 6323.229 #> 6542   185.32223155 6441.868 #> 6543   185.69404470 6479.453 #> 6544   147.48705960 6368.785 #> 6545    37.84593139 6754.906 #> 6546   600.28883572 6280.298 #> 6547   559.32006846 6465.288 #> 6548   634.94880182 6357.675 #> 6549   258.49212111 6661.330 #> 6550   526.51633057 6098.615 #> 6551   148.26179804 6628.796 #> 6552   373.11312381 6282.502 #> 6553   856.33233306 6335.515 #> 6554   371.21692117 6503.489 #> 6555   707.04358187 6432.053 #> 6556    73.65557806 6637.107 #> 6557   222.10503276 6325.454 #> 6558   186.47253192 6666.696 #> 6559   856.41543676 6408.903 #> 6560   633.45260383 6465.111 #> 6561   672.11449825 6358.777 #> 6562   491.08996537 6096.155 #> 6563   184.60886636 6442.715 #> 6564   257.56444309 6399.448 #> 6565   112.65681988 6631.137 #> 6566   526.95808609 6132.395 #> 6567   408.57324758 6542.886 #> 6568   447.11621175 6428.188 #> 6569   148.77955535 6668.952 #> 6570   597.49971866 6392.553 #> 6571   446.76089231 6430.364 #> 6572   708.94908916 6360.511 #> 6573   821.09724538 6331.301 #> 6574   201.72849653 6383.784 #> 6575   147.68189128 6482.068 #> 6576   149.29390339 6631.726 #> 6577   112.88996247 6671.366 #> 6578    24.97615250 6697.012 #> 6579   167.17311615 6344.679 #> 6580   168.71900659 6342.597 #> 6581    37.82965262 6641.788 #> 6582   445.12262119 6465.574 #> 6583    38.25425519 6492.976 #> 6584   296.73942747 6470.137 #> 6585   600.12922070 6209.358 #> 6586   561.15963577 6168.093 #> 6587   782.32703642 6402.360 #> 6588   334.23455125 6579.037 #> 6589   149.06739337 6742.788 #> 6590   782.03586897 6402.544 #> 6591   894.85855985 6449.986 #> 6592   223.19875214 6585.626 #> 6593   372.97056672 6393.344 #> 6594   372.77521779 6282.077 #> 6595   524.95349125 6130.169 #> 6596   748.84523587 6472.722 #> 6597   707.91024066 6431.670 #> 6598   707.60328956 6433.355 #> 6599   372.47785967 6355.357 #> 6600   184.56444367 6514.465 #> 6601   708.74671716 6285.121 #> 6602   335.06202782 6692.465 #> 6603    37.90562814 6904.275 #> 6604   219.60262245 6290.850 #> 6605     1.15540186 6763.199 #> 6606   821.65886132 6327.905 #> 6607   222.84949671 6328.078 #> 6608   240.02605244 6382.188 #> 6609   819.89094154 6292.772 #> 6610   709.86111693 6285.257 #> 6611   559.32504817 6430.646 #> 6612   296.71901028 6658.679 #> 6613   408.67032871 6576.586 #> 6614   187.96354072 6700.174 #> 6615   148.00834886 6485.133 #> 6616   558.27932916 6505.906 #> 6617   633.59645649 6469.860 #> 6618   148.26176144 6744.168 #> 6619   595.48885489 6538.988 #> 6620   783.27109950 6288.758 #> 6621    56.41156181 6697.133 #> 6622   637.20164870 6208.340 #> 6623   410.59505400 6354.005 #> 6624   244.01058374 6418.119 #> 6625   297.20505290 6394.215 #> 6626   223.16543880 6623.500 #> 6627   857.21301232 6369.992 #> 6628   745.04597394 6399.960 #> 6629   745.46895260 6322.960 #> 6630   820.69283166 6367.957 #> 6631     1.18110437 6609.237 #> 6632   223.27259611 6474.543 #> 6633   148.22353235 6669.490 #> 6634   222.44407167 6548.831 #> 6635   295.90166163 6619.231 #> 6636   224.16940237 6288.636 #> 6637   669.15078508 6395.807 #> 6638   633.23974296 6357.811 #> 6639   561.01449074 6243.617 #> 6640   597.05564611 6427.699 #> 6641   296.75894405 6583.591 #> 6642   446.12971913 6501.713 #> 6643   599.91717736 6282.361 #> 6644   202.77740845 6419.373 #> 6645   166.58571957 6312.352 #> 6646   334.87296405 6507.724 #> 6647   333.87909406 6656.677 #> 6648   237.77329985 6308.302 #> 6649   111.99262245 6628.757 #> 6650   562.67966666 6284.052 #> 6651    21.97391311 6625.427 #> 6652   370.45058409 6320.877 #> 6653   259.87475239 6361.646 #> 6654   407.50300644 6613.707 #> 6655   112.54935104 6674.613 #> 6656   518.96501628 6541.599 #> 6657   238.10499117 6346.417 #> 6658   259.46301789 6473.064 #> 6659   242.00377346 6417.818 #> 6660   186.22909294 6589.227 #> 6661   556.70674383 6575.589 #> 6662   486.39004017 6279.191 #> 6663   485.83009762 6353.886 #> 6664   633.81070908 6355.396 #> 6665   896.68128165 6373.800 #> 6666   149.21198460 6704.580 #> 6667   896.54606531 6411.519 #> 6668   334.89852548 6358.377 #> 6669   -31.13876577 6916.206 #> 6670   409.74995620 6429.404 #> 6671   818.75183982 6441.673 #> 6672   259.25901194 6399.657 #> 6673   -34.01789219 6728.144 #> 6674    36.24493754 6642.722 #> 6675   184.51261342 6442.347 #> 6676    72.98404693 6487.681 #> 6677   111.60689794 6633.185 #> 6678   818.70858568 6442.665 #> 6679   486.84946892 6315.922 #> 6680   148.29751698 6592.924 #> 6681   745.63603167 6323.749 #> 6682   109.95012753 6561.213 #> 6683   481.01800379 6542.462 #> 6684   599.37785441 6207.787 #> 6685   258.69934210 6510.919 #> 6686   -69.09478672 6809.320 #> 6687   184.66260859 6591.494 #> 6688   333.81078254 6616.566 #> 6689   187.54311720 6702.741 #> 6690   781.90625023 6401.256 #> 6691   635.28184574 6317.899 #> 6692   335.30614855 6358.382 #> 6693   672.53992854 6282.271 #> 6694   263.57515100 6365.848 #> 6695   110.12143556 6707.649 #> 6696   598.28185065 6431.436 #> 6697   637.65241184 6172.603 #> 6698   563.80655706 6243.328 #> 6699   337.74973595 6692.162 #> 6700   185.10107393 6516.579 #> 6701   632.80733543 6470.019 #> 6702    43.61753225 6902.429 #> 6703   522.59607082 6430.154 #> 6704   527.29619025 6100.903 #> 6705   296.11279290 6360.808 #> 6706   370.94337439 6430.575 #> 6707   446.60022451 6393.526 #> 6708   794.46310977 6472.439 #> 6709    37.73607041 6713.977 #> 6710   335.14327133 6358.857 #> 6711   206.07012860 6421.703 #> 6712   674.48399824 6248.827 #> 6713   634.92468751 6393.999 #> 6714   746.98274133 6251.282 #> 6715   636.73386337 6207.504 #> 6716   147.72700422 6405.717 #> 6717   336.33955743 6247.441 #> 6718   226.45136248 6286.384 #> 6719   636.06186384 6247.694 #> 6720   600.42092700 6168.763 #> 6721   111.36891884 6595.472 #> 6722   485.67555951 6431.389 #> 6723   185.69085096 6587.897 #> 6724   110.21025435 6635.880 #> 6725   634.27676570 6358.642 #> 6726   409.45639732 6469.127 #> 6727   372.92400675 6393.021 #> 6728   149.39966263 6406.490 #> 6729   597.28560646 6356.408 #> 6730   557.49433021 6464.868 #> 6731   369.88982398 6690.489 #> 6732   222.04835775 6437.410 #> 6733   484.36335440 6504.452 #> 6734   204.68480023 6420.704 #> 6735   222.52319561 6625.829 #> 6736   184.75384326 6554.153 #> 6737   187.93493638 6441.240 #> 6738   709.79901036 6249.487 #> 6739   672.32668126 6320.389 #> 6740   782.41934665 6398.345 #> 6741    73.14537416 6449.641 #> 6742   897.16250664 6410.616 #> 6743   -30.38192265 6877.783 #> 6744   -17.08891726 6705.225 #> 6745   894.90365094 6447.348 #> 6746   148.18874432 6371.081 #> 6747   559.77095660 6280.126 #> 6748   298.07799387 6509.295 #> 6749   150.42125991 6704.328 #> 6750   332.25502771 6469.370 #> 6751   446.96754233 6428.036 #> 6752   598.75496327 6246.237 #> 6753   295.02666558 6545.552 #> 6754   259.54228150 6511.581 #> 6755   600.99432460 6172.571 #> 6756   671.37850750 6209.704 #> 6757   148.20234769 6408.095 #> 6758   600.31708920 6168.214 #> 6759    73.31980793 6527.382 #> 6760   795.11730088 6472.112 #> 6761   488.97216882 6094.683 #> 6762   745.83544006 6468.437 #> 6763   296.60863594 6581.366 #> 6764   223.37392559 6476.884 #> 6765   894.53986661 6409.459 #> 6766   633.55964212 6465.587 #> 6767   238.53064415 6380.671 #> 6768   -34.24843420 6838.263 #> 6769   223.45629968 6477.153 #> 6770   632.68198168 6501.982 #> 6771   819.91539513 6291.283 #> 6772   821.27052555 6365.378 #> 6773   147.17253197 6443.123 #> 6774   794.32133829 6471.556 #> 6775   671.58400289 6396.297 #> 6776   672.46123850 6245.258 #> 6777   222.25835034 6436.243 #> 6778   259.54621525 6508.197 #> 6779   854.97464835 6406.930 #> 6780   224.09214623 6659.803 #> 6781   857.19051966 6406.904 #> 6782    74.32489927 6599.887 #> 6783   521.30142504 6578.310 #> 6784    37.60825515 6715.200 #> 6785   185.85467128 6628.832 #> 6786   782.64374370 6366.264 #> 6787   483.02921471 6466.299 #> 6788   446.63343334 6429.052 #> 6789   409.69843547 6317.684 #> 6790   484.41059089 6427.082 #> 6791   670.18618105 6430.140 #> 6792   821.94183542 6329.343 #> 6793   595.78023842 6466.572 #> 6794   709.68057736 6394.118 #> 6795   637.95442289 6172.147 #> 6796    41.44743436 6791.724 #> 6797   370.81214064 6614.592 #> 6798   597.28913900 6392.325 #> 6799   482.65938733 6542.293 #> 6800   258.69840986 6434.424 #> 6801   450.11945824 6207.500 #> 6802   223.02009054 6438.161 #> 6803    79.30831733 6749.380 #> 6804   634.69100861 6321.558 #> 6805   110.48251108 6487.511 #> 6806   110.50147276 6712.297 #> 6807   184.23820316 6479.740 #> 6808   858.98021471 6445.534 #> 6809   259.87739379 6512.177 #> 6810   258.20854278 6435.926 #> 6811   294.79035410 6397.571 #> 6812   897.51680781 6415.463 #> 6813   562.28315495 6206.566 #> 6814   149.74422042 6334.210 #> 6815   113.68906912 6744.892 #> 6816   186.77362171 6323.432 #> 6817   182.50874128 6516.361 #> 6818   483.26520434 6540.720 #> 6819   222.06283990 6550.460 #> 6820   634.02303311 6395.103 #> 6821   408.59461145 6464.784 #> 6822   258.42693875 6539.080 #> 6823   636.47167656 6244.885 #> 6824   595.14209155 6364.004 #> 6825   524.51531548 6536.715 #> 6826   185.71050529 6482.213 #> 6827   595.36204944 6465.622 #> 6828   517.41718217 6538.068 #> 6829   147.80635632 6443.547 #> 6830    20.09709938 6663.879 #> 6831   149.98364934 6780.123 #> 6832    36.32783176 6567.428 #> 6833   561.73702923 6318.847 #> 6834   371.79808436 6541.015 #> 6835   783.07351199 6364.095 #> 6836   370.89950140 6613.788 #> 6837   673.11218749 6286.672 #> 6838   203.47158617 6309.282 #> 6839   481.86452353 6503.654 #> 6840    73.30054236 6562.877 #> 6841   565.70298667 6279.512 #> 6842   702.76290871 6457.211 #> 6843   409.15438813 6505.674 #> 6844   635.63601270 6322.019 #> 6845    79.61333550 6787.677 #> 6846   334.87812040 6358.931 #> 6847   335.26694322 6692.949 #> 6848   147.47579629 6442.902 #> 6849   168.58988854 6344.697 #> 6850    95.12852232 6656.117 #> 6851   298.49375089 6657.095 #> 6852   334.22379094 6465.255 #> 6853   702.45501542 6459.625 #> 6854   448.64250792 6351.135 #> 6855   745.92688631 6289.415 #> 6856   448.24447342 6320.408 #> 6857   297.39383112 6466.943 #> 6858   184.23180074 6365.332 #> 6859   856.47178213 6402.710 #> 6860   148.13113951 6741.898 #> 6861   523.81838668 6244.404 #> 6862   709.98845728 6284.062 #> 6863   856.04537293 6406.191 #> 6864   298.61349732 6471.270 #> 6865   447.07205595 6538.504 #> 6866   221.99722359 6401.847 #> 6867   220.91668662 6439.360 #> 6868   896.57530120 6373.426 #> 6869   597.29850429 6429.339 #> 6870   636.24173432 6246.558 #> 6871   333.64939917 6616.161 #> 6872   333.03038553 6469.832 #> 6873   222.78722467 6514.969 #> 6874   521.98215616 6503.401 #> 6875   186.22927996 6366.104 #> 6876   710.24396543 6248.328 #> 6877   855.64774801 6445.206 #> 6878   673.21105352 6468.851 #> 6879   672.62210038 6209.724 #> 6880   563.75671854 6170.814 #> 6881   707.97683941 6320.737 #> 6882   185.05558708 6476.219 #> 6883   370.97716163 6544.240 #> 6884    58.09195486 6620.959 #> 6885   526.58468190 6167.745 #> 6886   451.04187687 6242.608 #> 6887   408.27938991 6505.316 #> 6888   408.06154153 6543.492 #> 6889   783.31964319 6288.540 #> 6890    73.27605540 6565.247 #> 6891   673.66417280 6245.963 #> 6892   601.05369452 6171.339 #> 6893   201.92180561 6309.021 #> 6894   296.84947358 6435.889 #> 6895   -16.16793862 6708.135 #> 6896   110.65228475 6595.472 #> 6897   563.24439603 6244.077 #> 6898   336.27968002 6281.968 #> 6899   708.36403665 6399.369 #> 6900   746.78329496 6287.604 #> 6901   597.35308866 6391.453 #> 6902   526.18239993 6206.901 #> 6903   819.75592822 6405.212 #> 6904   370.91309470 6543.515 #> 6905    38.95047636 6641.090 #> 6906   598.94086431 6352.620 #> 6907   116.04417453 6784.159 #> 6908   222.01522361 6663.245 #> 6909   222.37797692 6402.101 #> 6910   489.07084004 6205.668 #> 6911   258.27388168 6586.673 #> 6912   223.42798900 6474.638 #> 6913   633.41265568 6432.072 #> 6914   557.58526881 6431.015 #> 6915     0.33749767 6721.574 #> 6916   185.31670702 6404.312 #> 6917   110.43658082 6559.518 #> 6918   526.20381233 6170.080 #> 6919   708.86843481 6321.289 #> 6920   222.94960405 6548.348 #> 6921    42.77361247 6903.306 #> 6922   298.30234609 6396.443 #> 6923   -68.00834057 6809.847 #> 6924   412.21345328 6279.953 #> 6925   484.77062694 6355.583 #> 6926   334.24357029 6545.047 #> 6927   185.19828862 6591.867 #> 6928   634.00769580 6430.819 #> 6929   595.50773536 6465.850 #> 6930   820.24160043 6405.372 #> 6931   409.87204747 6430.673 #> 6932   335.18242629 6690.803 #> 6933    40.43757859 6756.233 #> 6934   112.99788850 6670.098 #> 6935     3.50339651 6873.213 #> 6936   673.63553010 6245.481 #> 6937   595.31331353 6541.866 #> 6938   -34.80083833 6842.076 #> 6939   488.25432725 6243.700 #> 6940   111.02060204 6524.164 #> 6941   281.22340067 6343.177 #> 6942     1.53179793 6646.711 #> 6943   275.55205803 6381.213 #> 6944    13.81760302 6699.054 #> 6945   110.80111053 6557.439 #> 6946   636.08047400 6247.363 #> 6947   672.92490467 6284.579 #> 6948   333.21647890 6617.867 #> 6949   636.39121349 6170.131 #> 6950   223.29832720 6437.231 #> 6951   595.95478210 6393.270 #> 6952   239.28632238 6345.670 #> 6953    57.08395820 6696.452 #> 6954   148.54470788 6739.842 #> 6955    78.57955718 6748.011 #> 6956   820.80172955 6365.924 #> 6957   520.78073789 6538.990 #> 6958   596.25713473 6466.117 #> 6959   710.45691450 6358.115 #> 6960   445.93318672 6504.567 #> 6961   556.25337111 6575.639 #> 6962   148.60079405 6555.316 #> 6963   783.06220549 6326.351 #> 6964   188.40966476 6331.058 #> 6965   146.07659792 6481.315 #> 6966    75.67194369 6676.891 #> 6967   259.66334978 6586.615 #> 6968    92.73504922 6693.207 #> 6969   277.01666341 6379.734 #> 6970   595.00438611 6540.299 #> 6971   148.54439757 6406.546 #> 6972   296.13404591 6396.964 #> 6973   529.79760490 6096.634 #> 6974   782.34714099 6437.756 #> 6975   632.39085900 6429.680 #> 6976   636.13123534 6244.559 #> 6977   167.25129726 6423.172 #> 6978   748.38035527 6287.052 #> 6979   783.23453607 6328.348 #> 6980   560.13717706 6353.226 #> 6981   595.61862922 6502.496 #> 6982   281.46187922 6341.975 #> 6983    75.35159736 6637.605 #> 6984   259.49731245 6437.150 #> 6985    36.44350087 6569.250 #> 6986   190.77993454 6702.587 #> 6987   184.97640477 6330.312 #> 6988   483.80696520 6465.484 #> 6989   485.61900266 6387.766 #> 6990   222.21145243 6437.622 #> 6991   275.53615602 6377.619 #> 6992   370.36075244 6469.479 #> 6993   486.73932799 6318.918 #> 6994   855.79683961 6441.032 #> 6995   594.76882804 6465.629 #> 6996   780.55364613 6405.164 #> 6997   634.89090095 6467.093 #> 6998   371.38365951 6504.141 #> 6999   149.27384798 6742.829 #> 7000   258.72511332 6586.809 #> 7001     0.74275434 6648.148 #> 7002    73.82236675 6566.056 #> 7003   204.49631099 6346.677 #> 7004    41.68088970 6829.992 #> 7005   259.71185867 6548.551 #> 7006   296.63319879 6691.711 #> 7007   -69.56849064 6884.657 #> 7008   296.89970050 6435.469 #> 7009   524.59027329 6279.061 #> 7010   599.86816629 6208.460 #> 7011   560.46281431 6390.567 #> 7012   794.61786634 6472.015 #> 7013   147.97400675 6480.487 #> 7014   525.80449519 6096.033 #> 7015   259.25693701 6324.717 #> 7016   447.25011308 6572.514 #> 7017    36.33916956 6641.171 #> 7018    -0.61600081 6873.555 #> 7019    56.27216728 6658.607 #> 7020   822.60384635 6331.252 #> 7021   558.83771358 6315.124 #> 7022   222.96146094 6473.889 #> 7023   221.85036325 6439.153 #> 7024   485.16742204 6390.825 #> 7025   636.59584855 6172.121 #> 7026   446.76499711 6431.159 #> 7027   259.81719037 6620.008 #> 7028   894.42395050 6447.077 #> 7029   519.61351502 6542.477 #> 7030   707.68753021 6431.247 #> 7031   563.67475737 6243.333 #> 7032   823.08236521 6331.107 #> 7033    42.53701833 6865.414 #> 7034   223.84681464 6661.140 #> 7035   186.34251683 6552.840 #> 7036   333.55060215 6433.342 #> 7037   520.21723046 6575.544 #> 7038   298.07062125 6509.466 #> 7039   222.41828059 6552.554 #> 7040   557.02136154 6543.057 #> 7041   894.39472757 6409.217 #> 7042   -30.04773794 6915.838 #> 7043   450.53587187 6242.335 #> 7044   745.77954494 6287.046 #> 7045   669.70552575 6431.278 #> 7046   237.97353739 6342.114 #> 7047   484.36397636 6577.369 #> 7048   448.39545909 6391.799 #> 7049   332.30082051 6657.770 #> 7050   335.49228113 6356.625 #> 7051   222.74167122 6698.867 #> 7052   523.26868309 6428.908 #> 7053   371.37547335 6542.374 #> 7054   821.41366155 6366.096 #> 7055  -181.69984025 6828.670 #> 7056   -23.06441974 6910.884 #> 7057   335.22843137 6432.984 #> 7058   408.95167677 6580.566 #> 7059   559.04034657 6427.718 #> 7060   148.60212022 6331.062 #> 7061   111.59988320 6746.373 #> 7062     4.55353613 6797.371 #> 7063   295.85783378 6358.150 #> 7064   259.47318500 6397.028 #> 7065   561.66191707 6217.949 #> 7066   295.72847187 6654.726 #> 7067   821.27980971 6366.382 #> 7068   522.44254283 6429.189 #> 7069   296.25509801 6654.318 #> 7070   746.10604623 6472.825 #> 7071   448.84314966 6277.160 #> 7072   296.13182888 6323.939 #> 7073   375.07142221 6691.180 #> 7074   633.34385147 6318.099 #> 7075   635.72728023 6246.551 #> 7076   819.48875899 6479.670 #> 7077   260.28160151 6697.594 #> 7078   523.73180345 6281.688 #> 7079   671.47841314 6359.847 #> 7080   521.58488510 6466.605 #> 7081   150.75953632 6778.938 #> 7082    55.48565061 6623.479 #> 7083   600.46785625 6133.083 #> 7084   669.66209432 6394.397 #> 7085   747.51124190 6249.795 #> 7086   222.25027703 6698.074 #> 7087   331.81311043 6618.349 #> 7088   486.79684510 6318.673 #> 7089   169.81338284 6342.814 #> 7090   781.98022593 6438.907 #> 7091    38.11386757 6754.322 #> 7092   297.64948016 6321.696 #> 7093   222.85074209 6663.251 #> 7094    38.12438276 6715.161 #> 7095   557.16946619 6504.538 #> 7096   672.90888879 6323.536 #> 7097   783.73686376 6288.583 #> 7098   794.63802754 6472.044 #> 7099   562.86135393 6134.734 #> 7100   185.79079712 6438.727 #> 7101   114.75642861 6783.836 #> 7102   784.37986749 6327.961 #> 7103   408.78574320 6615.461 #> 7104   521.27169153 6577.222 #> 7105   672.55218318 6359.074 #> 7106   783.02235004 6327.949 #> 7107   444.90062677 6465.784 #> 7108   487.27376208 6316.159 #> 7109   447.21862345 6467.204 #> 7110   112.93383543 6669.352 #> 7111   858.49292204 6331.658 #> 7112   820.39270253 6404.406 #> 7113   408.12819225 6580.340 #> 7114   480.33246933 6503.472 #> 7115   672.73404105 6467.959 #> 7116   111.39130971 6635.759 #> 7117   222.81191166 6477.086 #> 7118   818.26208316 6480.706 #> 7119   819.06058077 6403.787 #> 7120   411.46492552 6317.726 #> 7121   820.86223493 6294.657 #> 7122   818.70770523 6479.866 #> 7123   634.28999965 6358.294 #> 7124   222.53415249 6400.369 #> 7125   147.71089946 6481.230 #> 7126   597.93499369 6281.507 #> 7127   239.32324591 6382.062 #> 7128   110.17575179 6522.483 #> 7129   409.11918873 6613.876 #> 7130   372.12259978 6466.133 #> 7131   298.12137953 6434.709 #> 7132   524.55540554 6318.591 #> 7133   372.25457125 6392.299 #> 7134    40.21403090 6755.336 #> 7135    41.82742178 6791.404 #> 7136   297.24523264 6471.970 #> 7137   594.57665863 6538.618 #> 7138   599.81248644 6208.683 #> 7139   521.78939934 6429.196 #> 7140   149.58351246 6668.558 #> 7141   635.64251801 6243.058 #> 7142   186.81509281 6666.555 #> 7143   335.03236993 6359.170 #> 7144   413.06625533 6278.843 #> 7145   183.97099459 6630.820 #> 7146   560.26530811 6284.425 #> 7147   635.60167643 6279.277 #> 7148   705.57681684 6454.529 #> 7149   745.90094284 6326.631 #> 7150   526.35383074 6135.327 #> 7151   446.18891871 6428.134 #> 7152   296.96452060 6359.990 #> 7153   673.06675141 6320.643 #> 7154   -33.99091943 6841.317 #> 7155    40.88917972 6680.226 #> 7156   894.67120378 6446.380 #> 7157   557.64198820 6505.683 #> 7158   820.91829348 6366.242 #> 7159    41.83371707 6866.320 #> 7160   149.83309681 6666.367 #> 7161   600.46206224 6138.464 #> 7162   147.27493180 6779.096 #> 7163     2.35271301 6912.521 #> 7164    70.13630365 6448.019 #> 7165   632.36568010 6433.416 #> 7166   895.82994125 6407.458 #> 7167   595.32699768 6467.047 #> 7168   259.29135421 6583.431 #> 7169   186.31547800 6666.071 #> 7170   333.40066110 6654.862 #> 7171   259.04989421 6657.961 #> 7172   559.22671629 6429.108 #> 7173   111.92992096 6637.227 #> 7174   203.51436142 6344.270 #> 7175   371.95352146 6390.881 #> 7176   371.44557559 6614.278 #> 7177   296.18422751 6618.284 #> 7178   784.10534580 6328.249 #> 7179   148.18875567 6592.071 #> 7180   483.97655036 6536.080 #> 7181   820.60663747 6476.558 #> 7182   -71.07753345 6846.983 #> 7183   485.14492640 6428.800 #> 7184   223.51698167 6623.191 #> 7185   599.99363090 6206.790 #> 7186   783.56931596 6328.344 #> 7187   490.53961390 6058.394 #> 7188   111.14848656 6784.145 #> 7189   708.00100733 6358.947 #> 7190   187.95185331 6700.444 #> 7191   112.62429806 6782.709 #> 7192   522.54553752 6353.256 #> 7193   241.22043317 6417.475 #> 7194   240.13021742 6418.808 #> 7195     2.14254846 6759.411 #> 7196   332.79491915 6506.063 #> 7197   448.55209161 6316.032 #> 7198   557.81399878 6574.514 #> 7199   556.66824849 6501.758 #> 7200   556.83676281 6427.557 #> 7201   185.07768009 6515.043 #> 7202   448.32874363 6316.253 #> 7203   670.54938962 6433.652 #> 7204   147.82610555 6705.770 #> 7205     2.60898154 6873.417 #> 7206    73.61389183 6602.331 #> 7207   744.67593301 6397.016 #> 7208   446.60053115 6392.917 #> 7209   371.40888112 6503.446 #> 7210   745.31155267 6360.708 #> 7211   555.85784252 6577.173 #> 7212   260.05733761 6360.129 #> 7213   448.26351883 6131.836 #> 7214   187.97258890 6699.937 #> 7215   259.54966603 6549.151 #> 7216   819.64879426 6327.947 #> 7217   785.97774666 6321.556 #> 7218   745.84231292 6400.306 #> 7219   296.27504919 6398.574 #> 7220   409.82559812 6429.375 #> 7221   557.92814288 6280.699 #> 7222   559.03538384 6390.955 #> 7223   296.96249029 6359.135 #> 7224    37.94094633 6756.268 #> 7225   114.57981245 6785.035 #> 7226   148.59036059 6405.443 #> 7227   223.14406826 6626.174 #> 7228     3.81847279 6873.144 #> 7229   147.02480897 6516.604 #> 7230   183.90229554 6293.931 #> 7231   221.33381123 6364.576 #> 7232    73.33475580 6412.801 #> 7233   369.57826548 6578.746 #> 7234   556.73698396 6538.906 #> 7235   147.82083046 6446.179 #> 7236   487.73327369 6502.193 #> 7237    35.93930937 6494.154 #> 7238   188.13770571 6702.083 #> 7239   335.15760614 6358.794 #> 7240   597.18311907 6394.550 #> 7241   224.41386751 6327.776 #> 7242   669.42219169 6435.854 #> 7243   -32.49798770 6802.348 #> 7244    78.89389668 6788.006 #> 7245   710.62050295 6471.684 #> 7246   408.10852657 6615.219 #> 7247   241.08500265 6417.149 #> 7248   373.51082854 6319.941 #> 7249   296.42431189 6469.853 #> 7250   204.38493632 6419.766 #> 7251   146.23735440 6481.739 #> 7252    54.99115881 6699.236 #> 7253   260.49404823 6507.327 #> 7254   375.59100725 6319.487 #> 7255   259.39874489 6400.747 #> 7256   560.28864827 6205.252 #> 7257   110.41758181 6449.267 #> 7258    19.29039456 6662.890 #> 7259   110.69897854 6745.259 #> 7260   596.00935445 6465.657 #> 7261   527.62511323 6133.657 #> 7262   856.38833929 6405.827 #> 7263   444.17645198 6611.511 #> 7264   407.36411919 6578.546 #> 7265   148.79973811 6443.118 #> 7266   222.52863470 6552.065 #> 7267   260.48465106 6400.038 #> 7268   446.95802798 6428.833 #> 7269   746.57028063 6468.128 #> 7270   333.87862731 6467.968 #> 7271   482.71765792 6575.416 #> 7272   482.44543695 6575.512 #> 7273   184.67653944 6515.414 #> 7274   240.08226477 6416.560 #> 7275   520.04007319 6505.462 #> 7276   447.34865820 6390.221 #> 7277   335.99398498 6692.645 #> 7278   259.12873412 6657.601 #> 7279   186.15699941 6666.944 #> 7280   202.58338725 6419.756 #> 7281   557.20959993 6505.910 #> 7282   147.79209299 6405.254 #> 7283   221.95440400 6474.553 #> 7284   148.46645562 6406.292 #> 7285   560.21652466 6282.189 #> 7286   333.65553380 6618.770 #> 7287   331.79360628 6581.122 #> 7288   411.42197008 6279.761 #> 7289   258.56004120 6659.007 #> 7290   259.46003754 6435.070 #> 7291   222.86874199 6588.829 #> 7292   149.81633535 6669.040 #> 7293   519.94667753 6466.373 #> 7294   223.57738231 6474.280 #> 7295   222.00704181 6363.376 #> 7296   557.76385544 6539.428 #> 7297   561.29143576 6280.543 #> 7298   451.87383574 6205.458 #> 7299    38.14324862 6653.488 #> 7300   224.93399882 6366.770 #> 7301   297.34783704 6435.994 #> 7302   221.75192998 6437.132 #> 7303   222.52365109 6511.689 #> 7304   523.81753369 6500.429 #> 7305   857.15181761 6444.605 #> 7306    51.39083490 6864.747 #> 7307   114.03750022 6408.772 #> 7308   706.82664025 6433.289 #> 7309   707.73545024 6434.991 #> 7310   295.23027253 6622.429 #> 7311   409.24920495 6467.758 #> 7312   107.44847923 6706.959 #> 7313   296.96391711 6506.297 #> 7314   186.44716352 6256.298 #> 7315   524.55049101 6281.567 #> 7316   188.32563562 6405.304 #> 7317   296.91337279 6472.359 #> 7318   184.81421764 6438.561 #> 7319   238.34072466 6307.597 #> 7320   146.45963907 6371.605 #> 7321   556.72785795 6539.524 #> 7322   203.61682261 6308.009 #> 7323   896.42285660 6411.245 #> 7324   558.29678479 6468.722 #> 7325    37.61634310 6569.794 #> 7326   708.55291621 6353.874 #> 7327   446.29679306 6465.037 #> 7328   526.40570078 6244.245 #> 7329    92.90294145 6654.014 #> 7330    72.34044228 6524.501 #> 7331   333.14030553 6507.843 #> 7332   674.76826922 6282.361 #> 7333   297.92142639 6657.715 #> 7334   372.54891787 6466.263 #> 7335   708.81519162 6323.203 #> 7336   259.38325288 6435.261 #> 7337   857.11964869 6331.984 #> 7338   563.32736283 6205.334 #> 7339   636.16494899 6244.086 #> 7340   445.45446457 6501.859 #> 7341   596.79503318 6427.076 #> 7342    93.88994026 6655.955 #> 7343   746.64537105 6467.990 #> 7344   894.03738771 6446.587 #> 7345   520.12905726 6464.253 #> 7346   259.72479845 6286.796 #> 7347    55.14463426 6699.053 #> 7348   524.38350069 6318.389 #> 7349   111.69234187 6595.695 #> 7350   818.47038894 6443.623 #> 7351   708.73308852 6394.686 #> 7352   857.10399092 6445.878 #> 7353   525.95713400 6244.107 #> 7354   489.00950528 6207.054 #> 7355   243.63495484 6418.941 #> 7356   297.68294828 6694.059 #> 7357   409.97922930 6427.953 #> 7358   299.23050535 6508.068 #> 7359   238.46563158 6307.793 #> 7360   823.72947505 6294.039 #> 7361   409.89136179 6501.704 #> 7362   223.14607629 6437.763 #> 7363   222.06880042 6400.201 #> 7364   334.57798555 6654.062 #> 7365   637.85192726 6172.045 #> 7366   169.01776567 6341.408 #> 7367   370.13115735 6577.463 #> 7368   223.78951415 6324.498 #> 7369   279.19831265 6305.566 #> 7370   671.19893060 6396.196 #> 7371   297.01707922 6584.397 #> 7372   672.20558685 6285.258 #> 7373   894.46423628 6446.306 #> 7374   238.59552489 6307.835 #> 7375   223.34603751 6437.021 #> 7376   259.12969007 6661.180 #> 7377   168.20783857 6343.179 #> 7378   445.77885110 6576.852 #> 7379   450.94228270 6207.639 #> 7380   672.54472265 6284.066 #> 7381   221.34886239 6325.840 #> 7382   745.26037924 6324.250 #> 7383   598.12127001 6318.602 #> 7384   445.59424065 6610.583 #> 7385   147.13291645 6518.227 #> 7386   110.34406931 6484.535 #> 7387   635.20082701 6284.424 #> 7388   559.59106647 6392.410 #> 7389   222.29747052 6363.356 #> 7390   372.87992454 6616.989 #> 7391   559.68100565 6250.500 #> 7392   410.89354484 6363.330 #> 7393   555.35505787 6476.697 #> 7394   822.03844798 6294.689 #> 7395    93.34630568 6652.450 #> 7396   516.61499369 6576.891 #> 7397   372.87784664 6392.502 #> 7398   297.35031143 6434.878 #> 7399   186.27972320 6664.326 #> 7400   821.11700280 6331.015 #> 7401   897.40056890 6372.844 #> 7402   146.70899510 6482.380 #> 7403   335.13247591 6690.482 #> 7404    -1.29505293 6760.923 #> 7405    57.61523656 6659.854 #> 7406   526.88849132 6241.407 #> 7407   296.62811608 6472.434 #> 7408   333.73164045 6617.818 #> 7409   709.13549612 6246.926 #> 7410   559.30963059 6464.814 #> 7411   188.42820862 6329.240 #> 7412   670.92580993 6433.981 #> 7413    78.05023835 6748.785 #> 7414   447.46068829 6280.375 #> 7415   818.43805002 6480.095 #> 7416   296.53346373 6690.522 #> 7417   410.62491628 6393.640 #> 7418   222.62204620 6325.820 #> 7419   483.18627215 6464.683 #> 7420   485.07931430 6391.204 #> 7421   260.40692142 6360.346 #> 7422   110.66313677 6557.966 #> 7423   794.83999863 6471.453 #> 7424   408.65379955 6544.772 #> 7425   744.74374349 6361.722 #> 7426     3.82595730 6795.222 #> 7427   223.33954602 6361.392 #> 7428    56.96219841 6696.819 #> 7429   746.31444835 6289.760 #> 7430   708.90142092 6283.591 #> 7431   447.02637002 6504.267 #> 7432   370.81427967 6469.751 #> 7433   371.14743355 6355.151 #> 7434   259.26184710 6398.080 #> 7435   183.99789338 6329.039 #> 7436   275.12868423 6380.646 #> 7437   746.48194788 6325.389 #> 7438   258.06099031 6437.556 #> 7439   523.27013456 6390.904 #> 7440   709.36123308 6284.003 #> 7441   370.61636247 6466.148 #> 7442   262.17433751 6696.193 #> 7443   371.16772128 6469.293 #> 7444   147.81507808 6630.415 #> 7445   446.95141845 6575.967 #> 7446   222.06158145 6627.801 #> 7447   526.64283861 6099.158 #> 7448   522.39361165 6428.217 #> 7449   187.47418152 6701.710 #> 7450   202.20043102 6419.658 #> 7451   560.03587029 6205.034 #> 7452   855.95850982 6369.108 #> 7453   818.39372613 6481.084 #> 7454   744.96152177 6324.020 #> 7455     0.76349909 6571.230 #> 7456   519.63676808 6575.736 #> 7457   489.83166418 6095.971 #> 7458   223.01251272 6512.958 #> 7459   525.77277571 6170.227 #> 7460   110.49889855 6445.271 #> 7461   670.61196636 6434.084 #> 7462   781.98526456 6437.563 #> 7463   186.33932143 6663.165 #> 7464    73.93256930 6600.362 #> 7465    38.78764105 6755.482 #> 7466    57.58683070 6695.955 #> 7467   148.19917994 6557.865 #> 7468   784.53465273 6288.157 #> 7469    41.63482411 6792.442 #> 7470   299.73018447 6507.908 #> 7471   558.85622810 6316.649 #> 7472   112.76207665 6597.336 #> 7473    76.78102715 6750.784 #> 7474   260.54863335 6437.886 #> 7475  -219.69629613 6799.134 #> 7476   336.07325683 6283.598 #> 7477   297.67039989 6324.267 #> 7478   446.24097358 6539.463 #> 7479   147.22875994 6369.634 #> 7480   240.61619134 6417.638 #> 7481     1.51915300 6834.181 #> 7482   484.72130208 6430.084 #> 7483   823.91519398 6294.566 #> 7484   259.40934529 6546.209 #> 7485   237.17553534 6306.070 #> 7486   185.24537550 6515.530 #> 7487   223.04383868 6588.563 #> 7488   596.14096173 6428.657 #> 7489   558.73191111 6324.131 #> 7490   185.76857050 6443.212 #> 7491   595.12665971 6537.798 #> 7492   409.56475398 6470.200 #> 7493   223.44461686 6476.762 #> 7494    34.85949627 6681.183 #> 7495    54.87903033 6699.372 #> 7496   333.44109807 6577.933 #> 7497   562.32226419 6171.817 #> 7498   260.65306466 6358.878 #> 7499   372.57544696 6690.574 #> 7500   702.70306012 6458.207 #> 7501   147.82640705 6557.524 #> 7502   486.60670887 6281.772 #> 7503   522.51903583 6430.087 #> 7504   446.57934623 6428.279 #> 7505   674.75331984 6249.018 #> 7506    95.02617867 6690.976 #> 7507   277.71653491 6416.378 #> 7508   524.32038824 6204.466 #> 7509   297.70297154 6581.879 #> 7510   277.48225669 6305.357 #> 7511    38.06693344 6755.025 #> 7512   482.82822092 6577.706 #> 7513   109.76336441 6560.523 #> 7514   -34.18585174 6725.835 #> 7515   521.11585407 6467.816 #> 7516   148.58994146 6741.176 #> 7517   371.04175324 6540.380 #> 7518   113.03503721 6670.717 #> 7519   637.75298454 6171.969 #> 7520   634.33864712 6321.369 #> 7521   702.26079916 6459.776 #> 7522   222.42202004 6514.361 #> 7523   524.09158613 6317.723 #> 7524   225.47446553 6328.152 #> 7525   670.06785139 6433.429 #> 7526   488.15793952 6315.102 #> 7527   149.16558220 6667.607 #> 7528   372.95656604 6468.668 #> 7529   296.57758422 6322.896 #> 7530   599.77307995 6136.222 #> 7531   819.21498757 6479.703 #> 7532   149.30956411 6593.061 #> 7533   147.63100393 6631.117 #> 7534   490.48288230 6096.359 #> 7535   335.63641455 6395.814 #> 7536   562.97867146 6134.022 #> 7537   372.10046571 6466.950 #> 7538   708.53866503 6248.887 #> 7539   600.74874516 6206.706 #> 7540   187.74990666 6699.833 #> 7541   599.04071976 6243.256 #> 7542   370.81854708 6317.021 #> 7543   296.55420914 6660.558 #> 7544   708.40654166 6358.565 #> 7545   410.75375174 6354.625 #> 7546   856.30605008 6407.259 #> 7547   295.32624845 6324.563 #> 7548   489.78234711 6057.173 #> 7549   204.36826449 6420.001 #> 7550   527.46300445 6096.731 #> 7551   373.60505339 6321.297 #> 7552   223.10724873 6623.165 #> 7553   223.18371959 6661.168 #> 7554   148.46921548 6482.201 #> 7555   672.52518830 6469.928 #> 7556   409.34420944 6465.649 #> 7557   597.53075046 6282.255 #> 7558    41.32184301 6829.043 #> 7559   783.68691445 6328.504 #> 7560   561.82971860 6173.205 #> 7561   481.88870258 6578.244 #> 7562   297.01120740 6543.558 #> 7563     0.93082816 6910.980 #> 7564   595.20153255 6466.566 #> 7565   818.01496093 6440.211 #> 7566   224.73032878 6699.062 #> 7567   558.99648301 6320.289 #> 7568   184.88071016 6401.406 #> 7569   411.51039315 6281.194 #> 7570   185.42799447 6365.497 #> 7571   296.56422867 6510.587 #> 7572   491.10765288 6062.607 #> 7573   747.36600574 6323.616 #> 7574   408.78705688 6615.284 #> 7575   489.27024091 6059.924 #> 7576   447.91876577 6353.699 #> 7577   277.62120724 6304.592 #> 7578    75.30705769 6789.363 #> 7579   527.67177764 6101.014 #> 7580   748.71430630 6472.127 #> 7581    38.66074496 6830.727 #> 7582     2.10669926 6836.375 #> 7583   150.05825322 6779.767 #> 7584   295.22717936 6653.887 #> 7585   296.04109077 6618.021 #> 7586   148.81460161 6592.059 #> 7587   113.25449014 6781.023 #> 7588   483.34051386 6577.125 #> 7589   561.41018007 6132.019 #> 7590   279.94881982 6339.933 #> 7591   672.97853880 6210.596 #> 7592   445.15603990 6576.998 #> 7593   446.37820764 6614.117 #> 7594   148.04859352 6631.937 #> 7595   558.78638407 6504.773 #> 7596   183.25634915 6328.692 #> 7597   334.19360759 6433.937 #> 7598   204.45262573 6348.686 #> 7599   371.42683895 6467.270 #> 7600   411.00366623 6577.936 #> 7601   744.20245656 6401.379 #> 7602   820.67095447 6405.525 #> 7603    74.05108807 6637.829 #> 7604   520.47545025 6541.276 #> 7605    36.26861938 6494.798 #> 7606   187.68607408 6666.033 #> 7607   635.77896450 6208.033 #> 7608   295.78738628 6435.572 #> 7609   149.46333111 6703.622 #> 7610   525.35971539 6203.112 #> 7611   791.98612655 6469.630 #> 7612   333.31181747 6581.213 #> 7613   259.32102249 6362.420 #> 7614   447.79458689 6353.123 #> 7615    43.83039778 6793.167 #> 7616   149.17574261 6371.851 #> 7617    70.92961037 6452.652 #> 7618   110.77549070 6484.545 #> 7619   595.04679535 6537.422 #> 7620   223.81088721 6403.740 #> 7621   821.01282030 6366.194 #> 7622   299.30703737 6283.330 #> 7623   147.57270527 6520.072 #> 7624   224.03402395 6362.182 #> 7625   335.83302571 6321.020 #> 7626   370.68342911 6505.085 #> 7627   522.79095846 6354.932 #> 7628   744.87368827 6286.669 #> 7629   558.63576899 6426.634 #> 7630   223.22977326 6625.539 #> 7631   559.64971398 6427.703 #> 7632   490.39015074 6094.271 #> 7633   298.33607402 6395.909 #> 7634   185.45759219 6404.490 #> 7635   782.73454549 6364.707 #> 7636   -67.70756861 6659.155 #> 7637   370.83423642 6393.956 #> 7638   110.67097568 6523.516 #> 7639   186.12559189 6666.353 #> 7640   183.60879556 6442.826 #> 7641   896.70874971 6375.895 #> 7642   857.93629993 6445.029 #> 7643   560.08893598 6284.082 #> 7644   410.14104422 6503.339 #> 7645    20.15858562 6665.845 #> 7646    75.62164905 6600.646 #> 7647   746.05928351 6323.114 #> 7648   636.40934431 6205.627 #> 7649   447.12775126 6614.120 #> 7650   164.10407158 6388.348 #> 7651   489.75037774 6092.311 #> 7652   371.59230462 6429.932 #> 7653   147.07449998 6554.929 #> 7654   819.52170192 6403.080 #> 7655   745.82660713 6436.229 #> 7656   529.11133955 6130.513 #> 7657   595.34011231 6539.188 #> 7658   297.41661247 6432.582 #> 7659   527.12089402 6100.839 #> 7660   259.16238075 6581.619 #> 7661   222.44593305 6439.641 #> 7662   594.57876666 6538.602 #> 7663   634.66362773 6357.829 #> 7664   148.91940518 6666.952 #> 7665   633.18881694 6395.441 #> 7666   596.07758184 6465.550 #> 7667   601.18022996 6169.707 #> 7668   594.67249894 6539.350 #> 7669   634.07941598 6318.391 #> 7670   895.72898185 6410.869 #> 7671   297.66266033 6617.032 #> 7672   237.91663561 6305.970 #> 7673   896.34477367 6371.981 #> 7674   185.61219743 6442.060 #> 7675   147.91190897 6555.059 #> 7676   259.94281840 6397.279 #> 7677   819.39448054 6478.096 #> 7678     3.92256086 6795.750 #> 7679   520.65235526 6538.604 #> 7680   487.99189623 6281.950 #> 7681   857.49181105 6445.008 #> 7682   491.72125462 6283.240 #> 7683   710.03760326 6288.489 #> 7684   111.42431593 6738.329 #> 7685   259.21061812 6291.202 #> 7686   531.20174747 6205.172 #> 7687   676.06975042 6468.233 #> 7688   110.27696806 6709.010 #> 7689   275.77970870 6380.193 #> 7690   520.08050341 6577.929 #> 7691   672.82549914 6211.143 #> 7692   636.20639171 6245.749 #> 7693    -0.59033598 6610.994 #> 7694   482.47953857 6540.630 #> 7695   634.93792470 6318.021 #> 7696   524.51123190 6314.138 #> 7697    72.57448359 6565.101 #> 7698   147.61924202 6517.268 #> 7699    46.75757751 6906.709 #> 7700   587.82859807 6317.795 #> 7701   821.67033949 6296.412 #> 7702   371.64142321 6432.047 #> 7703   222.67616310 6511.102 #> 7704    54.54758182 6697.152 #> 7705   278.67042214 6417.240 #> 7706   336.63592032 6355.974 #> 7707   702.66474181 6456.944 #> 7708   783.25253995 6326.153 #> 7709   599.17339998 6279.797 #> 7710   448.22513128 6320.269 #> 7711   236.67153271 6304.990 #> 7712   701.56660881 6458.587 #> 7713    59.20791504 6659.909 #> 7714   371.34221908 6506.976 #> 7715   333.68588667 6504.974 #> 7716    37.38147951 6566.177 #> 7717    38.68847825 6755.177 #> 7718   633.65494097 6467.273 #> 7719   334.53739972 6433.341 #> 7720   -71.30589699 6694.632 #> 7721   258.73028053 6360.557 #> 7722   259.65438265 6657.766 #> 7723   409.28284684 6466.242 #> 7724   241.09130901 6418.437 #> 7725    78.28520031 6786.890 #> 7726   -32.54622493 6841.067 #> 7727   411.12084946 6579.291 #> 7728   258.82474434 6660.417 #> 7729    20.74765915 6664.887 #> 7730   296.05268896 6659.055 #> 7731    42.40232422 6869.456 #> 7732   820.20682959 6402.438 #> 7733   895.47083334 6409.327 #> 7734   596.52391925 6467.785 #> 7735   371.50963692 6356.784 #> 7736   111.72865075 6784.097 #> 7737   783.12580943 6365.171 #> 7738   525.47312130 6170.602 #> 7739   557.81422863 6502.012 #> 7740   486.27789168 6352.569 #> 7741    42.81375971 6791.745 #> 7742   164.64993757 6388.318 #> 7743   297.83964269 6322.999 #> 7744   710.74099278 6321.769 #> 7745   482.70130484 6538.722 #> 7746   186.02691367 6662.927 #> 7747   522.84472391 6393.432 #> 7748   520.31718240 6538.512 #> 7749   489.05900215 6243.118 #> 7750   708.28760651 6432.762 #> 7751   185.64093967 6662.144 #> 7752   148.79672211 6776.319 #> 7753    44.31524607 6903.893 #> 7754   260.87330992 6549.646 #> 7755   747.75244022 6249.783 #> 7756   167.98951901 6426.142 #> 7757   334.15212741 6470.465 #> 7758   595.84304567 6428.501 #> 7759   410.12404891 6391.505 #> 7760   336.76089690 6285.125 #> 7761   711.03054518 6464.019 #> 7762   635.63387631 6246.900 #> 7763   561.27728948 6279.411 #> 7764   784.65876944 6291.609 #> 7765   490.71935225 6132.896 #> 7766   446.16672074 6538.963 #> 7767   222.11590644 6513.581 #> 7768   562.93032185 6132.964 #> 7769   636.00759203 6283.801 #> 7770   447.12812884 6390.702 #> 7771   369.53520371 6579.694 #> 7772   185.51330152 6443.016 #> 7773   410.26657646 6316.834 #> 7774   260.10564147 6363.010 #> 7775   239.26236871 6345.847 #> 7776   111.03280043 6521.480 #> 7777   259.82427995 6428.797 #> 7778   166.98420915 6385.200 #> 7779   635.85835619 6281.457 #> 7780   407.75635703 6616.319 #> 7781   895.68736904 6409.380 #> 7782   672.61492172 6469.446 #> 7783   560.55019538 6538.528 #> 7784   522.88230436 6393.114 #> 7785   409.87995720 6394.293 #> 7786   259.46832904 6548.617 #> 7787   820.86429932 6329.587 #> 7788   896.66740203 6373.837 #> 7789   296.42780770 6581.842 #> 7790   222.67660442 6587.946 #> 7791   670.60937977 6356.236 #> 7792   223.37458165 6548.251 #> 7793   111.84390190 6409.998 #> 7794    73.88246635 6600.137 #> 7795   110.94229951 6372.258 #> 7796   297.61502201 6695.521 #> 7797   148.49769261 6629.979 #> 7798   559.15755855 6390.232 #> 7799   818.96542682 6442.053 #> 7800   111.22612922 6595.410 #> 7801   223.02249260 6588.746 #> 7802   450.43565512 6242.280 #> 7803    38.39823271 6606.848 #> 7804   296.10275595 6618.033 #> 7805   894.16560839 6447.269 #> 7806   707.81782277 6284.039 #> 7807   795.06245632 6472.451 #> 7808    42.47359542 6902.503 #> 7809   521.04439041 6467.388 #> 7810   239.48381044 6344.519 #> 7811   297.11650457 6507.349 #> 7812   261.11384922 6586.820 #> 7813   708.63823010 6249.003 #> 7814   782.75379935 6361.826 #> 7815   523.97336145 6355.638 #> 7816   410.42639702 6320.124 #> 7817    71.42979926 6676.015 #> 7818   672.70101665 6209.547 #> 7819   562.62220867 6168.704 #> 7820   634.00175717 6504.335 #> 7821    76.21187432 6638.832 #> 7822   490.82218706 6060.677 #> 7823   743.48828076 6360.304 #> 7824   373.47032289 6283.773 #> 7825   334.92966281 6396.755 #> 7826   895.61267690 6370.966 #> 7827   557.93921076 6502.427 #> 7828   559.67127735 6466.584 #> 7829   259.23566282 6582.582 #> 7830   483.60952359 6577.492 #> 7831   856.10573522 6446.866 #> 7832   275.69128934 6380.755 #> 7833   333.47544258 6433.767 #> 7834   409.36007573 6615.416 #> 7835   372.37410531 6578.666 #> 7836   745.15183842 6322.450 #> 7837   188.53575525 6699.933 #> 7838   490.47692934 6059.558 #> 7839   185.07267539 6551.879 #> 7840   783.41698224 6328.442 #> 7841   371.78663064 6469.913 #> 7842   784.71461706 6289.882 #> 7843   333.78084669 6579.219 #> 7844   261.40712805 6511.208 #> 7845   334.12622029 6508.592 #> 7846   408.57161555 6575.822 #> 7847   260.63670969 6623.019 #> 7848   333.62748315 6432.419 #> 7849   372.92799531 6356.017 #> 7850   371.32142188 6614.572 #> 7851   819.29162393 6440.080 #> 7852   561.53281901 6244.849 #> 7853   373.42622020 6320.096 #> 7854   201.78972072 6310.315 #> 7855   148.27043847 6632.084 #> 7856    56.24265106 6660.265 #> 7857   561.38518266 6396.056 #> 7858   598.77112569 6245.727 #> 7859   263.48463510 6695.889 #> 7860   372.59794265 6392.962 #> 7861   188.92816404 6701.906 #> 7862     0.47721217 6684.342 #> 7863   334.99147666 6653.876 #> 7864   259.18976157 6656.154 #> 7865   526.19433323 6206.682 #> 7866   373.06864453 6318.798 #> 7867   334.32397284 6691.823 #> 7868   557.64075070 6465.352 #> 7869   221.37572506 6402.120 #> 7870   261.43764205 6434.432 #> 7871   894.93855634 6447.721 #> 7872   335.20004640 6358.965 #> 7873   238.53784970 6380.409 #> 7874   637.00657951 6172.209 #> 7875    75.82025096 6750.302 #> 7876   750.60713364 6471.960 #> 7877   599.57353771 6132.076 #> 7878   110.81863346 6521.326 #> 7879    95.17772501 6690.934 #> 7880   482.77732393 6541.703 #> 7881   670.73584706 6432.475 #> 7882   794.75357147 6471.790 #> 7883   410.98223327 6317.125 #> 7884   334.05612864 6617.529 #> 7885   485.33624498 6427.459 #> 7886   597.91070705 6244.855 #> 7887   561.37423656 6133.464 #> 7888   222.58120993 6401.750 #> 7889   411.94392923 6281.899 #> 7890    73.85142565 6752.757 #> 7891   258.57346055 6474.918 #> 7892   373.41668953 6690.515 #> 7893   483.39868171 6500.692 #> 7894   632.94144059 6428.534 #> 7895   204.76208455 6382.152 #> 7896   147.26202110 6517.697 #> 7897   148.45221118 6591.242 #> 7898    54.93113803 6621.227 #> 7899   596.94714265 6354.884 #> 7900   410.66985490 6319.442 #> 7901   148.02197422 6553.686 #> 7902   600.58391579 6133.476 #> 7903    93.99726073 6653.998 #> 7904   258.82298182 6436.091 #> 7905   330.85647326 6654.271 #> 7906   446.46417293 6468.043 #> 7907   412.15794916 6542.234 #> 7908   203.78285612 6344.515 #> 7909    75.89142516 6752.406 #> 7910   224.44475796 6365.575 #> 7911   147.89034862 6706.722 #> 7912   635.99256954 6283.318 #> 7913   186.01475745 6478.530 #> 7914   409.74056628 6615.232 #> 7915   564.65006232 6246.465 #> 7916   206.20892206 6421.482 #> 7917   748.97527445 6472.709 #> 7918    41.88127527 6866.291 #> 7919   446.68652751 6428.291 #> 7920   222.78293205 6551.702 #> 7921   745.49553396 6400.434 #> 7922   670.69344066 6357.937 #> 7923   246.42558336 6307.599 #> 7924   244.72098097 6380.053 #> 7925   185.10977746 6477.042 #> 7926   296.34659414 6581.753 #> 7927   523.11726781 6429.537 #> 7928   520.34661122 6503.713 #> 7929   635.76488947 6507.571 #> 7930   635.85881219 6244.699 #> 7931   709.58152223 6322.236 #> 7932   151.02505942 6441.957 #> 7933   521.81034875 6390.619 #> 7934   492.55295178 6059.189 #> 7935   561.80340478 6316.919 #> 7936    36.77060189 6642.126 #> 7937   636.17826304 6207.248 #> 7938   857.75138519 6410.738 #> 7939   407.54506171 6463.342 #> 7940   445.64067943 6504.096 #> 7941   -67.79991626 6913.298 #> 7942   147.97697398 6408.741 #> 7943    43.17143427 6792.455 #> 7944   297.18253762 6691.713 #> 7945    79.05582602 6787.694 #> 7946   559.08470482 6464.966 #> 7947   526.25505761 6244.214 #> 7948   519.26493395 6504.892 #> 7949   745.22417833 6399.320 #> 7950   185.28512486 6590.379 #> 7951   202.78926832 6311.022 #> 7952    37.07411938 6755.426 #> 7953   595.41002540 6539.869 #> 7954   489.99868677 6093.444 #> 7955   563.71749053 6243.040 #> 7956   297.04229251 6432.804 #> 7957   636.61542949 6209.250 #> 7958   149.81990669 6779.609 #> 7959   147.93857156 6742.786 #> 7960   148.69912058 6631.926 #> 7961   333.19832653 6654.130 #> 7962   783.16290925 6366.047 #> 7963   819.67276717 6402.119 #> 7964    41.55996244 6827.455 #> 7965   410.12182703 6580.736 #> 7966   557.32680324 6573.023 #> 7967   111.84737327 6748.738 #> 7968   258.39447505 6475.138 #> 7969   558.13159091 6464.006 #> 7970   408.88911352 6616.927 #> 7971   376.29920743 6691.216 #> 7972   184.78187896 6518.255 #> 7973   115.94269809 6783.733 #> 7974   559.97821984 6204.827 #> 7975   335.38921424 6469.254 #> 7976     0.37527873 6724.680 #> 7977   482.50222565 6501.400 #> 7978   486.64994626 6282.074 #> 7979   371.33257651 6544.711 #> 7980   594.82699348 6391.843 #> 7981   259.50602195 6437.795 #> 7982     2.57370662 6759.101 #> 7983    74.39671098 6637.789 #> 7984   523.41135528 6390.628 #> 7985   896.58189162 6409.729 #> 7986   748.26275322 6467.490 #> 7987   483.14176327 6577.597 #> 7988    94.22871121 6654.561 #> 7989   560.55015175 6392.109 #> 7990   672.69184566 6359.378 #> 7991   296.37615954 6324.578 #> 7992   256.33515833 6510.536 #> 7993   520.31393358 6578.635 #> 7994   636.02063972 6244.147 #> 7995   708.90771839 6357.777 #> 7996   633.11948328 6394.756 #> 7997   483.05685308 6501.766 #> 7998   896.21214414 6410.738 #> 7999   523.31122798 6132.299 #> 8000   745.06671817 6288.382 #> 8001   525.51481044 6240.857 #> 8002   670.82773796 6244.641 #> 8003   221.26514605 6662.011 #> 8004   296.79366518 6360.593 #> 8005   201.37957275 6382.860 #> 8006   222.75196952 6623.203 #> 8007   634.37067684 6205.997 #> 8008   822.56537481 6294.070 #> 8009     1.73061909 6761.460 #> 8010   411.88266069 6246.083 #> 8011    35.77552181 6719.033 #> 8012   333.86263090 6579.225 #> 8013     0.90266599 6722.557 #> 8014   564.46457621 6392.467 #> 8015   526.16487554 6094.556 #> 8016   597.75256047 6242.800 #> 8017   147.56384239 6518.519 #> 8018     3.53016077 6760.399 #> 8019   747.34230554 6249.726 #> 8020   523.73023224 6316.965 #> 8021   411.83039813 6281.718 #> 8022   183.80325097 6479.195 #> 8023    38.15716558 6716.474 #> 8024    75.79498953 6752.675 #> 8025   297.03192558 6468.559 #> 8026   556.71798538 6576.360 #> 8027   671.08762200 6357.751 #> 8028   148.99630345 6665.147 #> 8029   236.92536012 6382.924 #> 8030   149.64578564 6740.092 #> 8031   596.45397992 6539.030 #> 8032   376.77270569 6691.298 #> 8033    75.42999545 6676.832 #> 8034   491.49284111 6093.124 #> 8035   747.39860676 6249.419 #> 8036   293.30794345 6620.101 #> 8037   260.90767470 6693.217 #> 8038   520.66066492 6575.751 #> 8039   520.26032979 6500.901 #> 8040   783.22857623 6328.800 #> 8041   601.76000310 6136.135 #> 8042   201.90651201 6417.990 #> 8043   633.76085716 6467.641 #> 8044   259.76125702 6396.057 #> 8045   448.62957489 6607.872 #> 8046   113.24503511 6633.063 #> 8047   298.48936025 6506.416 #> 8048   260.15788518 6511.852 #> 8049   558.63346495 6540.973 #> 8050    74.40442583 6639.855 #> 8051   632.82961232 6432.621 #> 8052   896.26590313 6409.381 #> 8053   445.97712374 6468.085 #> 8054   524.00176972 6316.342 #> 8055    57.51920044 6697.164 #> 8056    -2.29463748 6611.522 #> 8057   372.29023112 6354.886 #> 8058   635.91704233 6207.276 #> 8059   895.95790478 6371.676 #> 8060   708.70481034 6362.933 #> 8061   789.62856226 6463.105 #> 8062   708.79749362 6322.902 #> 8063   672.28789395 6397.407 #> 8064   708.80830123 6395.580 #> 8065   184.93493067 6554.250 #> 8066   371.68059067 6431.794 #> 8067   523.47483435 6393.468 #> 8068   247.73528659 6380.516 #> 8069   204.66658513 6347.721 #> 8070   221.05952536 6362.920 #> 8071   222.90011924 6661.291 #> 8072    19.80637765 6663.824 #> 8073   483.27064644 6467.861 #> 8074   166.23272237 6423.239 #> 8075   482.22731827 6502.198 #> 8076   258.93640558 6361.422 #> 8077    53.39404210 6620.000 #> 8078   445.63626476 6611.845 #> 8079   149.74488405 6778.086 #> 8080   446.18419245 6575.697 #> 8081   371.22816392 6507.246 #> 8082    36.93770324 6604.959 #> 8083   485.55485516 6355.575 #> 8084   259.38427512 6473.936 #> 8085   710.13951036 6284.063 #> 8086   636.43618881 6172.135 #> 8087   408.40522977 6579.540 #> 8088   707.11737607 6398.298 #> 8089   297.47812001 6322.112 #> 8090   670.36574426 6394.300 #> 8091   635.52277742 6172.629 #> 8092   827.83061837 6295.271 #> 8093   519.55824146 6465.948 #> 8094   482.66848261 6541.764 #> 8095   258.19675235 6471.299 #> 8096   485.16156750 6429.779 #> 8097   148.53938329 6408.295 #> 8098   448.55329980 6318.188 #> 8099   333.36823299 6616.019 #> 8100     1.77188207 6759.831 #> 8101   447.96027799 6606.989 #> 8102    75.09478257 6675.635 #> 8103   295.82195059 6615.890 #> 8104   152.07685106 6704.851 #> 8105   222.31418701 6326.882 #> 8106   486.43828464 6318.595 #> 8107    42.82726984 6792.248 #> 8108    14.18519220 6699.983 #> 8109   110.57559959 6557.885 #> 8110   857.21176474 6369.315 #> 8111   522.55960402 6390.129 #> 8112   264.90982795 6696.341 #> 8113    41.72440068 6865.557 #> 8114   855.61331313 6368.108 #> 8115   408.30494588 6505.096 #> 8116   335.88280334 6321.985 #> 8117   334.21861074 6584.836 #> 8118   111.66830975 6673.378 #> 8119   672.48346927 6465.695 #> 8120   332.51884696 6357.012 #> 8121   223.74039388 6362.897 #> 8122   185.54551915 6554.729 #> 8123   783.81466481 6289.687 #> 8124   409.08626740 6503.156 #> 8125   560.10360064 6428.077 #> 8126   633.17151875 6395.278 #> 8127   560.01112254 6353.525 #> 8128   709.61849127 6357.861 #> 8129   221.96664419 6325.345 #> 8130   259.23727790 6584.052 #> 8131   522.99630474 6314.659 #> 8132    79.38481167 6787.733 #> 8133   279.37217823 6418.673 #> 8134   258.75722481 6660.982 #> 8135   261.80058964 6697.291 #> 8136   818.71691953 6441.079 #> 8137   558.90826438 6316.408 #> 8138   490.25356992 6057.027 #> 8139   222.96680996 6363.820 #> 8140   446.75894408 6607.716 #> 8141   561.98289971 6241.534 #> 8142   447.14883826 6539.989 #> 8143   556.86392575 6575.852 #> 8144   167.85059931 6344.904 #> 8145   633.75605484 6470.284 #> 8146   450.18234256 6168.449 #> 8147   561.24791810 6354.801 #> 8148   372.89289336 6320.205 #> 8149   748.37990650 6251.233 #> 8150   148.65985099 6594.073 #> 8151   -32.50433240 6802.245 #> 8152   489.87152746 6066.168 #> 8153   484.11052528 6577.982 #> 8154   491.58987129 6061.380 #> 8155   113.33063157 6782.179 #> 8156   240.66711713 6343.935 #> 8157   856.56678570 6410.017 #> 8158   715.30612974 6249.782 #> 8159    41.05378001 6795.316 #> 8160   788.43686506 6370.058 #> 8161     6.03881909 6797.025 #> 8162   445.94173044 6468.364 #> 8163   407.86589572 6578.420 #> 8164   -65.82062575 6919.636 #> 8165   334.23906631 6544.211 #> 8166   521.58101893 6467.097 #> 8167    78.12676155 6787.117 #> 8168   280.73385468 6343.403 #> 8169   818.38149158 6480.212 #> 8170   596.04359843 6503.037 #> 8171    38.23375640 6757.170 #> 8172   744.86672487 6360.676 #> 8173   110.54283820 6560.617 #> 8174   561.28451043 6244.920 #> 8175   632.83308554 6432.020 #> 8176   278.01063000 6307.024 #> 8177   222.46128262 6478.175 #> 8178   714.15082104 6400.080 #> 8179   205.01760080 6347.827 #> 8180   150.38785257 6707.509 #> 8181    74.40450713 6677.076 #> 8182     4.36330505 6910.355 #> 8183   187.02293787 6665.917 #> 8184   519.20634538 6501.608 #> 8185   110.18354815 6707.792 #> 8186   185.45832655 6628.629 #> 8187   633.08993069 6432.475 #> 8188   522.65621291 6393.551 #> 8189   222.48828164 6326.561 #> 8190   259.70697624 6396.835 #> 8191   372.63050002 6358.519 #> 8192   111.04519206 6748.575 #> 8193     2.09353676 6761.052 #> 8194   519.65930127 6541.385 #> 8195   707.85248597 6434.938 #> 8196   281.10829699 6342.459 #> 8197   491.92523057 6057.177 #> 8198   373.96621037 6356.784 #> 8199   600.35749799 6134.504 #> 8200   224.06413026 6324.886 #> 8201   147.98645548 6592.283 #> 8202   371.60841026 6503.544 #> 8203   372.79286560 6279.680 #> 8204   636.94111951 6172.469 #> 8205   152.72478235 6777.880 #> 8206   599.18840042 6280.539 #> 8207   557.35055827 6427.608 #> 8208   632.97705337 6467.020 #> 8209   448.02529754 6283.201 #> 8210   486.57078609 6278.389 #> 8211   258.73639871 6360.763 #> 8212   185.08868712 6480.329 #> 8213   562.25592103 6173.776 #> 8214   148.30657489 6481.628 #> 8215   148.51792089 6443.662 #> 8216   202.76202455 6344.684 #> 8217   333.49723839 6471.251 #> 8218   -71.96677304 6731.922 #> 8219   296.14634543 6655.153 #> 8220   411.52787004 6320.704 #> 8221   446.91071170 6502.166 #> 8222   708.62844824 6359.053 #> 8223   673.19408685 6467.970 #> 8224   185.90920106 6625.834 #> 8225   224.46171873 6365.728 #> 8226   409.70357554 6428.163 #> 8227   822.13282990 6293.518 #> 8228   446.46349431 6538.521 #> 8229   371.50868391 6466.022 #> 8230   276.19394250 6378.850 #> 8231   522.87891691 6429.156 #> 8232    60.24133407 6660.348 #> 8233   599.71857835 6168.730 #> 8234   485.13223703 6393.427 #> 8235   561.09912278 6317.947 #> 8236   558.58108117 6503.656 #> 8237   516.24106911 6537.525 #> 8238   594.70806461 6539.493 #> 8239   109.99864728 6446.647 #> 8240   373.22474415 6467.899 #> 8241   186.02029174 6331.611 #> 8242   259.99428806 6435.241 #> 8243   259.38577487 6548.678 #> 8244   412.72243845 6317.989 #> 8245   557.96946535 6539.134 #> 8246   334.36208053 6430.642 #> 8247   221.80990375 6698.528 #> 8248   258.90296372 6360.179 #> 8249   558.91852274 6217.669 #> 8250   564.17966199 6358.576 #> 8251   672.89125618 6470.658 #> 8252   201.19968563 6308.346 #> 8253   184.96248310 6514.651 #> 8254   596.58228582 6432.588 #> 8255   709.73474306 6283.571 #> 8256   556.68975878 6504.025 #> 8257    14.01456658 6698.152 #> 8258   149.55557406 6404.606 #> 8259   447.24030706 6579.093 #> 8260   372.56858242 6392.542 #> 8261   525.46599715 6242.502 #> 8262   224.48002047 6364.764 #> 8263   557.86592294 6502.204 #> 8264   110.45105651 6747.515 #> 8265   222.38350592 6439.570 #> 8266   819.92764498 6405.101 #> 8267   297.07401676 6509.761 #> 8268   783.83159890 6365.340 #> 8269   819.83550261 6291.773 #> 8270   447.13360702 6503.323 #> 8271   261.55282396 6693.851 #> 8272   485.82358438 6353.222 #> 8273   223.43569113 6514.860 #> 8274   334.02429112 6578.206 #> 8275   670.57741207 6434.076 #> 8276   749.13581996 6251.225 #> 8277   372.78535870 6284.961 #> 8278   222.96978618 6510.801 #> 8279   595.44156425 6390.691 #> 8280   373.22466484 6282.093 #> 8281   238.85593524 6342.709 #> 8282   261.14217012 6659.757 #> 8283   559.89320200 6244.682 #> 8284   637.30721003 6247.048 #> 8285     2.09177236 6761.865 #> 8286   595.32973685 6501.871 #> 8287   558.68024335 6317.275 #> 8288   376.78320720 6691.184 #> 8289   783.13452593 6438.481 #> 8290   224.21798347 6698.731 #> 8291   113.23614429 6634.347 #> 8292   372.50858030 6317.587 #> 8293   148.39687879 6369.916 #> 8294   371.85685152 6544.100 #> 8295   239.47370878 6345.231 #> 8296   895.11820647 6371.544 #> 8297   168.05038059 6345.247 #> 8298   147.33515195 6518.692 #> 8299   147.92482008 6371.185 #> 8300   373.39484769 6319.128 #> 8301   745.51506356 6288.761 #> 8302   557.69648419 6464.626 #> 8303   525.49115252 6244.497 #> 8304   819.20383237 6440.316 #> 8305   745.28753525 6325.683 #> 8306   594.91132203 6540.204 #> 8307   335.50998300 6396.859 #> 8308   335.05183197 6319.328 #> 8309   709.32777547 6398.823 #> 8310    23.19177381 6699.967 #> 8311   334.40856520 6470.751 #> 8312   222.68880490 6622.612 #> 8313   597.87480402 6538.589 #> 8314   521.50157044 6467.495 #> 8315   274.65020352 6377.689 #> 8316   296.90768578 6508.947 #> 8317   408.55630274 6504.363 #> 8318   410.64984640 6428.763 #> 8319   147.79950890 6778.061 #> 8320   818.79000814 6471.634 #> 8321   745.00542213 6435.048 #> 8322   147.37142451 6519.885 #> 8323   594.53571097 6467.847 #> 8324   223.64783236 6401.220 #> 8325   225.49841781 6586.395 #> 8326    73.42333691 6639.218 #> 8327   238.45462215 6307.628 #> 8328    73.07324898 6454.358 #> 8329   221.54692927 6699.797 #> 8330   670.70227365 6394.424 #> 8331   671.65955217 6247.032 #> 8332   600.28075445 6134.559 #> 8333   856.70820023 6406.389 #> 8334     1.95421750 6760.094 #> 8335   894.91965670 6446.456 #> 8336   522.55202961 6430.523 #> 8337   223.08379044 6475.175 #> 8338   170.34716212 6342.337 #> 8339   857.73317617 6444.420 #> 8340   297.49977451 6395.717 #> 8341   528.07609305 6099.906 #> 8342   556.70529416 6574.886 #> 8343   672.35723965 6430.549 #> 8344   634.56293000 6315.968 #> 8345    35.53324961 6645.370 #> 8346   632.93344141 6433.781 #> 8347   819.20212575 6480.772 #> 8348   446.04332208 6578.798 #> 8349   411.61147733 6279.703 #> 8350   527.44059662 6241.932 #> 8351    19.43005510 6664.285 #> 8352   636.99231077 6207.994 #> 8353   333.70805946 6617.567 #> 8354   559.45317957 6390.425 #> 8355   446.53764349 6541.369 #> 8356   820.37348608 6367.274 #> 8357   334.27319463 6470.431 #> 8358   560.75318984 6130.562 #> 8359   708.77311709 6321.259 #> 8360   258.70507211 6583.715 #> 8361    59.13414645 6694.501 #> 8362   746.66571756 6399.748 #> 8363   296.44565041 6581.432 #> 8364   633.56820215 6428.536 #> 8365   710.46153135 6472.023 #> 8366   781.17599400 6399.906 #> 8367   600.28739800 6134.239 #> 8368   373.30195997 6395.972 #> 8369   299.35093975 6582.851 #> 8370   111.90864598 6521.819 #> 8371   333.86455672 6616.392 #> 8372   274.95316532 6380.642 #> 8373   409.01915238 6467.737 #> 8374   564.57556390 6131.077 #> 8375   748.21835415 6471.766 #> 8376    38.76257205 6677.886 #> 8377   709.39516253 6283.531 #> 8378   487.32100590 6241.900 #> 8379   372.61968114 6616.516 #> 8380   222.00447823 6331.511 #> 8381   525.46040192 6168.147 #> 8382   745.50863165 6362.283 #> 8383   784.34145428 6438.493 #> 8384   410.04669804 6465.902 #> 8385   334.18689492 6657.722 #> 8386   186.23606084 6627.496 #> 8387   333.58577311 6653.406 #> 8388   635.26938359 6172.683 #> 8389   448.23985006 6316.337 #> 8390   148.33374729 6590.892 #> 8391   183.50703589 6404.000 #> 8392   223.02878015 6325.895 #> 8393   636.01800496 6283.801 #> 8394   856.40833621 6442.487 #> 8395   297.86916842 6473.360 #> 8396   446.45383839 6539.189 #> 8397   145.50589715 6445.461 #> 8398   409.32753177 6468.183 #> 8399   373.26154264 6317.948 #> 8400   447.46498120 6356.542 #> 8401  -104.98146365 6890.985 #> 8402   671.48388247 6396.826 #> 8403   561.96222003 6245.800 #> 8404   187.73397672 6703.418 #> 8405   637.36508265 6172.256 #> 8406   372.51025797 6469.957 #> 8407   486.11934838 6390.533 #> 8408   148.66253792 6704.433 #> 8409   336.43744506 6284.820 #> 8410   334.16651734 6581.998 #> 8411   -70.15966881 6884.603 #> 8412   297.00809248 6581.254 #> 8413   278.36902789 6414.302 #> 8414    37.54226377 6682.433 #> 8415   278.20857891 6417.194 #> 8416   708.20564312 6323.684 #> 8417   259.27117846 6545.008 #> 8418   222.89045811 6477.067 #> 8419   296.51060596 6356.875 #> 8420   708.69034738 6395.572 #> 8421   147.82043445 6553.205 #> 8422   412.06787627 6281.847 #> 8423   746.10013340 6468.059 #> 8424   596.09041253 6391.479 #> 8425   -32.46206255 6841.851 #> 8426   520.27041862 6467.408 #> 8427   672.62109852 6360.055 #> 8428   487.70721089 6281.182 #> 8429   202.17573725 6384.484 #> 8430   898.17816325 6372.455 #> 8431   147.47040626 6517.993 #> 8432   112.25683733 6636.464 #> 8433    53.85888509 6623.990 #> 8434   111.66576484 6747.499 #> 8435   526.01469078 6244.197 #> 8436    76.63392570 6751.189 #> 8437   820.87146959 6366.923 #> 8438   631.02233808 6504.114 #> 8439   708.19162587 6395.504 #> 8440   559.40080566 6390.008 #> 8441   409.23669517 6539.309 #> 8442   670.47488132 6392.760 #> 8443   599.40587615 6280.600 #> 8444   260.88378526 6326.423 #> 8445   593.94863336 6469.132 #> 8446   450.45833862 6096.179 #> 8447   446.73777337 6427.877 #> 8448   558.84672810 6467.171 #> 8449   413.59780716 6245.671 #> 8450   783.61672542 6326.327 #> 8451   239.86226450 6342.553 #> 8452   259.76966963 6623.299 #> 8453   297.29566593 6692.769 #> 8454   297.02329697 6434.653 #> 8455   222.10313843 6475.742 #> 8456   856.97404439 6370.281 #> 8457   557.46144430 6539.127 #> 8458   445.99536016 6576.070 #> 8459   185.19019031 6628.181 #> 8460   709.15867971 6397.866 #> 8461   279.88125496 6304.063 #> 8462   165.31251768 6312.268 #> 8463    73.96074316 6675.254 #> 8464   112.70379781 6783.258 #> 8465   671.80653494 6322.298 #> 8466   262.57252161 6696.295 #> 8467    57.92024987 6657.740 #> 8468   185.65006804 6439.743 #> 8469   -68.59029553 6808.739 #> 8470   334.53840416 6433.622 #> 8471   783.89492432 6439.248 #> 8472   564.33428835 6134.134 #> 8473   782.39353777 6437.796 #> 8474   -29.68303487 6916.284 #> 8475   560.77386238 6279.114 #> 8476   372.71701837 6578.312 #> 8477   222.96543700 6697.927 #> 8478   852.62478851 6396.751 #> 8479   595.97885959 6465.995 #> 8480    74.82386563 6676.026 #> 8481   820.52970303 6330.315 #> 8482   671.97007471 6209.072 #> 8483   782.65751135 6440.971 #> 8484   410.72097331 6357.072 #> 8485   408.40266335 6579.904 #> 8486   637.41792496 6247.067 #> 8487   566.64602224 6203.245 #> 8488   373.63654346 6394.805 #> 8489   564.08650960 6133.028 #> 8490   782.80812428 6439.777 #> 8491   560.49058864 6242.058 #> 8492   405.88752612 6615.411 #> 8493   670.52927771 6396.795 #> 8494   147.95013276 6592.827 #> 8495   856.18039733 6442.974 #> 8496   334.32497986 6433.625 #> 8497   486.86756092 6278.780 #> 8498   486.98522220 6281.532 #> 8499   184.18317002 6590.429 #> 8500   744.75831379 6435.848 #> 8501   -33.33776090 6916.360 #> 8502   410.04012460 6355.758 #> 8503   594.35003968 6539.227 #> 8504   110.71286924 6708.397 #> 8505   145.93158698 6444.696 #> 8506   527.23349708 6100.812 #> 8507   186.88345854 6629.244 #> 8508   284.06173527 6342.089 #> 8509   596.59238491 6426.058 #> 8510   709.01432741 6249.049 #> 8511   560.56026114 6282.318 #> 8512   600.07685328 6207.774 #> 8513   560.05099614 6243.839 #> 8514   708.31237219 6246.338 #> 8515   484.82972316 6429.227 #> 8516   185.75306553 6402.470 #> 8517   522.80816410 6430.367 #> 8518   170.16960065 6342.399 #> 8519   896.12036293 6409.901 #> 8520   110.65203087 6558.936 #> 8521   709.05454259 6325.597 #> 8522    76.14097657 6788.325 #> 8523   523.14071856 6393.290 #> 8524   708.70952108 6283.583 #> 8525   634.99902999 6285.018 #> 8526   409.53113582 6428.646 #> 8527   110.36463138 6747.732 #> 8528   222.45349213 6325.587 #> 8529   896.20288387 6409.710 #> 8530   148.46899645 6592.313 #> 8531   222.38485612 6325.200 #> 8532   598.63808105 6245.065 #> 8533   370.69269335 6430.507 #> 8534   -34.86790385 6764.526 #> 8535   633.29643640 6505.109 #> 8536   598.90212002 6246.555 #> 8537   558.02037515 6540.824 #> 8538   635.46020707 6502.156 #> 8539   594.82452254 6539.830 #> 8540     2.99819280 6873.389 #> 8541   259.25268695 6696.411 #> 8542   112.58581188 6783.009 #> 8543    -4.66328724 6353.131 #> 8544   109.73421919 6410.437 #> 8545   634.33544041 6357.772 #> 8546   896.72854694 6376.214 #> 8547   147.82577703 6483.343 #> 8548   237.79734961 6345.214 #> 8549   482.56468303 6504.200 #> 8550     2.07335756 6838.260 #> 8551   670.90676868 6358.040 #> 8552   220.61037005 6623.477 #> 8553    36.92056864 6531.253 #> 8554   186.46784601 6330.012 #> 8555   373.35027906 6690.480 #> 8556     3.20098160 6907.668 #> 8557   447.32116112 6390.997 #> 8558   705.67698203 6247.019 #> 8559   448.54761375 6281.432 #> 8560   296.96043020 6433.418 #> 8561   187.22485366 6702.673 #> 8562   112.06584534 6671.752 #> 8563   600.45984412 6209.274 #> 8564   782.73263035 6324.999 #> 8565   671.53544006 6360.039 #> 8566   165.59063831 6387.250 #> 8567     5.17593384 6910.641 #> 8568   259.90562629 6546.726 #> 8569   594.83647104 6538.881 #> 8570   702.68958231 6458.183 #> 8571   371.73772620 6691.172 #> 8572     4.10802170 6796.987 #> 8573   672.31226147 6285.797 #> 8574   223.19618577 6623.228 #> 8575   636.81912399 6280.722 #> 8576   636.19623087 6280.894 #> 8577   525.53668706 6202.211 #> 8578   371.74236358 6395.767 #> 8579   671.22727570 6392.607 #> 8580   633.53096232 6508.319 #> 8581   708.93890907 6432.395 #> 8582    92.76185287 6654.370 #> 8583   744.29294069 6400.338 #> 8584   445.67757072 6578.759 #> 8585   168.05634862 6424.992 #> 8586   205.53499328 6419.667 #> 8587   275.39699347 6380.080 #> 8588   856.97970921 6334.027 #> 8589   110.06353511 6707.287 #> 8590   239.41526061 6345.457 #> 8591   258.58949134 6507.569 #> 8592   522.80617495 6429.371 #> 8593   824.96967231 6295.819 #> 8594   222.41055617 6325.402 #> 8595   186.84665721 6329.667 #> 8596   372.94528201 6395.919 #> 8597   600.25778231 6134.928 #> 8598    58.56299906 6657.088 #> 8599   782.46684515 6439.982 #> 8600   635.21434463 6285.166 #> 8601   410.92843982 6317.026 #> 8602   594.74086105 6538.606 #> 8603   258.94784118 6547.896 #> 8604   110.64065307 6746.381 #> 8605   557.80523939 6539.505 #> 8606   224.17693513 6623.862 #> 8607   298.41816676 6545.662 #> 8608   296.47638006 6621.487 #> 8609   447.01996688 6393.061 #> 8610   -34.63886467 6689.277 #> 8611   185.69175053 6588.252 #> 8612   111.77819060 6749.103 #> 8613   483.11445564 6467.881 #> 8614   490.54546480 6060.269 #> 8615   597.37376394 6390.768 #> 8616    98.70281351 6693.323 #> 8617    78.07753430 6787.390 #> 8618   184.94398237 6515.621 #> 8619   151.27473770 6336.673 #> 8620   562.92452080 6137.063 #> 8621   257.64581307 6324.134 #> 8622   483.49991718 6464.465 #> 8623   482.56705182 6538.774 #> 8624    41.04807742 6791.581 #> 8625   634.76466865 6356.003 #> 8626   222.37620055 6511.663 #> 8627   370.91759389 6577.939 #> 8628   411.71458654 6283.120 #> 8629   409.27461862 6503.641 #> 8630   564.46601388 6320.893 #> 8631   -30.53011632 6915.715 #> 8632   598.62180157 6244.433 #> 8633   222.79038396 6474.931 #> 8634   110.25409620 6671.683 #> 8635   148.50179890 6742.064 #> 8636    78.63091063 6787.829 #> 8637   335.42168796 6396.157 #> 8638   635.68470550 6172.562 #> 8639   524.69174723 6278.277 #> 8640   222.91680789 6364.766 #> 8641   222.17169200 6436.720 #> 8642   486.45783044 6316.954 #> 8643   596.30472237 6428.047 #> 8644   673.09528472 6245.579 #> 8645   259.04807813 6583.402 #> 8646   519.23151573 6578.200 #> 8647   371.64748136 6506.522 #> 8648    74.39401229 6640.016 #> 8649   671.48334984 6471.233 #> 8650   222.35070740 6551.464 #> 8651    42.10411598 6867.345 #> 8652   522.37023144 6430.385 #> 8653   295.82914798 6620.857 #> 8654   276.12288115 6377.079 #> 8655   -17.38669295 6709.930 #> 8656   112.17243832 6749.757 #> 8657   522.82981112 6393.961 #> 8658   783.39295661 6438.842 #> 8659   782.55848225 6324.378 #> 8660   297.36692323 6320.621 #> 8661   409.33509468 6432.044 #> 8662   260.24601457 6399.544 #> 8663    20.18470279 6662.842 #> 8664     2.80510763 6835.836 #> 8665   528.96246294 6133.668 #> 8666   559.55860865 6315.219 #> 8667   794.66932794 6473.379 #> 8668   559.23779278 6393.515 #> 8669   261.34948728 6286.207 #> 8670   784.18963579 6290.424 #> 8671   487.57401027 6207.452 #> 8672    37.50578369 6711.752 #> 8673   296.79834887 6542.899 #> 8674   560.58893777 6210.516 #> 8675   668.89389455 6432.788 #> 8676    92.85828719 6654.434 #> 8677   709.71225091 6286.246 #> 8678   447.49079735 6608.903 #> 8679   450.09962976 6245.378 #> 8680   748.86768564 6472.228 #> 8681   707.91952461 6432.083 #> 8682   113.45859509 6668.814 #> 8683   482.83578676 6542.961 #> 8684   559.23597237 6354.313 #> 8685   562.06931927 6172.271 #> 8686   114.36980737 6784.342 #> 8687   186.85020978 6328.779 #> 8688   709.09819215 6396.645 #> 8689   485.79110187 6281.556 #> 8690   372.07803556 6469.634 #> 8691   145.78528354 6554.672 #> 8692   277.52459196 6306.883 #> 8693   184.28584875 6405.842 #> 8694   184.97887987 6592.954 #> 8695   202.18409446 6384.122 #> 8696   709.54899283 6284.339 #> 8697   450.78974125 6093.337 #> 8698   526.02297317 6133.168 #> 8699   633.37182086 6432.498 #> 8700   112.56393969 6526.165 #> 8701   491.03728750 6096.673 #> 8702   408.75959510 6428.453 #> 8703   185.63357083 6626.279 #> 8704   276.77903867 6380.174 #> 8705   185.10249439 6592.273 #> 8706   297.26307893 6395.252 #> 8707   856.52880629 6371.566 #> 8708   165.42158093 6314.043 #> 8709   372.52869646 6285.269 #> 8710   148.80956478 6669.658 #> 8711   634.38636809 6357.046 #> 8712   707.62161720 6432.810 #> 8713   333.83729385 6470.602 #> 8714   169.17471095 6385.597 #> 8715   371.82109450 6429.834 #> 8716   184.63420269 6588.601 #> 8717   560.30065363 6319.252 #> 8718   710.63204467 6287.440 #> 8719   333.88617990 6433.189 #> 8720   297.20974420 6359.049 #> 8721   258.95735605 6510.467 #> 8722   671.64890461 6326.231 #> 8723   186.29508586 6666.455 #> 8724   671.28406209 6430.720 #> 8725   822.01064259 6292.706 #> 8726   671.68115934 6321.420 #> 8727   634.60049512 6318.355 #> 8728   409.16952721 6468.188 #> 8729   334.39057827 6541.724 #> 8730   185.35868085 6588.854 #> 8731   446.35135256 6577.371 #> 8732    41.33392878 6827.691 #> 8733   184.53683324 6329.146 #> 8734   222.88852729 6627.123 #> 8735   596.21106066 6321.542 #> 8736   895.67570896 6409.743 #> 8737   410.41117691 6395.867 #> 8738   411.72360090 6615.195 #> 8739   373.29698797 6613.458 #> 8740   186.22222418 6550.633 #> 8741   744.63227690 6360.124 #> 8742   483.80001108 6465.075 #> 8743   822.24772106 6330.077 #> 8744   241.77226829 6421.130 #> 8745   300.19782078 6693.952 #> 8746   147.28675541 6520.473 #> 8747   522.70564854 6353.271 #> 8748   633.18959284 6433.492 #> 8749   445.06894971 6539.977 #> 8750   445.53778723 6575.523 #> 8751   410.16724949 6389.955 #> 8752   223.14675990 6474.483 #> 8753   487.00202962 6279.041 #> 8754   -30.05935483 6916.337 #> 8755    21.19360881 6662.511 #> 8756   223.49408567 6399.220 #> 8757   148.08969172 6629.387 #> 8758   856.52520095 6408.219 #> 8759    43.04462076 6903.205 #> 8760   407.46555004 6579.506 #> 8761   783.03827255 6439.051 #> 8762   451.40656835 6244.756 #> 8763   448.97552402 6282.150 #> 8764   490.49556324 6171.143 #> 8765   486.87448492 6319.410 #> 8766   298.37105803 6285.158 #> 8767   557.12324358 6575.002 #> 8768   486.83641825 6316.980 #> 8769   243.48637602 6420.788 #> 8770   185.39844431 6514.522 #> 8771   257.44468431 6400.610 #> 8772   746.24263605 6436.143 #> 8773   257.20706296 6359.069 #> 8774   488.37271456 6207.690 #> 8775   411.32681914 6280.717 #> 8776   599.03727599 6243.404 #> 8777   745.33917666 6401.205 #> 8778   711.16417229 6468.656 #> 8779   371.34320247 6318.582 #> 8780    73.72761689 6674.382 #> 8781   637.66534817 6394.184 #> 8782   372.01632739 6357.364 #> 8783   223.80568032 6293.685 #> 8784    72.88394869 6527.020 #> 8785   259.94420465 6587.293 #> 8786   294.97170194 6360.536 #> 8787   148.70303554 6671.667 #> 8788   223.44428024 6588.169 #> 8789   221.89047976 6440.033 #> 8790    36.38272323 6570.014 #> 8791   222.55569666 6290.269 #> 8792   820.98054064 6293.378 #> 8793   185.93412834 6369.833 #> 8794   707.94482159 6434.223 #> 8795   371.81107721 6317.155 #> 8796   298.54256238 6695.791 #> 8797   488.97996664 6130.730 #> 8798   820.13709760 6403.693 #> 8799   275.71297446 6380.724 #> 8800    74.26895725 6639.837 #> 8801   633.05852886 6504.274 #> 8802   185.62940433 6629.120 #> 8803   408.77148313 6505.695 #> 8804   111.08676165 6745.571 #> 8805   259.52132985 6398.640 #> 8806   372.06917689 6469.163 #> 8807   147.81292138 6443.024 #> 8808   296.95983312 6471.918 #> 8809   184.36457947 6476.848 #> 8810   527.48598412 6132.169 #> 8811   259.09460823 6322.416 #> 8812   222.19618772 6588.136 #> 8813  -106.47226174 6703.039 #> 8814   185.08775898 6516.932 #> 8815    -1.77544932 6873.863 #> 8816   519.89929009 6505.672 #> 8817   747.90226345 6251.071 #> 8818   486.58822579 6320.077 #> 8819   672.85482942 6210.863 #> 8820   636.30644525 6169.580 #> 8821   202.99777343 6343.205 #> 8822   336.06677177 6282.064 #> 8823   451.04524553 6243.761 #> 8824    39.10817893 6867.680 #> 8825   707.54252254 6321.824 #> 8826   483.00330629 6467.352 #> 8827   372.47418330 6317.754 #> 8828   524.85666400 6316.152 #> 8829   409.69024551 6614.782 #> 8830   744.84256748 6468.436 #> 8831   -68.90028805 6886.937 #> 8832   634.96489222 6281.521 #> 8833   332.41159578 6432.115 #> 8834   374.58751049 6396.601 #> 8835   598.21557772 6467.240 #> 8836   560.33179087 6540.207 #> 8837   259.47684514 6657.884 #> 8838   744.99993880 6362.966 #> 8839   223.02847478 6700.293 #> 8840   672.77239037 6210.833 #> 8841   407.98847240 6465.333 #> 8842    37.36951661 6712.981 #> 8843   561.55143504 6132.446 #> 8844   747.32618544 6288.036 #> 8845   187.71682981 6699.887 #> 8846    39.01687044 6830.353 #> 8847   409.42066622 6539.673 #> 8848   110.77690570 6597.826 #> 8849   447.83409142 6282.356 #> 8850   634.03484616 6395.106 #> 8851   819.61954051 6477.499 #> 8852   370.98390463 6614.469 #> 8853   597.15609368 6391.875 #> 8854   670.61730986 6434.277 #> 8855   373.60255414 6395.435 #> 8856   489.50512622 6133.567 #> 8857   280.31213979 6304.894 #> 8858   561.95562063 6209.085 #> 8859   241.09000372 6345.508 #> 8860   109.02841070 6708.528 #> 8861   708.57684493 6320.029 #> 8862   447.80041869 6391.139 #> 8863   222.10456313 6551.034 #> 8864   258.73362937 6586.496 #> 8865   297.42620255 6583.982 #> 8866   149.27411781 6744.697 #> 8867   822.71825065 6330.458 #> 8868   599.08236269 6281.784 #> 8869    42.20643714 6791.655 #> 8870   280.74215617 6341.363 #> 8871    95.16246796 6654.402 #> 8872   708.54246996 6325.138 #> 8873    76.31304840 6749.644 #> 8874   372.04946890 6616.609 #> 8875   369.95688852 6504.311 #> 8876   297.25204032 6584.103 #> 8877   -63.02103614 6920.989 #> 8878   184.83502361 6514.797 #> 8879   370.57317638 6506.795 #> 8880    51.80811951 6620.287 #> 8881   854.42575799 6406.078 #> 8882   635.24818116 6317.365 #> 8883   819.13650105 6405.083 #> 8884   450.14709340 6245.419 #> 8885   221.64726185 6515.160 #> 8886   595.28044581 6429.346 #> 8887   299.41847893 6284.839 #> 8888   258.87913423 6325.025 #> 8889   447.79634567 6356.097 #> 8890   296.55237327 6695.607 #> 8891   148.22295874 6631.929 #> 8892   634.49369291 6320.654 #> 8893   223.30208283 6625.790 #> 8894   371.33237755 6543.026 #> 8895   258.59303574 6474.597 #> 8896   486.86503800 6318.728 #> 8897   281.09034865 6340.948 #> 8898   296.90150154 6432.679 #> 8899   371.65732689 6691.055 #> 8900   335.61072307 6319.845 #> 8901   297.02732535 6542.861 #> 8902   260.51579673 6660.109 #> 8903   -31.17433917 6803.309 #> 8904   274.31831358 6378.551 #> 8905   599.03128278 6208.127 #> 8906   481.25974730 6502.237 #> 8907    93.67177931 6656.785 #> 8908   185.48708322 6625.442 #> 8909   334.70582272 6430.136 #> 8910   707.96097395 6394.967 #> 8911   183.05416896 6552.708 #> 8912   557.10697711 6579.480 #> 8913   560.34184340 6354.954 #> 8914   222.40925868 6549.807 #> 8915   484.10668593 6392.849 #> 8916   333.22527129 6432.098 #> 8917   596.73882184 6503.138 #> 8918   524.21299142 6318.674 #> 8919   110.31063670 6747.449 #> 8920   486.40505137 6317.534 #> 8921   298.00525484 6431.503 #> 8922   333.72141340 6578.345 #> 8923   148.37165221 6406.717 #> 8924   296.40107750 6655.806 #> 8925   744.19181838 6360.453 #> 8926   818.22801937 6480.945 #> 8927   298.15562218 6507.647 #> 8928   409.29823839 6539.821 #> 8929   142.01613697 6520.321 #> 8930   670.85296686 6210.785 #> 8931   485.83825898 6390.697 #> 8932   410.24104623 6431.204 #> 8933   484.99124088 6427.383 #> 8934   185.25419882 6549.823 #> 8935   148.78157620 6741.457 #> 8936   482.73928761 6540.907 #> 8937   520.24073972 6538.621 #> 8938   373.22533588 6281.953 #> 8939   371.55421682 6504.611 #> 8940   745.45160893 6288.628 #> 8941   522.77119072 6353.831 #> 8942   448.31958330 6318.932 #> 8943   783.29429043 6465.774 #> 8944   524.42116872 6280.835 #> 8945   297.08161677 6509.496 #> 8946   370.92253346 6613.638 #> 8947   295.66196879 6621.216 #> 8948   486.37498026 6280.786 #> 8949   110.97396704 6558.449 #> 8950   187.68753209 6475.793 #> 8951   109.62681076 6635.548 #> 8952   296.64840000 6544.177 #> 8953   147.63557085 6480.785 #> 8954    74.03907775 6599.695 #> 8955   373.34163997 6280.724 #> 8956   671.87859830 6467.936 #> 8957   296.67172488 6583.855 #> 8958   221.66050700 6511.410 #> 8959    80.26821649 6787.940 #> 8960   333.43719921 6653.890 #> 8961   257.68269960 6660.568 #> 8962   632.48505946 6429.516 #> 8963   224.59498683 6289.807 #> 8964   149.82109815 6554.972 #> 8965   258.99608427 6582.307 #> 8966   147.42708166 6446.106 #> 8967   260.83788130 6396.432 #> 8968   148.28168887 6632.011 #> 8969   561.05978162 6353.687 #> 8970   334.79057360 6395.982 #> 8971   635.63894336 6283.578 #> 8972   822.66966123 6330.401 #> 8973   411.06887149 6319.720 #> 8974   448.02969313 6279.344 #> 8975   298.17366007 6358.024 #> 8976   333.70775240 6656.381 #> 8977    18.47834571 6662.990 #> 8978   149.67050002 6706.637 #> 8979   275.84834747 6380.305 #> 8980   223.81231828 6365.641 #> 8981    41.80874112 6865.614 #> 8982   560.79966066 6390.355 #> 8983   371.41123619 6506.660 #> 8984   371.65486003 6464.605 #> 8985   147.72662652 6479.916 #> 8986     2.67932822 6688.258 #> 8987   335.06781499 6355.187 #> 8988   593.56414883 6467.596 #> 8989    37.60708403 6714.759 #> 8990   295.63489991 6620.825 #> 8991   409.40921506 6501.570 #> 8992   225.14257561 6661.328 #> 8993   783.28019349 6364.930 #> 8994   183.70788822 6439.913 #> 8995   635.53724396 6283.784 #> 8996   446.32530447 6428.383 #> 8997   185.93829022 6441.048 #> 8998   596.26338993 6465.429 #> 8999   895.25556310 6410.204 #> 9000   149.50608251 6556.075 #> 9001   521.19684311 6467.232 #> 9002   600.45568921 6209.318 #> 9003   701.77628705 6458.745 #> 9004   222.62522937 6439.227 #> 9005    38.70553421 6759.311 #> 9006   445.64561689 6464.845 #> 9007   239.85828063 6418.260 #> 9008   486.20810842 6354.742 #> 9009   782.69139513 6366.020 #> 9010   744.68866244 6435.834 #> 9011   894.37507064 6369.861 #> 9012   490.07060410 6059.194 #> 9013   638.03384171 6284.034 #> 9014    78.64829027 6750.638 #> 9015   185.64888503 6441.104 #> 9016   896.91702390 6409.986 #> 9017   239.13061915 6416.807 #> 9018   207.06698770 6308.022 #> 9019   446.20448943 6392.292 #> 9020   556.54506383 6576.237 #> 9021   186.38185921 6666.835 #> 9022   856.58262417 6406.791 #> 9023   557.73831019 6502.474 #> 9024    44.10076522 6828.818 #> 9025   147.73145994 6519.143 #> 9026   184.74856630 6403.719 #> 9027   185.58329289 6329.744 #> 9028   744.15091093 6364.805 #> 9029   148.85669449 6591.958 #> 9030   205.83669334 6422.362 #> 9031   446.08217876 6500.752 #> 9032   224.30626643 6291.959 #> 9033   409.12665375 6464.803 #> 9034   782.58639277 6363.058 #> 9035   487.62609739 6244.088 #> 9036   561.73720191 6281.496 #> 9037   181.93426066 6476.943 #> 9038   409.03889856 6579.034 #> 9039   372.46213287 6355.568 #> 9040    42.36472390 6866.580 #> 9041   -17.92314539 6668.617 #> 9042   745.86197337 6397.361 #> 9043   748.10729859 6250.330 #> 9044   111.12692287 6745.636 #> 9045   600.88135255 6207.545 #> 9046   560.20179573 6390.258 #> 9047   746.63301715 6250.198 #> 9048   486.54768675 6318.434 #> 9049   410.78383803 6316.944 #> 9050   185.21187758 6479.197 #> 9051   708.85923481 6359.117 #> 9052    35.64610820 6729.997 #> 9053   222.42534536 6399.492 #> 9054   372.21708871 6357.428 #> 9055    36.14499136 6718.087 #> 9056   519.77993748 6577.750 #> 9057   490.55842225 6057.826 #> 9058   524.51430830 6204.379 #> 9059   237.53825104 6307.873 #> 9060   446.48992588 6466.361 #> 9061   373.86200880 6359.070 #> 9062   522.72095405 6313.542 #> 9063   263.98471838 6696.231 #> 9064   110.71942060 6411.019 #> 9065    91.66018961 6691.570 #> 9066   -33.36262247 6692.090 #> 9067   201.41179296 6381.980 #> 9068   -72.06604458 6884.468 #> 9069   521.31340320 6539.523 #> 9070   337.29753094 6692.163 #> 9071   782.39653583 6435.945 #> 9072   298.56305426 6321.196 #> 9073   633.21366105 6394.706 #> 9074   225.01810278 6288.357 #> 9075   333.96635911 6616.803 #> 9076   524.41490496 6206.396 #> 9077   566.22162171 6202.506 #> 9078   260.47345405 6623.098 #> 9079   369.57814229 6354.774 #> 9080   -68.97683222 6883.649 #> 9081   374.51171578 6579.106 #> 9082   710.77772642 6397.336 #> 9083   111.19586804 6673.436 #> 9084   894.83616416 6447.177 #> 9085   633.55954689 6354.800 #> 9086    79.00626004 6673.685 #> 9087   483.00691933 6503.884 #> 9088   279.06297981 6414.081 #> 9089   223.21197095 6621.908 #> 9090   223.11062272 6663.692 #> 9091   259.95499488 6473.054 #> 9092   258.88870114 6360.889 #> 9093   260.92719433 6694.289 #> 9094   896.52419058 6408.405 #> 9095    79.68512514 6751.714 #> 9096   744.72617088 6437.519 #> 9097   525.13589730 6279.170 #> 9098   223.65909853 6660.340 #> 9099   857.60220612 6370.821 #> 9100   411.06442797 6316.705 #> 9101   524.78612467 6281.301 #> 9102   447.67385759 6354.046 #> 9103   599.88284176 6246.467 #> 9104    72.74265332 6600.160 #> 9105   409.77902081 6390.676 #> 9106   240.12625578 6419.757 #> 9107   410.16615096 6357.110 #> 9108   412.18892391 6317.647 #> 9109    -0.40714684 6723.594 #> 9110    73.63644833 6489.068 #> 9111     1.21806906 6685.631 #> 9112   334.27859512 6619.617 #> 9113   372.43183655 6355.079 #> 9114   373.27109658 6358.244 #> 9115   223.39108821 6625.466 #> 9116    75.03366409 6751.085 #> 9117   819.21593171 6404.383 #> 9118   414.27632131 6282.980 #> 9119   632.86292169 6505.223 #> 9120   856.80617452 6407.539 #> 9121   -34.14167047 6800.572 #> 9122   560.74335456 6355.286 #> 9123   148.49736286 6779.848 #> 9124   336.89961257 6357.387 #> 9125   446.27751418 6428.830 #> 9126   297.14644693 6320.432 #> 9127   633.82892805 6392.672 #> 9128   556.95062986 6539.346 #> 9129    34.99439938 6419.785 #> 9130   818.25734522 6480.366 #> 9131    34.86473203 6645.243 #> 9132   184.87203228 6479.725 #> 9133   484.99016541 6393.066 #> 9134   185.96295977 6626.223 #> 9135   221.68210809 6437.092 #> 9136   485.00345554 6390.376 #> 9137   110.67558364 6486.845 #> 9138    13.60041018 6697.641 #> 9139   186.37257517 6666.109 #> 9140   186.78552870 6329.657 #> 9141   708.01035160 6362.025 #> 9142    43.14796280 6867.804 #> 9143   559.61950939 6210.273 #> 9144   821.80186681 6331.886 #> 9145   527.45780654 6101.008 #> 9146   -71.04083031 6736.554 #> 9147   744.59161221 6324.292 #> 9148   448.20240176 6352.600 #> 9149   224.41113397 6325.593 #> 9150   483.84375254 6429.338 #> 9151   260.42272575 6325.608 #> 9152   558.90716502 6318.925 #> 9153   819.55263074 6291.769 #> 9154   166.15848475 6386.322 #> 9155   297.58220565 6434.245 #> 9156   781.95832050 6402.506 #> 9157    79.04928623 6787.744 #> 9158   448.32229426 6354.655 #> 9159   409.80604472 6504.010 #> 9160   148.68004019 6667.161 #> 9161   410.42015264 6356.943 #> 9162   525.25149892 6281.561 #> 9163   373.75302223 6690.684 #> 9164   335.44437048 6395.996 #> 9165   446.59656916 6574.983 #> 9166   561.72322921 6355.547 #> 9167   593.60348544 6320.252 #> 9168   708.47051594 6285.365 #> 9169   337.40631440 6692.209 #> 9170   485.42459196 6430.603 #> 9171   259.65626257 6620.651 #> 9172   335.75876483 6319.313 #> 9173   821.27132108 6329.060 #> 9174   281.09496731 6342.869 #> 9175   522.13835129 6430.219 #> 9176   185.92471320 6662.361 #> 9177   280.93512403 6341.186 #> 9178   445.95367870 6579.133 #> 9179   708.97829074 6397.114 #> 9180   374.99613542 6281.009 #> 9181   296.39741864 6472.962 #> 9182   148.36491959 6445.158 #> 9183   411.98031472 6280.183 #> 9184   555.99510966 6580.052 #> 9185   557.75742480 6540.467 #> 9186   409.15194811 6541.851 #> 9187   596.40451381 6426.068 #> 9188   185.87464264 6663.521 #> 9189   782.72385990 6435.791 #> 9190   147.56021209 6629.819 #> 9191   222.97651167 6289.270 #> 9192   222.81903258 6401.440 #> 9193  -140.79249771 6783.367 #> 9194   450.69274986 6242.368 #> 9195   672.63078582 6465.052 #> 9196   224.05214583 6325.548 #> 9197   482.62760337 6541.613 #> 9198   560.03210226 6206.962 #> 9199   485.87761163 6355.442 #> 9200   259.37845594 6659.991 #> 9201   783.40386725 6327.664 #> 9202   558.71456311 6353.423 #> 9203   522.56271245 6355.714 #> 9204    15.13935684 6699.264 #> 9205   519.77258724 6579.376 #> 9206   408.13550801 6616.477 #> 9207   412.87284332 6321.270 #> 9208   201.86400634 6311.352 #> 9209   202.05627032 6384.020 #> 9210   633.91822595 6392.680 #> 9211   335.37575080 6356.786 #> 9212   669.84171245 6393.249 #> 9213   634.19776718 6430.268 #> 9214   335.77606651 6321.470 #> 9215   -68.96623125 6654.734 #> 9216   -33.78797857 6842.126 #> 9217   187.18860214 6702.902 #> 9218   371.67783924 6543.558 #> 9219   489.61867993 6130.615 #> 9220    41.57586014 6828.250 #> 9221   296.56662272 6583.024 #> 9222    19.22984567 6626.016 #> 9223   748.30153259 6471.668 #> 9224   112.13595764 6749.634 #> 9225   166.16224929 6422.859 #> 9226   -19.53294678 6703.600 #> 9227   783.48766114 6440.802 #> 9228   703.59543972 6456.535 #> 9229   410.14462717 6396.054 #> 9230   710.80039876 6432.892 #> 9231   408.20073973 6542.276 #> 9232   373.06241245 6690.593 #> 9233   147.42950844 6368.729 #> 9234   280.56714403 6343.537 #> 9235   448.67192704 6392.380 #> 9236   258.88984639 6360.940 #> 9237   525.82194671 6281.763 #> 9238    78.69852577 6787.172 #> 9239   745.77752116 6398.326 #> 9240   856.55409160 6444.722 #> 9241   487.90795737 6242.772 #> 9242   600.46699133 6171.628 #> 9243   223.23889788 6439.176 #> 9244   745.46343520 6435.110 #> 9245   673.85764507 6285.079 #> 9246    92.93514077 6654.521 #> 9247   412.36205962 6243.336 #> 9248   595.97730721 6428.821 #> 9249   153.87911213 6780.074 #> 9250   485.01621857 6356.412 #> 9251   149.87511030 6741.107 #> 9252   484.33132447 6462.290 #> 9253   707.98846446 6398.345 #> 9254   185.35711690 6479.520 #> 9255   148.14927746 6369.220 #> 9256   444.75188309 6612.098 #> 9257   296.84730236 6507.425 #> 9258   371.47728614 6541.980 #> 9259   521.48953865 6466.159 #> 9260   205.45579438 6419.976 #> 9261   527.84658102 6132.326 #> 9262   671.03879423 6431.483 #> 9263   482.71667092 6542.262 #> 9264   168.04731568 6346.211 #> 9265   336.14920107 6322.219 #> 9266   337.19599912 6690.932 #> 9267   485.94378526 6354.905 #> 9268   372.66032143 6504.704 #> 9269   185.61680530 6667.609 #> 9270   709.05522910 6286.656 #> 9271   820.69247032 6324.580 #> 9272   595.31551678 6467.086 #> 9273   297.14355611 6548.222 #> 9274   524.72829503 6277.275 #> 9275   297.67801753 6322.804 #> 9276   748.54467182 6288.085 #> 9277   594.53842638 6538.208 #> 9278   113.73579045 6783.968 #> 9279   296.65720478 6691.744 #> 9280    55.59947103 6623.072 #> 9281   185.96213361 6626.025 #> 9282   261.53663735 6695.487 #> 9283   109.38474073 6447.838 #> 9284   111.50477515 6636.866 #> 9285   562.30412972 6170.929 #> 9286   635.71947149 6280.628 #> 9287   491.66199291 6059.599 #> 9288   222.48600700 6476.721 #> 9289   333.86584812 6655.677 #> 9290   -19.72228788 6707.921 #> 9291   560.47582051 6354.321 #> 9292   487.27851434 6244.238 #> 9293   112.03568812 6670.435 #> 9294   634.33585949 6357.777 #> 9295   857.03434245 6368.851 #> 9296   562.19975812 6282.128 #> 9297   487.11338268 6281.166 #> 9298   333.99778922 6619.757 #> 9299   782.49601194 6404.201 #> 9300   634.04887537 6431.002 #> 9301   111.60829000 6748.281 #> 9302   523.56356015 6428.420 #> 9303   222.85280962 6625.776 #> 9304   276.28999642 6377.255 #> 9305   296.98843360 6542.539 #> 9306   856.59943227 6333.835 #> 9307   332.46691431 6577.203 #> 9308   258.84266188 6512.402 #> 9309   301.60917447 6694.175 #> 9310   259.26972721 6399.576 #> 9311   633.78000398 6433.956 #> 9312    74.93636358 6676.438 #> 9313    41.72106313 6828.603 #> 9314   409.90618964 6466.317 #> 9315   560.04424393 6279.406 #> 9316    42.12823136 6866.070 #> 9317   222.85051392 6626.285 #> 9318   482.45700257 6538.210 #> 9319   333.15965368 6577.873 #> 9320   526.33775764 6167.893 #> 9321   556.93529989 6538.829 #> 9322   296.90834599 6470.920 #> 9323   633.13315466 6433.359 #> 9324   896.23074513 6409.140 #> 9325   745.76247079 6324.564 #> 9326   150.86778490 6778.800 #> 9327   563.65460499 6170.399 #> 9328   280.16462136 6340.433 #> 9329   561.21568552 6131.402 #> 9330   632.76782776 6433.411 #> 9331   446.03849342 6501.705 #> 9332   744.86421480 6468.172 #> 9333   671.22172038 6359.329 #> 9334   -31.50715700 6878.681 #> 9335   111.80129623 6635.508 #> 9336   784.70733405 6328.817 #> 9337   527.07410386 6095.800 #> 9338   373.58253289 6320.240 #> 9339   262.76111659 6696.292 #> 9340   222.42766602 6662.948 #> 9341   148.83300428 6592.657 #> 9342   335.94049702 6284.283 #> 9343   596.50149424 6428.595 #> 9344   448.09743890 6504.210 #> 9345   598.91086105 6242.641 #> 9346   677.74071168 6470.203 #> 9347    94.49261441 6653.876 #> 9348   -34.27422939 6691.765 #> 9349   333.80373128 6433.099 #> 9350   259.51954588 6398.811 #> 9351   632.92081382 6507.027 #> 9352   203.21075904 6346.467 #> 9353   781.87399735 6400.578 #> 9354   783.20391927 6439.473 #> 9355   449.77134404 6279.525 #> 9356   -32.88275602 6689.031 #> 9357   518.96568097 6541.115 #> 9358   410.56519625 6354.707 #> 9359   335.13158691 6432.301 #> 9360   239.49692740 6383.803 #> 9361   -32.25551488 6877.465 #> 9362   671.70765655 6396.099 #> 9363    54.57295955 6694.993 #> 9364   634.38072220 6503.400 #> 9365    93.24143723 6692.337 #> 9366   110.11563736 6447.385 #> 9367   632.63495068 6504.095 #> 9368   598.17932104 6318.306 #> 9369   221.91386167 6438.313 #> 9370   333.48588213 6507.683 #> 9371   260.68631350 6434.852 #> 9372    37.78226344 6754.497 #> 9373   148.84387720 6667.864 #> 9374     0.62773153 6872.749 #> 9375   560.26353826 6204.817 #> 9376   110.80572547 6521.377 #> 9377   409.58701910 6431.113 #> 9378   111.27800974 6636.308 #> 9379   259.33980038 6433.981 #> 9380   368.81868390 6577.895 #> 9381   411.39076336 6615.230 #> 9382   483.05219892 6464.154 #> 9383   485.21514956 6575.335 #> 9384   523.67165677 6430.627 #> 9385   279.70845290 6340.438 #> 9386   447.80291419 6315.276 #> 9387   184.96856671 6586.595 #> 9388   558.49500643 6393.612 #> 9389   483.54254492 6464.572 #> 9390   333.58294861 6653.727 #> 9391   371.89450767 6432.249 #> 9392   222.99799814 6627.212 #> 9393   148.76779217 6667.403 #> 9394    38.14753422 6754.253 #> 9395   674.06748496 6469.790 #> 9396   199.22163037 6309.765 #> 9397   370.59335556 6617.705 #> 9398   634.32153183 6357.700 #> 9399   148.45811125 6632.373 #> 9400    93.14736140 6654.452 #> 9401   111.97562102 6670.558 #> 9402    42.56425241 6793.754 #> 9403   259.13467171 6586.596 #> 9404   298.62678961 6542.706 #> 9405   295.49938350 6397.141 #> 9406   261.17220872 6697.222 #> 9407   595.84729208 6428.693 #> 9408   486.94587506 6317.591 #> 9409   447.48966707 6355.698 #> 9410   110.72455553 6561.088 #> 9411   523.11498282 6392.054 #> 9412   151.14380436 6743.580 #> 9413   447.34398430 6319.446 #> 9414   526.42389460 6168.320 #> 9415   167.89818384 6314.204 #> 9416   148.02115543 6482.896 #> 9417   561.85498947 6206.671 #> 9418   521.15541611 6355.734 #> 9419   557.23195821 6542.335 #> 9420   489.13230816 6204.071 #> 9421   248.76387424 6419.374 #> 9422   224.37798419 6328.764 #> 9423   222.75656669 6476.534 #> 9424   446.08687033 6502.809 #> 9425   185.46935783 6551.036 #> 9426   278.98714374 6305.653 #> 9427   151.30325634 6779.431 #> 9428   892.76187103 6370.975 #> 9429   527.12102536 6207.575 #> 9430   223.35298715 6510.662 #> 9431   146.45405548 6667.625 #> 9432   521.58320489 6503.905 #> 9433   634.39620267 6359.278 #> 9434   783.29867725 6328.595 #> 9435   113.06363069 6784.959 #> 9436   708.24373020 6323.822 #> 9437    75.21516037 6341.153 #> 9438    77.31734352 6787.275 #> 9439   334.89316028 6320.950 #> 9440   260.27626356 6435.820 #> 9441   110.34882460 6596.418 #> 9442   596.18690374 6141.226 #> 9443    35.64946278 6730.591 #> 9444   371.62320658 6429.697 #> 9445   709.78362007 6395.036 #> 9446   560.97163300 6277.781 #> 9447   332.59455788 6616.010 #> 9448   111.57505676 6485.200 #> 9449   561.62324129 6282.997 #> 9450   482.67871822 6465.953 #> 9451   525.60991508 6208.270 #> 9452   299.03287842 6470.223 #> 9453   450.11612521 6241.351 #> 9454   486.59534579 6280.130 #> 9455   371.68805204 6503.512 #> 9456   672.19239707 6322.567 #> 9457   673.10697051 6285.282 #> 9458   671.38250444 6359.533 #> 9459   297.69478073 6398.487 #> 9460   520.75701956 6539.232 #> 9461   183.83357131 6440.231 #> 9462   563.01311654 6245.914 #> 9463   185.10649410 6591.061 #> 9464   409.43139693 6431.626 #> 9465   446.30507848 6429.780 #> 9466   529.40270833 6134.694 #> 9467   484.57932887 6393.394 #> 9468   258.79135891 6661.179 #> 9469   185.17604231 6592.511 #> 9470    37.72887514 6714.863 #> 9471   187.06879958 6552.871 #> 9472    -0.01080512 6722.204 #> 9473   637.84116435 6172.385 #> 9474   670.73613406 6209.970 #> 9475   597.37538925 6503.656 #> 9476   222.94955831 6626.408 #> 9477   412.30460132 6283.466 #> 9478   447.95326819 6393.000 #> 9479   258.90948913 6584.666 #> 9480   277.61671285 6417.583 #> 9481   823.58763899 6291.765 #> 9482   148.36554780 6593.537 #> 9483   820.09225243 6405.601 #> 9484   296.18500251 6621.080 #> 9485   671.25312286 6209.890 #> 9486   334.43854840 6432.955 #> 9487   258.92795336 6471.335 #> 9488   519.76214198 6578.653 #> 9489   599.90271099 6170.969 #> 9490   895.82877465 6372.263 #> 9491   112.38761339 6670.734 #> 9492   445.76797992 6464.029 #> 9493   672.94113054 6322.822 #> 9494   519.34608826 6542.336 #> 9495   560.04611173 6205.329 #> 9496   221.00249528 6364.014 #> 9497   707.83359531 6246.397 #> 9498   524.31593910 6319.036 #> 9499    37.21534240 6682.743 #> 9500     1.87309739 6834.223 #> 9501    78.26357500 6785.981 #> 9502   149.65308878 6706.555 #> 9503   149.27550347 6631.429 #> 9504    57.12124052 6698.036 #> 9505   147.88915655 6594.705 #> 9506   296.83066958 6470.188 #> 9507   221.91204526 6586.866 #> 9508   222.97645736 6586.974 #> 9509   522.59966788 6353.924 #> 9510   222.64443883 6586.216 #> 9511   239.68465911 6305.448 #> 9512   556.79089243 6576.927 #> 9513   296.53641203 6396.256 #> 9514   111.70663851 6633.460 #> 9515   333.42000077 6619.748 #> 9516   372.85996881 6316.809 #> 9517   817.41997249 6295.566 #> 9518   820.73053915 6367.216 #> 9519   450.63324883 6242.891 #> 9520   259.68247496 6438.255 #> 9521   784.12346162 6290.421 #> 9522   708.16164067 6322.053 #> 9523   711.25072833 6248.174 #> 9524   747.33775552 6248.941 #> 9525   -32.66591369 6842.452 #> 9526   409.57890494 6390.885 #> 9527    74.85170538 6675.156 #> 9528   560.39551001 6390.677 #> 9529   707.44055459 6434.400 #> 9530   595.13630558 6541.402 #> 9531   818.56007424 6476.704 #> 9532   185.61191835 6329.543 #> 9533   490.69584600 6059.105 #> 9534   598.24677945 6317.099 #> 9535   783.90376656 6290.569 #> 9536   708.60210023 6321.246 #> 9537   708.22595740 6247.432 #> 9538    41.81786152 6866.090 #> 9539   487.76227405 6242.860 #> 9540   558.01240677 6431.386 #> 9541   600.57908272 6172.168 #> 9542   372.06132408 6582.132 #> 9543   371.91340914 6431.180 #> 9544   148.29802392 6740.384 #> 9545   167.56125770 6346.975 #> 9546   819.75526635 6292.526 #> 9547   297.79459183 6286.623 #> 9548    73.51526803 6602.347 #> 9549   709.49164179 6321.172 #> 9550   409.44406484 6577.986 #> 9551   370.92185242 6577.378 #> 9552   336.42736932 6281.773 #> 9553   896.65319133 6373.061 #> 9554   560.24136408 6204.930 #> 9555   297.41855040 6469.696 #> 9556   783.84843621 6290.196 #> 9557   559.08644354 6467.702 #> 9558   409.54956093 6504.534 #> 9559   557.92940745 6465.602 #> 9560   111.56349970 6598.398 #> 9561   447.27787994 6615.295 #> 9562   148.38679859 6776.882 #> 9563   522.34053707 6279.688 #> 9564   749.36558398 6250.626 #> 9565   522.76631759 6355.467 #> 9566   239.10277512 6419.620 #> 9567   115.30705845 6783.582 #> 9568    91.26535476 6655.057 #> 9569    74.84894410 6753.843 #> 9570   560.30853737 6204.856 #> 9571   337.83639336 6691.997 #> 9572   334.18760626 6396.931 #> 9573   296.95276463 6319.709 #> 9574   747.86348020 6286.813 #> 9575   520.63079940 6466.889 #> 9576   522.97603945 6429.637 #> 9577   598.82866307 6503.818 #> 9578   485.07401348 6429.912 #> 9579   637.44701308 6172.072 #> 9580   281.32133531 6416.387 #> 9581   445.29941524 6578.493 #> 9582   259.73677534 6620.155 #> 9583   597.06202971 6391.317 #> 9584   297.81349194 6472.368 #> 9585   671.43235189 6320.687 #> 9586   486.16401363 6351.843 #> 9587   335.37991392 6430.675 #> 9588   782.14349219 6403.426 #> 9589   486.68500698 6275.535 #> 9590   297.43705389 6470.751 #> 9591   260.00454339 6696.752 #> 9592   110.70463700 6561.392 #> 9593   526.67894916 6167.765 #> 9594   223.19930070 6623.133 #> 9595   857.24834459 6369.913 #> 9596   149.63327142 6778.607 #> 9597   710.43548464 6473.135 #> 9598   296.44041302 6320.932 #> 9599   335.27676393 6545.111 #> 9600   555.41910481 6435.812 #> 9601   495.42937087 6247.634 #> 9602   221.92522076 6512.812 #> 9603    94.52499096 6693.561 #> 9604   635.39305324 6208.059 #> 9605   560.44759294 6356.682 #> 9606   595.48679704 6505.501 #> 9607   447.60928685 6279.903 #> 9608   206.46579192 6421.718 #> 9609   333.49096298 6653.806 #> 9610   856.99925008 6331.609 #> 9611   334.04847326 6468.352 #> 9612   794.88017940 6472.371 #> 9613   409.05546754 6579.843 #> 9614   147.71961652 6554.666 #> 9615   637.38832932 6282.643 #> 9616   817.89242000 6480.806 #> 9617   856.64444232 6333.809 #> 9618   559.10004607 6353.257 #> 9619   594.71711731 6540.222 #> 9620   334.31609505 6470.461 #> 9621   781.98927649 6403.141 #> 9622    75.51980731 6674.801 #> 9623   223.04359483 6513.597 #> 9624   222.44526051 6552.076 #> 9625   633.12258900 6429.066 #> 9626   702.64588872 6459.505 #> 9627   522.39670294 6350.733 #> 9628   558.87052627 6315.898 #> 9629   110.68461815 6520.812 #> 9630   637.28762284 6208.854 #> 9631   410.33985214 6357.015 #> 9632    20.64508486 6664.957 #> 9633   239.38937552 6380.526 #> 9634    54.86604632 6699.454 #> 9635    75.74798969 6675.337 #> 9636   746.54824821 6250.697 #> 9637   599.76978921 6134.628 #> 9638   111.67742125 6636.005 #> 9639   448.35718950 6318.294 #> 9640   783.39100308 6328.110 #> 9641   857.15072465 6368.905 #> 9642   486.15573843 6355.990 #> 9643   671.76407739 6358.252 #> 9644    41.20929159 6680.006 #> 9645   203.10554915 6344.875 #> 9646   258.87770095 6434.722 #> 9647    75.85076360 6751.263 #> 9648   632.88470326 6208.199 #> 9649   409.10672290 6580.722 #> 9650   371.36955032 6433.793 #> 9651   858.31448733 6443.497 #> 9652   601.88787158 6134.441 #> 9653   259.09785277 6546.846 #> 9654   595.04928280 6541.203 #> 9655   297.37217729 6361.196 #> 9656   -21.83557711 6706.915 #> 9657   599.67321704 6206.156 #> 9658   483.10562728 6575.871 #> 9659   407.54180903 6609.156 #> 9660   222.92570992 6625.799 #> 9661   259.76928214 6323.472 #> 9662   186.54111101 6441.126 #> 9663   277.42746388 6416.992 #> 9664   634.27224172 6357.862 #> 9665   673.06949538 6432.203 #> 9666   523.13534770 6393.707 #> 9667   148.92668035 6669.610 #> 9668   184.95773462 6627.548 #> 9669   147.53473338 6408.257 #> 9670   339.94074326 6617.977 #> 9671   492.98535777 6095.298 #> 9672   783.47972419 6289.202 #> 9673   633.34832619 6504.442 #> 9674   111.88773287 6596.335 #> 9675   110.70289245 6483.398 #> 9676   560.43667252 6355.383 #> 9677   372.86435911 6284.210 #> 9678   205.55401920 6309.581 #> 9679   895.37419505 6406.528 #> 9680   556.14943147 6576.045 #> 9681   221.38314900 6697.120 #> 9682   149.90198435 6743.066 #> 9683   523.85796262 6318.420 #> 9684   -30.85068392 6643.787 #> 9685   279.26662011 6340.587 #> 9686   334.04917083 6581.660 #> 9687   406.55503437 6614.380 #> 9688    73.90743036 6599.749 #> 9689   334.03189689 6544.328 #> 9690   275.75028235 6379.507 #> 9691   675.32676724 6246.845 #> 9692   634.29144293 6355.310 #> 9693   524.78167208 6207.904 #> 9694   819.20998377 6405.184 #> 9695   563.19336728 6245.014 #> 9696   559.51813980 6391.690 #> 9697   222.98418080 6662.831 #> 9698   259.81101416 6620.685 #> 9699   223.00624832 6362.699 #> 9700   896.78378946 6409.186 #> 9701   446.49831483 6429.733 #> 9702   258.59644753 6470.795 #> 9703    13.72302653 6697.389 #> 9704    92.64709265 6654.318 #> 9705   372.96125384 6539.736 #> 9706   259.79547342 6550.242 #> 9707   556.46316769 6538.215 #> 9708   297.36082109 6321.244 #> 9709   446.49871106 6430.160 #> 9710   222.66075050 6663.433 #> 9711   560.63060647 6352.691 #> 9712   224.58849586 6697.170 #> 9713   410.46225074 6394.781 #> 9714   296.48930794 6584.257 #> 9715   486.01833842 6429.751 #> 9716   708.48756352 6246.139 #> 9717   150.72098301 6703.869 #> 9718   637.75291424 6171.972 #> 9719   297.80011952 6396.188 #> 9720   708.00357893 6395.986 #> 9721   297.42294537 6356.995 #> 9722    40.81593165 6680.209 #> 9723    42.65648807 6903.701 #> 9724   333.58583381 6471.170 #> 9725   558.65120984 6427.235 #> 9726   223.25443246 6290.155 #> 9727   295.69465207 6620.576 #> 9728   597.80954038 6242.986 #> 9729   523.45695151 6203.762 #> 9730   186.01001037 6662.920 #> 9731   297.02020452 6471.621 #> 9732   297.11969291 6692.760 #> 9733   411.17685830 6315.794 #> 9734   482.83927954 6541.816 #> 9735   371.99969308 6429.444 #> 9736   410.71563798 6504.908 #> 9737   111.92680995 6600.144 #> 9738   110.57535672 6521.190 #> 9739   674.56141847 6209.895 #> 9740   558.75289904 6427.157 #> 9741   709.90271853 6469.928 #> 9742   818.63459319 6443.588 #> 9743   558.33689470 6470.596 #> 9744   296.04741845 6359.738 #> 9745   523.34808101 6315.559 #> 9746   709.07147197 6249.600 #> 9747   334.09724035 6582.977 #> 9748   633.27794013 6354.470 #> 9749   596.74454106 6532.824 #> 9750   296.92272770 6321.371 #> 9751    -0.02040999 6834.304 #> 9752     3.51455172 6759.800 #> 9753    42.40192574 6904.406 #> 9754   -32.71206269 6879.149 #> 9755   557.21095219 6502.150 #> 9756   299.14368035 6657.012 #> 9757   557.21253625 6428.160 #> 9758   185.80575037 6402.731 #> 9759   485.91824872 6353.605 #> 9760   634.07930630 6393.712 #> 9761   296.78964872 6695.103 #> 9762   375.15748569 6355.689 #> 9763   185.44220561 6516.885 #> 9764   524.41778723 6164.780 #> 9765   203.43895599 6419.867 #> 9766   222.88240535 6474.736 #> 9767   598.00101746 6318.418 #> 9768   -31.86958270 6916.061 #> 9769   632.95450887 6356.578 #> 9770   671.32129352 6321.858 #> 9771   334.34322388 6430.658 #> 9772   187.19756845 6701.347 #> 9773   782.56236466 6436.729 #> 9774   556.69480978 6467.908 #> 9775   297.32317167 6358.197 #> 9776   370.47778980 6580.784 #> 9777   336.26778888 6392.441 #> 9778   186.16452643 6662.404 #> 9779   561.24279289 6242.233 #> 9780   149.41814065 6555.393 #> 9781    55.51821520 6621.650 #> 9782   146.96581516 6370.932 #> 9783   897.11011689 6408.516 #> 9784     5.06339647 6794.896 #> 9785   490.03086948 6204.358 #> 9786   333.63690702 6615.956 #> 9787   186.08653042 6628.374 #> 9788   371.15432792 6617.807 #> 9789   297.02973403 6395.582 #> 9790   782.30590673 6401.285 #> 9791   823.00600357 6327.975 #> 9792   670.25448459 6433.728 #> 9793     0.50674043 6724.294 #> 9794   202.61543244 6421.096 #> 9795   524.16362933 6319.120 #> 9796   410.29408687 6581.381 #> 9797   599.96894316 6135.386 #> 9798   296.44272608 6320.136 #> 9799    73.39569569 6639.432 #> 9800   525.60293483 6096.387 #> 9801   522.94542037 6355.085 #> 9802   744.32699248 6434.559 #> 9803   333.76864931 6505.293 #> 9804   482.94648461 6539.706 #> 9805    41.44204808 6829.211 #> 9806    38.32086318 6755.619 #> 9807   856.12004414 6336.985 #> 9808   184.37736223 6365.784 #> 9809   185.36540281 6516.793 #> 9810   377.29945070 6691.272 #> 9811   595.46448858 6431.541 #> 9812   450.52357833 6134.388 #> 9813   148.05906155 6594.484 #> 9814   856.73302651 6409.379 #> 9815   333.96594983 6690.036 #> 9816   410.49082426 6357.752 #> 9817   165.32674873 6387.014 #> 9818   114.15078105 6782.781 #> 9819   334.49032865 6430.637 #> 9820   204.75032715 6421.593 #> 9821   525.93203413 6244.168 #> 9822   744.74144775 6362.497 #> 9823   561.79007717 6242.756 #> 9824   448.43959492 6352.683 #> 9825   149.05202230 6518.912 #> 9826   524.38242034 6354.564 #> 9827   409.18848335 6502.437 #> 9828   259.06318418 6474.607 #> 9829    35.30396621 6532.653 #> 9830    19.63857001 6627.153 #> 9831   372.93809821 6690.214 #> 9832   297.02028574 6546.796 #> 9833   482.28454907 6465.547 #> 9834   781.66322598 6324.871 #> 9835   297.18609109 6474.985 #> 9836    94.89237403 6693.259 #> 9837    73.42853703 6375.138 #> 9838   409.61524621 6615.224 #> 9839   110.38538716 6560.434 #> 9840   372.10885801 6578.350 #> 9841   635.15064207 6207.589 #> 9842   671.81273123 6321.635 #> 9843   671.13925459 6396.448 #> 9844   259.69719577 6399.284 #> 9845   708.60426827 6321.941 #> 9846   297.45666109 6620.160 #> 9847   411.95664633 6280.985 #> 9848   372.46124146 6429.630 #> 9849   482.70101406 6538.658 #> 9850   114.38653886 6783.853 #> 9851   146.56326628 6444.609 #> 9852   747.53362413 6473.125 #> 9853   746.18143388 6322.524 #> 9854   185.26472360 6554.493 #> 9855   296.91871421 6543.976 #> 9856   599.62782873 6205.581 #> 9857   296.98411344 6544.232 #> 9858   185.70944147 6628.942 #> 9859   635.49980238 6393.745 #> 9860   296.37066955 6579.984 #> 9861   259.58483746 6473.722 #> 9862   263.38149032 6696.542 #> 9863   448.90412222 6315.547 #> 9864   223.94903260 6402.368 #> 9865    92.02574877 6653.499 #> 9866   299.83091397 6582.809 #> 9867   299.40051772 6509.874 #> 9868   296.55251503 6583.928 #> 9869   111.69356969 6632.808 #> 9870   560.11791677 6279.872 #> 9871   -30.97335333 6917.016 #> 9872   520.27823193 6504.259 #> 9873   447.78247820 6356.189 #> 9874   746.08153835 6468.253 #> 9875   296.27550433 6617.876 #> 9876  -222.20521157 6608.772 #> 9877   527.74544466 6131.965 #> 9878   745.51589700 6397.856 #> 9879   237.68921995 6308.016 #> 9880   148.22986266 6557.759 #> 9881   148.54178143 6408.185 #> 9882   519.92235867 6538.282 #> 9883   783.06243032 6440.462 #> 9884   335.99047645 6543.607 #> 9885   224.21930387 6289.208 #> 9886     2.88398568 6684.389 #> 9887   670.81779571 6356.401 #> 9888   297.48114028 6506.761 #> 9889   185.13647354 6555.408 #> 9890   185.48996579 6329.583 #> 9891   183.51504577 6438.906 #> 9892   240.70222439 6308.677 #> 9893   562.38475412 6206.011 #> 9894   599.69581252 6205.637 #> 9895   -36.00557683 6729.605 #> 9896   148.73217821 6597.408 #> 9897   446.08480330 6502.660 #> 9898   782.40898958 6402.198 #> 9899   635.00629392 6319.657 #> 9900    54.72316965 6901.834 #> 9901   221.65048520 6547.696 #> 9902    20.47580940 6664.319 #> 9903   558.51763561 6353.462 #> 9904   335.87838549 6357.985 #> 9905   486.23333073 6430.404 #> 9906   408.83310110 6467.898 #> 9907   110.82433538 6447.985 #> 9908    37.21212087 6643.684 #> 9909   408.51274111 6575.341 #> 9910   260.94269187 6549.789 #> 9911   260.66512541 6694.028 #> 9912   632.72280156 6470.806 #> 9913   202.83287495 6383.535 #> 9914   521.27674663 6466.744 #> 9915   525.10686727 6167.588 #> 9916   148.17294299 6555.590 #> 9917   295.64276985 6470.659 #> 9918   527.74014714 6097.203 #> 9919    72.94859759 6564.691 #> 9920   260.90672994 6397.625 #> 9921   110.05362882 6522.634 #> 9922   597.37612589 6391.861 #> 9923   670.53810304 6431.425 #> 9924   148.92192875 6593.508 #> 9925   147.15575874 6445.854 #> 9926   598.30075334 6318.362 #> 9927   296.61921947 6658.935 #> 9928    35.88805136 6718.160 #> 9929   522.40805715 6393.567 #> 9930   486.63094347 6281.686 #> 9931   597.08679714 6354.557 #> 9932   446.02989207 6502.382 #> 9933   636.01836425 6206.835 #> 9934   -35.54333192 6766.329 #> 9935     1.31693736 6873.629 #> 9936   -67.96135644 6850.159 #> 9937   709.13039903 6360.857 #> 9938   563.45997420 6176.245 #> 9939   446.17116800 6468.020 #> 9940   333.74533830 6653.673 #> 9941   280.50337689 6342.591 #> 9942   633.76848600 6395.562 #> 9943   410.43682196 6428.547 #> 9944   259.05425942 6471.365 #> 9945   335.56906050 6469.236 #> 9946   188.22928517 6329.425 #> 9947   522.26994711 6428.342 #> 9948   189.14448843 6701.575 #> 9949   598.17877438 6390.788 #> 9950   372.07428005 6467.173 #> 9951   819.63243240 6403.838 #> 9952   526.38402588 6207.173 #> 9953   110.38510318 6710.737 #> 9954   672.62545863 6322.388 #> 9955   485.00817624 6392.133 #> 9956   564.07599585 6242.150 #> 9957   782.45487065 6403.551 #> 9958   525.76167379 6245.044 #> 9959   519.99465554 6542.058 #> 9960   149.16146329 6776.957 #> 9961   486.04501796 6356.348 #> 9962   296.65212353 6543.715 #> 9963   201.87944463 6382.841 #> 9964   447.53452516 6614.194 #> 9965   297.30460143 6361.572 #> 9966   858.33173277 6333.411 #> 9967   672.69787019 6247.391 #> 9968   296.10158589 6621.340 #> 9969   408.97245000 6539.126 #> 9970   334.57788703 6431.321 #> 9971    37.50536178 6679.021 #> 9972   524.73716920 6317.033 #> 9973   596.38623205 6503.944 #> 9974   599.56549744 6205.875 #> 9975   554.41958409 6539.491 #> 9976   637.27149964 6210.475 #> 9977   335.38327654 6657.017 #> 9978   414.63853736 6094.029 #> 9979   259.33001429 6399.975 #> 9980   782.56669196 6437.864 #> 9981   258.65341999 6470.632 #> 9982   410.51817854 6393.481 #> 9983   335.42383289 6355.161 #> 9984   372.50050886 6609.702 #> 9985   896.06120379 6374.356 #> 9986   223.42288297 6477.070 #> 9987   335.82568580 6322.232 #> 9988   186.56164295 6401.993 #> 9989   556.78823027 6464.836 #> 9990   259.77963205 6549.613 #> 9991   745.94503254 6323.746 #> 9992   372.54104599 6355.393 #> 9993   856.44834531 6443.945 #> 9994   672.71257692 6280.489 #> 9995   525.61572563 6241.976 #> 9996   743.96708825 6361.315 #> 9997   746.90148044 6463.869 #> 9998   526.24283627 6131.815 #> 9999   371.11263597 6618.053 #> 10000   42.29089409 6867.108 #> 10001  821.29594766 6367.000 #> 10002  522.81709294 6427.459 #> 10003  334.04200118 6582.237 #> 10004  671.32729581 6359.398 #> 10005  258.34963896 6657.412 #> 10006  636.15090109 6246.844 #> 10007  147.93545070 6482.223 #> 10008  335.40144504 6355.910 #> 10009  858.14335918 6373.863 #> 10010  184.89230628 6514.921 #> 10011  149.01178147 6408.274 #> 10012  597.42765312 6319.491 #> 10013  185.29048593 6517.491 #> 10014  226.18939298 6698.361 #> 10015   95.33642622 6693.560 #> 10016  673.65351327 6321.113 #> 10017  296.87727537 6433.634 #> 10018  258.84640999 6437.955 #> 10019  185.72323957 6587.331 #> 10020  337.11782098 6692.273 #> 10021  257.99112157 6587.938 #> 10022  597.85876165 6243.832 #> 10023  594.58729262 6427.699 #> 10024  491.32902513 6063.479 #> 10025  709.30515317 6248.539 #> 10026  165.68819942 6424.373 #> 10027  745.09265229 6363.523 #> 10028  187.23516731 6628.790 #> 10029  558.60893258 6393.612 #> 10030  856.62150012 6367.159 #> 10031  522.32261146 6465.673 #> 10032  203.98621591 6344.573 #> 10033  525.45979579 6168.790 #> 10034  296.90227152 6509.643 #> 10035  820.77381801 6368.565 #> 10036  670.76340603 6397.372 #> 10037  221.66294028 6697.934 #> 10038  168.12928739 6424.908 #> 10039  555.06727808 6578.628 #> 10040  333.08148823 6654.919 #> 10041  298.99807083 6695.008 #> 10042  485.86683623 6356.157 #> 10043   77.92518730 6789.535 #> 10044 -103.26768938 6891.842 #> 10045   76.11909710 6675.120 #> 10046  222.23805595 6437.076 #> 10047  185.22584749 6514.851 #> 10048  374.51032377 6284.253 #> 10049  599.24504566 6283.124 #> 10050  408.85225868 6400.293 #> 10051  335.38172363 6436.694 #> 10052  707.57212334 6321.038 #> 10053  633.49647905 6470.442 #> 10054  710.97996736 6470.450 #> 10055    3.76971297 6794.154 #> 10056  481.82659166 6540.187 #> 10057  371.29849559 6690.736 #> 10058  409.98690183 6427.795 #> 10059  187.02366334 6326.208 #> 10060  111.81321475 6748.333 #> 10061  297.11157004 6546.531 #> 10062   93.77579028 6693.364 #> 10063  405.03022932 6502.536 #> 10064  708.49149540 6321.121 #> 10065  783.41084317 6325.772 #> 10066  446.62137884 6428.770 #> 10067  707.21079578 6436.154 #> 10068  223.55490722 6551.562 #> 10069  572.37801524 6287.603 #> 10070  223.21910666 6588.758 #> 10071  444.04916667 6503.618 #> 10072  -34.56729716 6763.936 #> 10073  148.63669370 6665.539 #> 10074  522.61572944 6388.843 #> 10075   73.66024854 6564.886 #> 10076  409.44074614 6576.728 #> 10077  258.92718456 6474.562 #> 10078  410.25495368 6615.294 #> 10079  524.21123157 6281.320 #> 10080  488.30313122 6429.415 #> 10081  702.06780556 6461.133 #> 10082  782.44054166 6363.420 #> 10083  488.67810638 6205.279 #> 10084  451.00129514 6279.844 #> 10085  796.90369965 6470.277 #> 10086  223.54933061 6661.257 #> 10087  819.64796526 6404.103 #> 10088  599.03454058 6281.134 #> 10089  148.02066964 6408.322 #> 10090  707.39502667 6434.512 #> 10091  672.49891273 6467.850 #> 10092  558.05695178 6428.200 #> 10093  167.69656517 6422.877 #> 10094  260.07661990 6362.114 #> 10095   37.89647534 6755.844 #> 10096  260.34939642 6436.937 #> 10097  600.37368988 6208.234 #> 10098  185.41217411 6555.562 #> 10099    2.98903499 6649.247 #> 10100  557.05367852 6539.296 #> 10101  673.81644150 6467.492 #> 10102  525.00206117 6201.932 #> 10103   73.41115586 6565.600 #> 10104  187.08262016 6402.582 #> 10105  855.28439534 6331.825 #> 10106  820.22251928 6405.846 #> 10107  446.83395545 6542.687 #> 10108  205.13638556 6347.841 #> 10109  410.59977304 6431.860 #> 10110  526.97793195 6206.430 #> 10111  522.88043758 6389.857 #> 10112  485.66042395 6428.655 #> 10113  595.11598246 6540.599 #> 10114  445.71801231 6504.483 #> 10115  111.07921364 6561.634 #> 10116  671.84924405 6361.016 #> 10117  447.20254137 6611.912 #> 10118  296.03408825 6655.944 #> 10119  707.82042061 6434.871 #> 10120  857.10401617 6371.644 #> 10121  820.28024317 6366.242 #> 10122  110.81588314 6521.351 #> 10123  747.99648631 6250.540 #> 10124  632.95471605 6504.984 #> 10125  148.85380966 6740.636 #> 10126  746.90473707 6288.057 #> 10127  855.18851876 6330.460 #> 10128  857.29748279 6371.874 #> 10129  824.79239174 6295.749 #> 10130  708.85838213 6320.848 #> 10131  445.05934480 6606.954 #> 10132  183.28497392 6329.472 #> 10133  784.64172772 6289.661 #> 10134  821.23875088 6365.243 #> 10135  558.04877670 6427.990 #> 10136  520.37084631 6541.614 #> 10137    1.87344187 6644.942 #> 10138  819.64760624 6476.792 #> 10139  522.67600839 6390.551 #> 10140  519.87876149 6504.472 #> 10141  561.26803303 6281.433 #> 10142  409.54503836 6469.571 #> 10143  336.07157317 6318.192 #> 10144  258.87054739 6475.772 #> 10145  111.94280885 6561.528 #> 10146  111.12822483 6480.946 #> 10147  600.49933377 6170.825 #> 10148  525.75769686 6242.330 #> 10149  897.12604346 6374.106 #> 10150  637.33298464 6208.546 #> 10151  296.76503502 6693.505 #> 10152   37.94107582 6754.353 #> 10153   37.74837125 6679.159 #> 10154 -103.02209686 6853.755 #> 10155  275.66265325 6379.530 #> 10156  111.34803405 6746.756 #> 10157  371.70652906 6431.883 #> 10158  600.46854556 6171.697 #> 10159  -35.53400051 6766.850 #> 10160  169.83506700 6342.530 #> 10161  296.26676913 6431.234 #> 10162   -0.54208488 6910.581 #> 10163  147.60180485 6743.442 #> 10164  522.87936990 6425.877 #> 10165  446.16603126 6467.344 #> 10166  488.24535638 6207.398 #> 10167  636.02109111 6281.490 #> 10168  782.40874935 6400.491 #> 10169  487.59320253 6242.133 #> 10170  335.34435487 6359.287 #> 10171  822.51336675 6293.459 #> 10172  819.52159257 6330.099 #> 10173  238.34824776 6307.493 #> 10174  528.27887929 6133.268 #> 10175  185.30843718 6476.951 #> 10176  487.28152392 6279.219 #> 10177  559.39853109 6393.860 #> 10178  260.44643517 6544.887 #> 10179  708.29948209 6324.020 #> 10180  596.51352334 6356.260 #> 10181  220.18040443 6364.313 #> 10182  373.47575726 6281.450 #> 10183  -31.32458509 6877.423 #> 10184  635.38943680 6469.677 #> 10185  816.57215164 6441.737 #> 10186  259.33475161 6657.294 #> 10187   78.68830245 6786.175 #> 10188   37.46904578 6754.192 #> 10189  670.95168071 6396.394 #> 10190  297.61860998 6359.231 #> 10191  598.24537606 6242.573 #> 10192  296.34243897 6542.709 #> 10193  297.38128327 6361.136 #> 10194  336.18490683 6322.338 #> 10195  520.76532446 6428.362 #> 10196  640.07733386 6172.322 #> 10197  483.34029078 6467.445 #> 10198  222.95587419 6663.273 #> 10199  164.72130912 6386.027 #> 10200  409.67478708 6428.590 #> 10201  223.10119895 6477.106 #> 10202  148.39060950 6666.207 #> 10203  409.42077252 6502.690 #> 10204  223.83682719 6402.608 #> 10205   37.75071266 6714.715 #> 10206  522.62003873 6393.089 #> 10207  597.14510776 6353.622 #> 10208  637.03552067 6208.029 #> 10209  170.03706154 6342.720 #> 10210   76.18245443 6675.079 #> 10211  482.51074759 6542.436 #> 10212  202.87335546 6384.285 #> 10213  225.90740917 6697.732 #> 10214  371.51239726 6357.621 #> 10215  408.53489564 6579.796 #> 10216  188.67146392 6698.590 #> 10217  149.75638356 6779.117 #> 10218  222.47288791 6437.398 #> 10219  744.34282507 6435.877 #> 10220  186.41025185 6328.713 #> 10221  447.69538990 6354.176 #> 10222  150.38197004 6779.018 #> 10223  238.23742715 6342.600 #> 10224  261.49502842 6694.718 #> 10225  -38.90450004 6578.433 #> 10226  670.20573568 6433.900 #> 10227   -0.13769948 6725.131 #> 10228  148.90556106 6666.648 #> 10229  279.55954034 6414.829 #> 10230   42.32821002 6865.375 #> 10231  520.64265655 6428.077 #> 10232  858.68353644 6333.460 #> 10233  562.04359389 6171.383 #> 10234   73.42973269 6525.925 #> 10235  559.31641733 6393.644 #> 10236  490.20256052 6095.084 #> 10237   73.08879245 6527.768 #> 10238  187.43460273 6555.193 #> 10239  565.10859639 6206.625 #> 10240  599.19171493 6248.716 #> 10241   72.41113491 6638.729 #> 10242  261.28894048 6360.027 #> 10243  147.76382261 6668.540 #> 10244  747.02330714 6326.776 #> 10245  372.22860833 6539.036 #> 10246  448.26145812 6318.655 #> 10247  634.53412842 6317.194 #> 10248  520.39157661 6577.207 #> 10249  489.88091871 6058.273 #> 10250  262.48269888 6287.708 #> 10251  673.20086676 6468.789 #> 10252  557.30514406 6427.846 #> 10253   57.05927525 6660.925 #> 10254  671.95097709 6322.363 #> 10255   95.72336426 6691.609 #> 10256  524.48614276 6282.305 #> 10257  525.59221956 6244.137 #> 10258  297.79213319 6322.187 #> 10259  280.02615168 6340.235 #> 10260  671.45006305 6358.927 #> 10261  782.53967123 6360.349 #> 10262  110.98132558 6523.931 #> 10263    3.38312892 6799.250 #> 10264  -64.17268064 6921.427 range(dat$X) #> [1] -222.2052  898.2382 range(dat$Y) #> [1] 6056.450 6921.508  ggplot(dat, aes(X, Y, size = cpue_kgkm2)) +   geom_point(shape = 21) +   coord_fixed() ggplot(data = dat,         mapping = aes(x = longitude_dd_start,                       y = latitude_dd_start,                       size = cpue_kgkm2,                       color = bottom_temperature_c)) +    geom_point(alpha = 0.3)"},{"path":[]},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"load-the-grid","dir":"Articles","previous_headings":"The prediction grid The data","what":"Load the grid","title":"","text":"Extrapolation grid EBS. Ignore warnings UTM zones– ’s Bering Sea thing.","code":"# This is another form of the same grid: load(here::here(\"data/pred_grid_ebs.rda\")) # object: pred_grid_ebs #pred_grid_ebs <- read.csv(here::here(\"data/ebs_2022_epsg3338.csv\"),header = TRUE)  get_crs(dat = pred_grid_ebs,ll_names =c(\"lon\",\"lat\")) #> [1] 32603  grid <- add_utm_columns(pred_grid_ebs,                          #ll_crs = 32603,                          ll_names = c(\"lon\", \"lat\")) grid$area_swept_km2 <- 1 # if you have area swept in your model as an offset (common when you're using CPUE data) you can do this (I think)  range(grid$X) #> [1] -273.0000  918.4258  grid$Shape_Area_ha <- grid$Shape_Area*0.0001 # original Shape_area is in m^2"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"replicate-the-grid-for-each-year","dir":"Articles","previous_headings":"The prediction grid The data","what":"Replicate the grid for each year","title":"","text":"spatiotemporal data, need grid year. nice tidy little chunk purrr code !","code":"grid <- purrr::map_dfr(unique(dat$year), ~ tibble(grid, year = .x))"},{"path":[]},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"temporal-effect-plus-spatial-smoother-no-covariates","dir":"Articles","previous_headings":"Fit a GAM to spatial data (analogous to spatial-only model in sdmTMB) The data","what":"Temporal effect plus spatial smoother, no covariates","title":"","text":"First, fit GAM without covariates: just year factor spatial smoother \\(s(X,Y)\\). .factor(year) part common component SDMs used generate indices.  Include 2-D smooth space, depth covariate.","code":"fit_gam <- gam(   formula = cpue_kgkm2 ~ as.factor(year) +     s(X, Y, k = 50),   family = tw(link = \"log\"),   data = dat )  fittime <- difftime(Sys.time(),start.time, units = \"mins\")  save(fit_gam, fittime,       file = here::here(\"inst\",paste0(\"vigB_model_fits_fm_1_s_t_st.Rdata\"))) #> Loading objects: #>   fit_gam #>   fittime cat(\"The GAM took \", fittime, \"mins to run\") #> The GAM took  236.0511 mins to run  # Get diagnostics and perform model checking: gam.check(fit_gam) #>  #> Method: REML   Optimizer: outer newton #> full convergence after 8 iterations. #> Gradient range [-0.4204775,7.032253e-05] #> (score 93908.63 & scale 2.487581). #> Hessian positive definite, eigenvalue range [20.91325,11288.1]. #> Model rank =  90 / 90  #>  #> Basis dimension (k) checking results. Low p-value (k-index<1) may #> indicate that k is too low, especially if edf is close to k'. #>  #>          k'  edf k-index p-value     #> s(X,Y) 49.0 48.1    0.79  <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 start.time <- Sys.time() fit_gam_s <- gam(   formula = cpue_kgkm2 ~ s(depth_m) + as.factor(year) +      s(X,Y),    family = tw(link = \"log\"),   data = dat )  fittime <- difftime(Sys.time(),start.time, units = \"mins\")  save(fit_gam_s, fittime,       file = here::here(\"inst\",paste0(\"vigB_model_fits_fm_2.Rdata\"))) #> Loading objects: #>   fit_gam_s #>   fittime cat(\"The GAM took \", fittime, \"mins to run\") #> The GAM took  2.015457 mins to run  gam.check(fit_gam_s) #>  #> Method: REML   Optimizer: outer newton #> full convergence after 15 iterations. #> Gradient range [-0.04507633,0.02640484] #> (score 93891.75 & scale 2.23632). #> Hessian positive definite, eigenvalue range [2.295965,10375.23]. #> Model rank =  79 / 79  #>  #> Basis dimension (k) checking results. Low p-value (k-index<1) may #> indicate that k is too low, especially if edf is close to k'. #>  #>               k'   edf k-index p-value     #> s(depth_m)  9.00  7.47    0.92    0.80     #> s(X,Y)     29.00 28.42    0.78  <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"spatiotemporal-effect","dir":"Articles","previous_headings":"Fit a GAM to spatial data (analogous to spatial-only model in sdmTMB) The data","what":"Spatiotemporal effect","title":"","text":"NOTE: takes long time fit. Include 2-D smooth space year. case, different 2-D smooth year. take much longer fit two (model takes 10-15 mins - set cache=TRUE chunk outputs saved can used next time doc run). model also includes area swept offset.   Review console output help verify convergence, whether adequate number basis functions (k). compare gam.check() results GAM spatiotemporal effects, can see Q-Q plot closer line. Examine four diagnostic plots. gives different way looking model residuals. top-left Q-Q plot, compares model residuals expected/assumed distribution family. well-fit model’s residuals close 1-1 line, otherwise may - -dispersion present. bottom left histogram residuals. want shape similar distribution family specified. top-right plot residual values function linear predictor. evenly distributed around zero well-fitted model. Finally, bottom-right plot response fitted values. well-fitted model show values near 1-1 line.","code":"start.time <- Sys.time() fit_gam_st <- gam(   formula = count ~ as.factor(year) +  s(X, Y) +     s(X, Y, by = as.factor(year)) + offset(area_swept_km2),   family = tw(link = \"log\"),   data = dat )  fittime <- difftime(Sys.time(), start.time, units = \"mins\")  save(fit_gam_st, fittime,       file = here::here(\"inst\",paste0(\"vigB_model_fits_fm_3.Rdata\"))) #> Loading objects: #>   fit_gam_st #>   fittime cat(\"The GAM took \", fittime, \"mins to run\") #> The GAM took  752.5385 mins to run  # Get diagnostics and perform model checking: gam.check(fit_gam_st) #>  #> Method: REML   Optimizer: outer newton #> full convergence after 18 iterations. #> Gradient range [-0.01876853,0.1085145] #> (score 74365.42 & scale 1.682053). #> Hessian positive definite, eigenvalue range [0.0009326952,8702.047]. #> Model rank =  1257 / 1259  #>  #> Basis dimension (k) checking results. Low p-value (k-index<1) may #> indicate that k is too low, especially if edf is close to k'. #>  #>                               k'   edf k-index p-value     #> s(X,Y)                     29.00 28.61    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1982 29.00 21.20    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1983 29.00 19.09    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1984 29.00 21.77    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1985 29.00 16.15    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1986 29.00  9.85    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1987 29.00 16.92    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1988 29.00  4.72    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1989 29.00 12.88    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1990 29.00 17.33    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1991 29.00  2.21    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1992 29.00 15.21    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1993 29.00 13.75    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1994 29.00  7.61    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1995 29.00 17.23    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1996 29.00  9.85    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1997 29.00  9.20    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1998 29.00 10.42    0.66  <2e-16 *** #> s(X,Y):as.factor(year)1999 29.00 13.29    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2000 29.00  2.10    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2001 29.00 12.15    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2002 29.00  7.55    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2003 29.00 16.10    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2004 29.00 17.80    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2005 29.00 18.38    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2006 29.00  6.92    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2007 29.00  7.26    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2008 29.00  2.03    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2009 29.00 17.91    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2010 29.00 22.96    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2011 29.00 20.17    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2012 29.00 13.07    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2013 29.00 19.20    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2014 29.00 16.45    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2015 29.00 15.00    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2016 29.00 12.45    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2017 29.00 19.81    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2018 29.00 16.15    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2019 29.00 22.66    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2021 29.00 19.42    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2022 29.00 21.24    0.66  <2e-16 *** #> s(X,Y):as.factor(year)2023 29.00 18.79    0.66  <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  # To save the k' values, edf, k-index, and p-value: qq.gam(fit_gam_st, rep = 0, level = 0.9, rl.col = 2,         rep.col = \"gray80\")"},{"path":[]},{"path":[]},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"predict-cpue-across-the-grid","dir":"Articles","previous_headings":"Calculate biomass index from GAM via simulation The data > Predict to full survey area with new data","what":"Predict CPUE across the grid","title":"","text":"get predicted CPUE across survey grid. can use models , long YEAR factor long covariates also grid. use basic model (fit_gam) grid contain depth. Plot predictions survey area. Note: EBS grid irregularly spaced, use geom_point() instead geom_tile() geom_raster().","code":"start.time <- Sys.time() pred_gam <- predict(fit_gam, type = \"response\", newdata = grid) #This takes a long time fittime <- difftime(Sys.time(), start.time, units = \"mins\")  pred_gam_df <- cbind(grid, pred_gam) pred_gam_df$predicted_tot_grid <- pred_gam_df$Shape_Area_ha*pred_gam_df$pred_gam  save(pred_gam, pred_gam_df, fittime,       file = here::here(\"inst\",paste0(\"vigB_model_pred_fm_1.Rdata\"))) #> Loading objects: #>   pred_gam #>   pred_gam_df #>   fittime cat(\"The GAM prediction took \", fittime, \"mins to run\") #> The GAM prediction took  4.90409 mins to run  pred_gam_df |>   dplyr::filter(year == 2019) |> # single year   ggplot(aes(X, Y, color = pred_gam)) +   geom_point(size = 0.1) +   scale_fill_viridis_c() +   # facet_wrap(~year) +   coord_fixed() +   labs(color = expression(CPUE(kg / km^2))) +   theme_light() +   theme(legend.position = \"bottom\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"calculate-index","dir":"Articles","previous_headings":"Calculate biomass index from GAM via simulation The data","what":"Calculate index","title":"","text":"Generally, model-based indices abundance use area grid cell prediction area calculate total index across survey area. simplest way sum predicted biomasses across full grid like :","code":"gam_idx_mt <- pred_gam_df |>    dplyr::group_by(year) |>    summarize(total_wt_mt = sum(predicted_tot_grid)/1000)  head(gam_idx_mt) #> # A tibble: 6 × 2 #>    year total_wt_mt #>   <int>       <dbl> #> 1  1982  378333148. #> 2  1983  440487506. #> 3  1984  434547050. #> 4  1985  295431449. #> 5  1986  192331842. #> 6  1987  246011493."},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"get-uncertainties-for-gam-based-index-by-sampling-from-posteriors","dir":"Articles","previous_headings":"Calculate biomass index from GAM via simulation The data","what":"Get uncertainties for GAM-based index by sampling from posteriors","title":"","text":"{gratia} R package evaluating displaying GAM fits. script uses fitted_samples() function, draws fitted values posterior model using Gaussian approximation. also take .","code":"start.time <- Sys.time() sims <- gratia::fitted_samples(fit_gam, n=10, data=grid,                                 scale=\"response\", seed=9) fittime <- difftime(Sys.time(), start.time, units = \"mins\") cat(\"The GAM simulation took \", fittime, \"mins to run\")  sims$year <- grid$year[sims$row] sims$area <- rep(pred_gam_df$Shape_Area_ha, times = 10) # matching the # of draws sims$biomass <- sims$fitted * sims$area # expand from density to biomass, given area  level <- 0.95 # specify probability for confidence interval  # Get sum of simulated biomass (density*area) across grid cells, with CI lwr_fn <- function(x) {as.numeric(quantile(x, probs = (1 - level) / 2))} upr_fn <- function(x) {as.numeric(quantile(x, probs = 1 - (1 - level) / 2))}  sims_sum <- sims %>%    group_by(year, draw) %>%    summarise_at(\"biomass\", list(biomass = sum)) %>%   group_by(year) %>%   summarise_at(\"biomass\", list(est = median, # could use mean                                lwr = lwr_fn,                                upr = upr_fn))  save(sims, sims_sum, fittime,       file = here::here(\"inst\",paste0(\"vigB_model_sim_fm_1.Rdata\"))) #> Loading objects: #>   sims #>   sims_sum #>   fittime sims_sum #> # A tibble: 41 × 4 #>     year           est           lwr           upr #>    <int>         <dbl>         <dbl>         <dbl> #>  1  1982 386780516095. 359351169861. 428471747128. #>  2  1983 447069842515. 415649924128. 488151716241. #>  3  1984 449059423942. 424163921517. 504746240801. #>  4  1985 295846305905. 270558060738. 307781243817. #>  5  1986 189794551256. 174554842158. 203093016065. #>  6  1987 250382261163. 233419440685. 269992408894. #>  7  1988 228599959469. 212006738931. 244250138044. #>  8  1989 239799251091. 212292025303. 265639365676. #>  9  1990 231899694486. 212509545426. 247627486453. #> 10  1991 274071899850. 256386591487. 282773055634. #> # ℹ 31 more rows"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"plot-the-index","dir":"Articles","previous_headings":"Calculate biomass index from GAM via simulation The data","what":"Plot the index","title":"","text":"Now can plot GAM model-based index time just like indices!","code":"p1 <- sims_sum |>   ggplot() +   geom_line(aes(x = year, y = est)) +   geom_ribbon(aes(x = year, y = est, ymin = lwr, ymax = upr), alpha = 0.4) +   xlab(\"Year\") +   ylab(\"Biomass estimate (tons)\")  p1"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B-gam-sdmTMB-example.html","id":"fit-an-analogous-model-in-sdmtmb","dir":"Articles","previous_headings":"","what":"Fit an analogous model in `sdmTMB`","title":"","text":"spatiotemporal GAM fit (fit_gam_st) analog sdmTMB. trying get (less) index using sdmTMB instead. calculate index model sdmTMB, need run predict.sdmTMB() function argument return_tmb_object = TRUE. can run get_index() function extract total biomass calculations standard errors. can set area argument cell_area column km2. case value 4 km2 cells, since grid cells 2 km x 2 km. grid cells fully survey domain (land), feed vector grid areas area argument matched number grid cells. density units tonnes per km2 data, index tonnes.  used bias_correction = FALSE speed things , final result want use bias correction. Let’s see much scale index changes bias correction.","code":"mesh <- make_mesh(dat, c(\"X\", \"Y\"), cutoff=10) plot(mesh) start.time <- Sys.time() # make a mesh for the predictions - this takes a while with cutoff = 10!!  fit <- sdmTMB(data = dat,                formula = cpue_kgkm2 ~ 1 + as.factor(year), # If you set the intercept to zero, R spontaneously aborts!               mesh = mesh,               family = tweedie(link = \"log\"),               time= \"year\" )  fittime <- difftime(Sys.time(),start.time, units = \"mins\")  save(fit, fittime,       file = here::here(\"inst\",paste0(\"vigB_model_fits_fm_4.Rdata\"))) #> Loading objects: #>   fit #>   fittime cat(\"The GAM took \", fittime, \"mins to run\") #> The GAM took  602.9014 mins to run sdmTMB::sanity(fit) tidy(fit) #> # A tibble: 41 × 3 #>    term                estimate std.error #>    <chr>                  <dbl>     <dbl> #>  1 (Intercept)          6.61        0.472 #>  2 as.factor(year)1983  0.262       0.377 #>  3 as.factor(year)1984 -0.00390     0.375 #>  4 as.factor(year)1985 -0.213       0.375 #>  5 as.factor(year)1986 -0.766       0.379 #>  6 as.factor(year)1987 -0.448       0.383 #>  7 as.factor(year)1988 -0.423       0.376 #>  8 as.factor(year)1989 -0.439       0.377 #>  9 as.factor(year)1990 -0.594       0.374 #> 10 as.factor(year)1991 -0.346       0.379 #> # ℹ 31 more rows grid$cell_area <- 4 #Shape_Area_ha p <- predict(fit, newdata = grid, return_tmb_object = TRUE) save(p,       file = here::here(\"inst\",paste0(\"vigB_model_fits_fm_4_pred.Rdata\"))) #> Loading objects: #>   p #>   fittime index <- get_index(p, area = grid$Shape_Area_ha, bias_correct = FALSE)  index_c <- get_index(p, area = grid$cell_area, bias_correct = TRUE) index_c$Method <- \"Bias correction\"  save(index, index_c,       file = here::here(\"inst\",paste0(\"vigB_model_index.Rdata\"))) ggplot(index, aes(year, est)) +   geom_line() +   geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.4) +   xlab(\"Year\") +   ylab(\"Biomass estimate (tonnes)\") bind_rows(index, index_c) %>%   ggplot(aes(year, est, fill = Method)) +   geom_line(aes(colour = Method)) +   geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.4) +   xlab(\"Year\") +   ylab(\"Biomass estimate (tonnes)\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"goals-of-the-original-exercise","dir":"Articles","previous_headings":"","what":"Goals of the original exercise:","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"Practice fitting basic spatiotemporal model. Understand inspect model output. Practice predicting model new data making visualizations predictions. Gain familiarity fitting, comparing interpreting different random field structures. Calculate area-weighted biomass index compare model structure can impact index.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"our-goals-for-this-vignette","dir":"Articles","previous_headings":"","what":"Our goals for this vignette:","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"Fit GAM obtain area-weighted biomass index Fit basic spatiotemporal model (GLMM!) using sdmTMB compare GAM GLMM Check system:","code":"PKG <- c(   \"sdmTMB\", # install.packages(\"sdmTMB\", dependencies = TRUE)   \"mgcv\",    \"gratia\",   \"visreg\",    \"gstat\",   \"dplyr\",    \"ggplot2\",    \"INLA\",   \"prediction\",   \"inlabru\",    \"purrr\")  for (p in PKG) {   if(!require(p,character.only = TRUE)) {       install.packages(p)     require(p,character.only = TRUE)} }  options(ggplot2.continuous.colour = \"viridis\") options(ggplot2.continuous.fill = \"viridis\") theme_set(theme_light()) sessionInfo()"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"work CPUE data yellowfin sole Eastern Bering Sea summer bottom trawl survey. data publicly available FOSS. dataset contains sampling locations (longitude latitude) year. also contains sampling depth meters sample CPUE density units tonnes/km2.","code":"ggplot(data = dat,         mapping = aes(x = longitude_dd, y = latitude_dd, size = cpue_kgha, color = bottom_temperature_c)) +    geom_point(alpha = 0.3)"},{"path":[]},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"add-utm-columns-log-depth-and-year-as-factor","dir":"Articles","previous_headings":"Fit a GAM to spatial data (analogous to spatial-only model in sdmTMB)","what":"Add UTM columns, log depth, and year as factor","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"","code":"dat <- add_utm_columns(dat,                         ll_crs = 4326,                        ll_names = c(\"longitude_dd\", \"latitude_dd\"))  dat$log_depth <- log(dat$depth_m) dat$year_factor <- as.factor(dat$year)  dat[,c(\"X\",\"Y\")] range(dat$X) range(dat$Y)  ggplot(dat, aes(X, Y, size = cpue_kgkm2)) +   geom_point(shape = 21) +   coord_fixed()"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"temporal-effect-plus-spatial-smoother-no-covariates","dir":"Articles","previous_headings":"Fit a GAM to spatial data (analogous to spatial-only model in sdmTMB)","what":"Temporal effect plus spatial smoother, no covariates","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"First, fit GAM without covariates: just year factor spatial smoother \\(s(X,Y)\\). .factor(year) part common component SDMs used generate indices. Get diagnostics perform model checking: Include 2-D smooth space, depth covariate.","code":"start.time <- Sys.time() fit_gam <- gam(   formula = cpue_kgha ~ as.factor(year) +     s(X, Y, k = 50),   family = tw(link = \"log\"),   data = dat )  cat(   \"The GAM took \",   difftime(Sys.time(), start.time, units = \"mins\"),   \" mins to run\" ) gam.check(fit_gam) start.time <- Sys.time() fit_gam_s <- gam(   formula = cpue_kgha ~ s(depth_m) + as.factor(year) +      s(X,Y),    family = tw(link = \"log\"),   data = dat )  cat(\"The GAM took \",      difftime(Sys.time(),start.time, units = \"mins\"),      \"mins to run\")  gam.check(fit_gam_s)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"fit-a-gam-analogous-to-a-spatiotemporal-model-in-sdmtmb","dir":"Articles","previous_headings":"","what":"Fit a GAM analogous to a spatiotemporal model in sdmTMB","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"NOTE: takes long time fit. Include 2-D smooth space year. case, different 2-D smooth year. take much longer fit two. Get diagnostics perform model checking Review console output help verify convergence, whether adequate number basis functions (k). Examine four diagnostic plots. gives different way looking model residuals. top-left Q-Q plot, compares model residuals expected/assumed distribution family. well-fit model’s residuals close 1-1 line, otherwise may - -dispersion present. bottom left histogram residuals. want shape similar distribution family specified. top-right plot residual values function linear predictor. evenly distributed around zero well-fitted model. Finally, bottom-right plot response fitted values. well-fitted model show values near 1-1 line.","code":"start.time <- Sys.time()  fit_gam_st <- gam(   formula = count ~ as.factor(year) +     s(X, Y, by = as.factor(year)),   family = tw(link = \"log\"),   data = dat )  cat(   \"The GAM took \",   difftime(Sys.time(), start.time, units = \"mins\"),   \"mins to run\" ) gam.check(fit_gam_st)"},{"path":[]},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"load-the-grid","dir":"Articles","previous_headings":"Predict to full survey area with new data","what":"Load the grid","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"Extrapolation grid EBS. spatiotemporal data, need grid year. nice tidy little chunk purrr code !","code":"# This is another form of the same grid: load(here::here(\"data/pred_grid_ebs.rda\")) # object: pred_grid_ebs #pred_grid_ebs <- read.csv(here::here(\"data/ebs_2022_epsg3338.csv\"),header = TRUE)  get_crs(dat = pred_grid_ebs,ll_names =c(\"lon\",\"lat\"))  grid <- add_utm_columns(pred_grid_ebs,                         #ll_crs = 32603,                         ll_names = c(\"lon\", \"lat\")) range(grid$X)  # Grid from example #wcvi_grid <- readRDS(here::here(\"data/wcvi-grid.rds\")) grid <- purrr::map_dfr(unique(dat$year), ~ tibble(grid, year = .x))"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"predict-cpue-across-the-grid","dir":"Articles","previous_headings":"Predict to full survey area with new data","what":"Predict CPUE across the grid","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"get predicted Plot predictions survey area. Note: EBS grid irregularly spaced, use geom_point() instead geom_tile() geom_raster().","code":"pred_gam <- predict(fit_gam, type = \"response\", newdata = grid) #This takes a long time. pred_gam_df <- cbind(grid, pred_gam) pred_gam_df$Shape_Area_ha <- pred_gam_df$Shape_Area*0.0001 # original Shape_area is in m^2 pred_gam_df$predicted_tot_grid <- pred_gam_df$Shape_Area_ha*pred_gam_df$pred_gam pred_gam_df |>   filter(year==1999) |> # single year  ggplot(aes(X, Y, color=pred_gam)) +    geom_point(size = 0.1) +    scale_fill_viridis_c() +    #facet_wrap(~year) +    coord_fixed() +   labs(color = expression(CPUE (kg/km^2))) +   theme_light() +   theme(legend.position = \"bottom\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"calculate-biomass-index-from-gam-via-simulation","dir":"Articles","previous_headings":"","what":"Calculate biomass index from GAM via simulation","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"Generally, model-based indices abundance use area grid cell prediction area calculate total index across survey area. simplest way sum predicted biomasses across full grid like :","code":"gam_idx_mt <- pred_gam_df |>    dplyr::group_by(year) |>    summarize(total_wt_mt = sum(predicted_tot_grid)/1000)  head(gam_idx_mt)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"get-uncertainties-for-gam-based-index-by-sampling-from-posteriors","dir":"Articles","previous_headings":"Calculate biomass index from GAM via simulation","what":"Get uncertainties for GAM-based index by sampling from posteriors","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"{gratia} R package evaluating displaying GAM fits. script uses fitted_samples() function, draws fitted values posterior model using Gaussian approximation.","code":"sims <- gratia::fitted_samples(fit_gam, n=10, data=grid,                                 scale=\"response\", seed=9) sims$year <- grid$year[sims$row] sims$area <- rep(pred_gam_df$Shape_Area_ha, times = 10) # matching the # of draws sims$biomass <- sims$fitted * sims$area # expand from density to biomass, given area  level <- 0.95 # specify probability for confidence interval  # Get sum of simulated biomass (density*area) across grid cells, with CI lwr_fn <- function(x) {as.numeric(quantile(x, probs = (1 - level) / 2))} upr_fn <- function(x) {as.numeric(quantile(x, probs = 1 - (1 - level) / 2))}  sims_sum <-  sims %>%    group_by(year,draw) %>%    summarise_at(\"biomass\", list(biomass = sum)) %>%   group_by(year) %>%   summarise_at(\"biomass\", list(est = median, # could use mean                            lwr = lwr_fn,                            upr = upr_fn))"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"index-standardization-using-sdmtmb","dir":"Articles","previous_headings":"","what":"Index standardization using sdmTMB","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"calculate index models, need run predict.sdmTMB() function argument return_tmb_object = TRUE. can run get_index() function extract total biomass calculations standard errors. can set area argument cell_area column km2. case value 4 km2 cells, since grid cells 2 km x 2 km. grid cells fully survey domain (land), feed vector grid areas area argument matched number grid cells. density units tonnes per km2 data, index tonnes. used bias_correction = FALSE speed things , final result want use bias correction. Let’s see much scale index changes bias correction.","code":"p <- predict(fit, newdata = grid, return_tmb_object = TRUE) index <- get_index(p, area = grid$cell_area, bias_correct = FALSE)  ggplot(index, aes(year, est)) +   geom_line() +   geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.4) +   xlab(\"Year\") +   ylab(\"Biomass estimate (tonnes)\") index_c <- get_index(p, area = grid$cell_area, bias_correct = TRUE) index_c$Method <- \"Bias correction\"  bind_rows(index, index_c) %>%   ggplot(aes(year, est, fill = Method)) +   geom_line(aes(colour = Method)) +   geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.4) +   xlab(\"Year\") +   ylab(\"Biomass estimate (tonnes)\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/B_gam_sdmTMB_example.html","id":"calculate-biomass-index-from-gam-via-simulation-1","dir":"Articles","previous_headings":"","what":"Calculate biomass index from GAM via simulation","title":"Fitting a spatiotemporal model with a GAM and deriving an abundance index","text":"Note approach uses Gaussian approximation posterior, implemented currently gratia package. However, better estimate uncertainty derived sampling actual posterior distribution. However, beyond scope today’s lesson. Plot biomass index:","code":"sims <- gratia::fitted_samples(fit_gam, n=10, newdata=grid,                                 scale=\"response\", seed=9) sims$year <- grid$year[sims$row] sims$biomass <- sims$fitted * 4 # expand from density to biomass, given area  level <- 0.95 # specify probability for confidence interval  # Get sum of simulated biomass (density*area) across grid cells, with CI lwr_fn <- function(x) {as.numeric(quantile(x, probs = (1 - level) / 2))} upr_fn <- function(x) {as.numeric(quantile(x, probs = 1 - (1 - level) / 2))}  sims_sum <-  sims %>%    group_by(year,draw) %>%    summarise_at(\"biomass\", list(biomass = sum)) %>%   group_by(year) %>%   summarise_at(\"biomass\", list(est = median, # could use mean                            lwr = lwr_fn,                            upr = upr_fn)) ggplot(sims_sum, aes(year, est)) + geom_line() +   geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.4) +   xlab('Year') + ylab('Biomass estimate (kg)')"},{"path":[]},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/C-model-comparisons.html","id":"wrangle-data","dir":"Articles","previous_headings":"GAMs: the old fashioned way","what":"1. Wrangle Data","title":"Compare {sdmgamindex} to regular GAMs","text":"","code":"SPECIES <- c(# must match common name column   \"walleye pollock\",   \"yellowfin sole\",   \"red king crab\" ) YEARS <- 2015:2021 SRVY <- \"EBS\" method <- \"ML\" knotsP <- 376 # dir_out <- here::here(\"inst\",\"regular_gam_approach\")  crs_latlon = \"+proj=longlat +datum=WGS84\" crs_proj = \"EPSG:3338\"  dat <- sdmgamindex::noaa_afsc_public_foss  # Get cold pool data using cold pool data from the {coldpool} R package dat <- dat %>%   dplyr::mutate(sx = ((longitude_dd_start - mean(longitude_dd_start, na.rm = TRUE))/1000),                 sy = ((latitude_dd_start - mean(latitude_dd_start, na.rm = TRUE))/1000)) %>%    stats::na.omit() %>%    dplyr::filter(common_name %in% SPECIES &                   year %in% YEARS &                   srvy %in% SRVY) %>%    dplyr::rename(GEAR_TEMPERATURE = bottom_temperature_c,                  BOTTOM_DEPTH = depth_m,                  Year = year)  head(dat) #>   Year srvy             survey survey_definition_id cruise cruisejoin haul #> 1 2021  EBS eastern Bering Sea                   98 202101       -751   88 #> 2 2021  EBS eastern Bering Sea                   98 202101       -752   59 #> 3 2016  EBS eastern Bering Sea                   98 201601       -706   48 #> 4 2019  EBS eastern Bering Sea                   98 201901       -727   28 #> 5 2018  EBS eastern Bering Sea                   98 201801       -722   22 #> 6 2021  EBS eastern Bering Sea                   98 202101       -751   19 #>   hauljoin stratum station vessel_id   vessel_name           date_time #> 1   -19996      20    L-01        94   VESTERAALEN 2021-06-21 15:21:16 #> 2   -19973      31    I-03       162 ALASKA KNIGHT 2021-06-14 12:10:16 #> 3   -15350      10    L-04        94   VESTERAALEN 2016-06-12 07:56:25 #> 4   -18780      31    B-08       162 ALASKA KNIGHT 2019-06-09 06:27:08 #> 5   -17559      31    I-12        94   VESTERAALEN 2018-06-06 12:32:44 #> 6   -19886      10    I-11        94   VESTERAALEN 2021-06-03 13:11:46 #>   latitude_dd_start longitude_dd_start latitude_dd_end longitude_dd_end #> 1          58.65480          -167.8979        58.67117        -167.8579 #> 2          57.66072          -166.4836        57.66197        -166.5305 #> 3          58.64714          -165.9241        58.67214        -165.9363 #> 4          55.34481          -163.3904        55.34473        -163.4362 #> 5          57.65918          -160.9100        57.68333        -160.9030 #> 6          57.69411          -161.5022        57.66878        -161.5077 #>   GEAR_TEMPERATURE surface_temperature_c BOTTOM_DEPTH species_code  itis  worms #> 1              3.7                   6.8           47        69322 97935 233889 #> 2              3.2                   5.7           67        69322 97935 233889 #> 3              6.5                   6.8           37        69322 97935 233889 #> 4              5.4                   8.7           53        69322 97935 233889 #> 5              4.1                   6.1           56        69322 97935 233889 #> 6              4.1                   5.7           53        69322 97935 233889 #>     common_name            scientific_name id_rank cpue_kgkm2 cpue_nokm2 count #> 1 red king crab Paralithodes camtschaticus species   73.81732   43.11760     2 #> 2 red king crab Paralithodes camtschaticus species   69.57943   21.41565     1 #> 3 red king crab Paralithodes camtschaticus species   66.83110   70.34853     3 #> 4 red king crab Paralithodes camtschaticus species  127.86046   82.09339     4 #> 5 red king crab Paralithodes camtschaticus species  531.50033  274.20481    12 #> 6 red king crab Paralithodes camtschaticus species 1166.16772  964.34424    42 #>   weight_kg taxon_confidence area_swept_km2 distance_fished_km duration_hr #> 1     3.424                1       0.046385              2.952       0.535 #> 2     3.249                1       0.046695              2.805       0.519 #> 3     2.850                1       0.042645              2.869       0.524 #> 4     6.230                1       0.048725              2.914       0.523 #> 5    23.260                1       0.043763              2.716       0.498 #> 6    50.790                1       0.043553              2.834       0.512 #>   net_width_m net_height_m performance           sx            sy #> 1      15.713        2.299         0.0 0.0008104423  0.0004173062 #> 2      16.647        2.400         0.0 0.0022246523 -0.0005767738 #> 3      14.864        2.250         0.0 0.0027842223  0.0004096462 #> 4      16.721        2.244         6.3 0.0053179323 -0.0028926838 #> 5      16.113        3.144         0.0 0.0077982823 -0.0005783138 #> 6      15.368        2.572         0.0 0.0072060923 -0.0005433838"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/C-model-comparisons.html","id":"formulas","dir":"Articles","previous_headings":"GAMs: the old fashioned way","what":"2. Formulas","title":"Compare {sdmgamindex} to regular GAMs","text":"","code":"fm <-  list(   # Null model spatial and temporal with an additional year effect   \"fm_1_s_t_st\" = \"Year +     s(sx,sy,bs=c('ts'),k=376) +      s(sx,sy,bs=c('ts'),k=10,by=Year)\",      # Mdoel with simple covariates   \"fm_2_cov\" =      \"s(BOTTOM_DEPTH,bs='ts',k=10) + s(log(GEAR_TEMPERATURE+3),bs='ts',k=10)\" )"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/C-model-comparisons.html","id":"run-simple-gam-models","dir":"Articles","previous_headings":"GAMs: the old fashioned way","what":"3. Run simple GAM models","title":"Compare {sdmgamindex} to regular GAMs","text":"models want try fitting:","code":"comb <- tidyr::crossing(   \"SPECIES\" = SPECIES,    \"fm_name\" = gsub(pattern = \" \", replacement = \"_\", x = names(fm))) %>%    dplyr::left_join(     x = .,      y = data.frame(\"fm\" = gsub(pattern = \"\\n\", replacement = \"\",                                 x = unlist(fm), fixed = TRUE),                     \"fm_name\" = gsub(pattern = \" \", replacement = \"_\",                                      x = names(fm))),      by = \"fm_name\")  comb #> # A tibble: 6 × 3 #>   SPECIES         fm_name     fm                                                 #>   <chr>           <chr>       <chr>                                              #> 1 red king crab   fm_1_s_t_st Year +    s(sx,sy,bs=c('ts'),k=376) +     s(sx,sy… #> 2 red king crab   fm_2_cov    s(BOTTOM_DEPTH,bs='ts',k=10) +s(log(GEAR_TEMPERAT… #> 3 walleye pollock fm_1_s_t_st Year +    s(sx,sy,bs=c('ts'),k=376) +     s(sx,sy… #> 4 walleye pollock fm_2_cov    s(BOTTOM_DEPTH,bs='ts',k=10) +s(log(GEAR_TEMPERAT… #> 5 yellowfin sole  fm_1_s_t_st Year +    s(sx,sy,bs=c('ts'),k=376) +     s(sx,sy… #> 6 yellowfin sole  fm_2_cov    s(BOTTOM_DEPTH,bs='ts',k=10) +s(log(GEAR_TEMPERAT… models <- fittimes <- list()  for(i in 1:nrow(comb)){   cat(\"Fitting \",comb$SPECIES[i],\"\\n\", comb$fm_name[i], \": \", comb$fm[i], \"\\n\")      temp <- paste0(comb$SPECIES[i], \" \", comb$fm_name[i])      dat0 <- dat %>%      dplyr::filter(common_name %in% comb$SPECIES[i])      fittimes[[ temp ]] <-     system.time ( models[[ temp ]] <-                     gam(formula = as.formula(paste0(\"cpue_kgha ~ \", comb$fm[i])),                          data = dat0,                          family = tw,                          gamma = 1.4)  )    }  save(models, fittimes, file = here::here(\"inst\",\"VigC_model_output.rdata\"))"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/C-model-comparisons.html","id":"assess-the-model","dir":"Articles","previous_headings":"GAMs: the old fashioned way","what":"4. Assess the model","title":"Compare {sdmgamindex} to regular GAMs","text":"","code":"b <- lapply(X = models, FUN = AIC) bb <- sapply(models, `[`, 1)  # sdmgamindex::get_surveyidx_aic(models)  b <- AIC(models$`yellowfin sole fm_1_s_t_st`, models$`yellowfin sole fm_2_cov`)# get(paste0(\"b\", 1:9))  b #>                                            df      AIC #> models$`yellowfin sole fm_1_s_t_st` 105.06470 13881.31 #> models$`yellowfin sole fm_2_cov`     15.22028 14558.49  # bb <- get(rownames(b)[b$AIC %in% min(b$AIC):(min(b$AIC)+5)]) # b$df %in% min(b$df):(min(b$df)+5)   # bb bb <- models$`yellowfin sole fm_1_s_t_st` # gam.check(bb) vis.gam(bb) cc <- predict.gam(object = bb, newdata = dat[dat$Year == 2021,])  dat0 <- dat[dat$Year == 2021,] %>%    dplyr::mutate(pred = cc)  figure <- ggplot() +   geom_point(data = dat0,               mapping = aes(x= longitude_dd_start, y = latitude_dd_start, color = pred)) figure bb <- models$`yellowfin sole fm_2_cov` # gam.check(bb) vis.gam(bb) cc <- predict.gam(object = bb, newdata = dat[dat$Year == 2021,])  dat0 <- dat[dat$Year == 2021,] %>%    dplyr::mutate(pred = cc)  figure <- ggplot() +   geom_point(data = dat0,               mapping = aes(x= longitude_dd_start, y = latitude_dd_start, color = pred)) figure"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"case-study","dir":"Articles","previous_headings":"","what":"Case study","title":"{sdmgamindex} case study with and without covariates","text":"example, use data NOAA Fisheries’ eastern Bering sea (EBS) bottom trawl survey. Resource Assessment Conservation Engineering (RACE) Division Groundfish Assessment Program (GAP) Alaska Fisheries Science Center (AFSC) conducts fisheries-independent bottom trawl surveys assess populations demersal fish crab stocks Alaska. species covered case study include yellow fin sole, walleye pollock, red king crab.  Yellowfin SoleCommonly caught species realitively easy model assess high abundance, large distribution survey area, consistent availability survey.  Walleye pollockCommon survey, distribution availability survey driven density-dependence temperature cold pool extent. Including covariates model fits help uncover structure help us better understand specie's abundance.  Red King CrabHas patchier less understood availability survey. going estimate indicies species eastern northern Bering Sea shelf. grid designated stations eastern Bering Sea northern Bering Sea bottom trawl survey areas well 50m, 100m, 200m bathymetric boundaries. Credit: NOAA Fisheries sake simple example, assess data 2015 2021.","code":"SPECIES <- c(\"yellowfin sole\", \"walleye pollock\", \"red king crab\") YEARS <- 2015:2023 SRVY <- \"EBS\""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"what-data-area-we-using","dir":"Articles","previous_headings":"","what":"1. What data area we using?","title":"{sdmgamindex} case study with and without covariates","text":", use public facing data NOAA AFSC groundfish Bering sea bottom trawl survey. information data compiled, see afsc-gap-products GitHub repo. 2023 species distribution relative densities (size) bottom temperature (color).","code":"dat <- sdmgamindex::noaa_afsc_public_foss %>%    dplyr::filter(srvy == SRVY &                   year %in% YEARS &                   common_name %in% SPECIES) %>%   dplyr::mutate(hauljoin = paste0(stratum, \"_\", station, \"_\", date_time)) %>%   dplyr::select(     year, date_time, latitude_dd_start, longitude_dd_start, # spatiotemproal data     cpue_kgkm2, common_name, # catch data     bottom_temperature_c, depth_m, # possible covariate data     srvy, area_swept_km2, duration_hr, vessel_id, hauljoin # haul/effort data)   ) table(dat$common_name) #>  #>   red king crab walleye pollock  yellowfin sole  #>            3008            3008            3008 head(dat) #>   year           date_time latitude_dd_start longitude_dd_start cpue_kgkm2 #> 1 2023 2023-07-09 07:27:45          56.65940          -171.3599    0.00000 #> 2 2023 2023-07-09 07:51:03          56.99770          -173.2508    0.00000 #> 3 2023 2023-07-01 07:06:31          57.67576          -170.2871  419.72701 #> 4 2023 2023-06-18 12:58:27          58.00859          -166.5287   79.13648 #> 5 2022 2022-07-24 07:39:26          60.02075          -176.7193    0.00000 #> 6 2022 2022-07-23 16:59:28          59.32891          -177.0694    0.00000 #>     common_name bottom_temperature_c depth_m srvy area_swept_km2 duration_hr #> 1 red king crab                  4.1     119  EBS       0.049888       0.504 #> 2 red king crab                  4.0     142  EBS       0.049980       0.509 #> 3 red king crab                  2.3      73  EBS       0.049842       0.515 #> 4 red king crab                  0.3      61  EBS       0.049939       0.530 #> 5 red king crab                  2.0     141  EBS       0.052054       0.548 #> 6 red king crab                  2.9     150  EBS       0.054499       0.539 #>   vessel_id                    hauljoin #> 1       134 61_F-23_2023-07-09 07:27:45 #> 2       162 61_G-26_2023-07-09 07:51:03 #> 3       134 42_I-21_2023-07-01 07:06:31 #> 4       134 31_J-03_2023-06-18 12:58:27 #> 5        94 61_P-30_2022-07-24 07:39:26 #> 6       162 61_N-31_2022-07-23 16:59:28"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"prepare-the-data-from-sdmgamindexget_surveyidx","dir":"Articles","previous_headings":"","what":"2. Prepare the data from sdmgamindex::get_surveyidx():","title":"{sdmgamindex} case study with and without covariates","text":"","code":"# project spatial data crs_proj <- \"EPSG:3338\" # NAD83 / Alaska Albers crs_latlon <- \"+proj=longlat +datum=WGS84\" # decimal degrees  ll <- sdmgamindex::convert_crs(    x = dat$longitude_dd_start,   y = dat$latitude_dd_start,    crs_in = crs_latlon,    crs_out = crs_proj)   YEARS <- sort(unique(dat$year))  # The sdmgamindex::get_surveyidx() expects some columns to be named in a specific way dat_wrangled <- dat %>%    dplyr::rename(     Year = year,     wCPUE = cpue_kgkm2,      COMMON_NAME = common_name,     GEAR_TEMPERATURE = bottom_temperature_c,      BOTTOM_DEPTH = depth_m,     HaulDur = duration_hr,     EFFORT = area_swept_km2,     Ship = vessel_id) %>%   dplyr::mutate(      # create some other vars     Lon = longitude_dd_start,      Lat = latitude_dd_start,      lon = ll$X,     lat = ll$Y,     sx = ((longitude_dd_start - mean(longitude_dd_start, na.rm = TRUE))/1000),     sy = ((latitude_dd_start - mean(latitude_dd_start, na.rm = TRUE))/1000),      ctime = as.numeric(as.character(Year)),     date_time = as.Date(x = date_time, format = \"%m/%d/%Y %H:%M:%S\"),      hour = as.numeric(format(date_time,\"%H\")),     minute = as.numeric(format(date_time,\"%M\")),     day = as.numeric(format(date_time,\"%d\")),     month = as.numeric(format(date_time,\"%m\")),     TimeShotHour = hour + minute/60,     timeOfYear = (month - 1) * 1/12 + (day - 1)/365,             # add some dummy vars and create some other vars     Country = \"USA\",     Gear = \"dummy\",     Quarter = \"2\")  %>%   dplyr::mutate(across((c(\"Year\", \"Ship\", \"COMMON_NAME\")), as.factor)) %>%    dplyr::select(wCPUE, GEAR_TEMPERATURE, BOTTOM_DEPTH, COMMON_NAME, EFFORT,                  Year, Ship, Lon, Lat, lat, lon, sx, sy,                  ctime, TimeShotHour, timeOfYear, Gear, Quarter, HaulDur, hauljoin) head(dat_wrangled) #>       wCPUE GEAR_TEMPERATURE BOTTOM_DEPTH   COMMON_NAME   EFFORT Year Ship #> 1   0.00000              4.1          119 red king crab 0.049888 2023  134 #> 2   0.00000              4.0          142 red king crab 0.049980 2023  162 #> 3 419.72701              2.3           73 red king crab 0.049842 2023  134 #> 4  79.13648              0.3           61 red king crab 0.049939 2023  134 #> 5   0.00000              2.0          141 red king crab 0.052054 2022   94 #> 6   0.00000              2.9          150 red king crab 0.054499 2022  162 #>         Lon      Lat       lat        lon           sx            sy ctime #> 1 -171.3599 56.65940  877146.6 -1050529.3 -0.002601332 -0.0016013454  2023 #> 2 -173.2508 56.99770  944820.3 -1151106.0 -0.004492212 -0.0012630454  2023 #> 3 -170.2871 57.67576  970747.6  -959416.2 -0.001528562 -0.0005849854  2023 #> 4 -166.5287 58.00859  959133.7  -734085.4  0.002229868 -0.0002521554  2023 #> 5 -176.7193 60.02075 1328406.2 -1237677.9 -0.007960682  0.0017600046  2022 #> 6 -177.0694 59.32891 1262236.5 -1282319.2 -0.008310772  0.0010681646  2022 #>   TimeShotHour timeOfYear  Gear Quarter HaulDur                    hauljoin #> 1            0  0.5219178 dummy       2   0.504 61_F-23_2023-07-09 07:27:45 #> 2            0  0.5219178 dummy       2   0.509 61_G-26_2023-07-09 07:51:03 #> 3            0  0.5000000 dummy       2   0.515 42_I-21_2023-07-01 07:06:31 #> 4            0  0.4632420 dummy       2   0.530 31_J-03_2023-06-18 12:58:27 #> 5            0  0.5630137 dummy       2   0.548 61_P-30_2022-07-24 07:39:26 #> 6            0  0.5602740 dummy       2   0.539 61_N-31_2022-07-23 16:59:28"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"define-representitive-station-points-to-fit-and-predict-the-model-at","dir":"Articles","previous_headings":"","what":"3. Define representitive station points to fit and predict the model at","title":"{sdmgamindex} case study with and without covariates","text":"Since surveys done exact location year (’s intention, impossible practice), need define representative latitudes longitudes going predict . prediction grids AFSC uses 2021 VAST model-based indices (subject change - use without asking/checking still current!). also good shapefile hand crop constrain outputs . AFSC GAP, developed {akgfmaps} R package save share shapefiles.","code":"pred_grid <- sdmgamindex::pred_grid_ebs  ll <- sdmgamindex::convert_crs(    x = pred_grid$lon,   y = pred_grid$lat,    crs_in = crs_latlon,    crs_out = crs_proj)   pred_grid <- pred_grid %>%    dplyr::mutate(      lon = ll$X,     lat = ll$Y,     sx = ((lon - mean(lon, na.rm = TRUE))/1000),     sy = ((lat - mean(lat, na.rm = TRUE))/1000)) head(pred_grid) #> # A tibble: 6 × 5 #>         lon      lat Shape_Area    sx    sy #>       <dbl>    <dbl>      <dbl> <dbl> <dbl> #> 1 -1133214. 1542340.   2449160. -290.  517. #> 2 -1129510. 1542340.   9298535. -287.  517. #> 3 -1125806. 1542340.   9749166. -283.  517. #> 4 -1122102. 1542340.   5383834. -279.  517. #> 5 -1118398. 1542340.   1173734. -275.  517. #> 6 -1140622. 1538636.   1525663. -298.  513. # library(devtools) # devtools::install_github(\"afsc-gap-products/akgfmaps\", build_vignettes = TRUE) library(akgfmaps)  map_layers <- akgfmaps::get_base_layers(   select.region = \"bs.south\",   set.crs = crs_proj)  # Let's just see what that looks like: tmp <- map_layers$survey.area tmp$AREA_KM2 <- tmp$PERIM_KM <- NULL  plot(tmp)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"prepare-covariate-data","dir":"Articles","previous_headings":"","what":"4. Prepare covariate data","title":"{sdmgamindex} case study with and without covariates","text":"want match covariate data prediction grid.","code":"dat_cov <- sdmgamindex::pred_grid_ebs %>%    dplyr::select(-Shape_Area) %>%    dplyr::mutate(      sx = ((lon - mean(lon, na.rm = TRUE))/1000),     sy = ((lat - mean(lat, na.rm = TRUE))/1000))  sp_extrap_raster <- SpatialPoints(   coords = coordinates(as.matrix(dat_cov[,c(\"lon\", \"lat\")])),    proj4string = CRS(crs_latlon) ) dat_cov #> # A tibble: 36,690 × 4 #>      lon   lat       sx      sy #>    <dbl> <dbl>    <dbl>   <dbl> #>  1 -176.  62.1 -0.00748 0.00384 #>  2 -176.  62.1 -0.00741 0.00385 #>  3 -176.  62.2 -0.00735 0.00386 #>  4 -176.  62.2 -0.00728 0.00387 #>  5 -176.  62.2 -0.00721 0.00389 #>  6 -176.  62.1 -0.00759 0.00379 #>  7 -176.  62.1 -0.00752 0.00380 #>  8 -176.  62.1 -0.00746 0.00381 #>  9 -176.  62.1 -0.00739 0.00382 #> 10 -176.  62.1 -0.00732 0.00383 #> # ℹ 36,680 more rows sp_extrap_raster #> class       : SpatialPoints  #> features    : 36690  #> extent      : -178.9664, -157.9516, 54.48348, 62.19158  (xmin, xmax, ymin, ymax) #> crs         : +proj=longlat +datum=WGS84 +no_defs"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"a--data-that-varies-over-only-space-depth","dir":"Articles","previous_headings":"4. Prepare covariate data","what":"4a. Data that varies over only space (depth)","title":"{sdmgamindex} case study with and without covariates","text":"Bering sea, depth rarely changes. modeler may consider making variable time-varying well say, Gulf Alaska Aleutian Islands currents island formation can markedly change depth. , going create raster depth Bering sea survey data can merge dataset prediction grid lat/lons.","code":"x <- dat_wrangled %>%   dplyr::select(Lon, Lat, BOTTOM_DEPTH) %>%   stats::na.omit()  %>%    sf::st_as_sf(x = .,                 coords = c(x = \"Lon\", y = \"Lat\"),                 crs = sf::st_crs(crs_latlon))  idw_fit <- gstat::gstat(formula = BOTTOM_DEPTH ~ 1,                         locations = x,                         nmax = 4)  # stn_predict <- raster::predict(idw_fit, x)  extrap_data0 <- raster::predict(   idw_fit, sp_extrap_raster) %>%   # as(sp_extrap_raster, Class = \"SpatialPoints\")) %>%   sf::st_as_sf() %>%   sf::st_transform(crs = crs_latlon)  %>%   stars::st_rasterize()   extrap_data <- stars::st_extract(x = extrap_data0,                                  at = as.matrix(dat_cov[,c(\"lon\", \"lat\")]))  # to make future runs of this faster: save(extrap_data0, extrap_data,       file = here::here(\"inst\",                        paste0(\"vigD_bottom_depth_raster_\",                                min(YEARS),\"-\",max(YEARS), \".rdata\"))) # Just so we can see what we are looking at: plot(extrap_data0, main = \"Interpolated Bottom Depths\") dat_cov <- cbind.data.frame(dat_cov,                              \"BOTTOM_DEPTH\" = extrap_data$var1.pred) %>%   stats::na.omit()  head(dat_cov) #>         lon      lat           sx          sy BOTTOM_DEPTH #> 1 -176.2068 62.13518 -0.007481089 0.003842524     93.00000 #> 2 -176.1395 62.14603 -0.007413772 0.003853379     93.00000 #> 3 -176.0722 62.15686 -0.007346407 0.003864203     93.00000 #> 4 -176.0047 62.16765 -0.007278995 0.003874995     92.76145 #> 5 -175.9373 62.17841 -0.007211535 0.003885756     92.75523 #> 6 -176.3179 62.08210 -0.007592106 0.003789448     93.00000"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"b--data-that-varies-over-space-and-time-bottom-temperature","dir":"Articles","previous_headings":"4. Prepare covariate data","what":"4b. Data that varies over space and time (bottom temperature)","title":"{sdmgamindex} case study with and without covariates","text":", bottom temperature, thereby cold pool extent, show drive distribution many species. especially true walleye pollock. going lean -house prepared validated pre-prepared {coldpool} R package [@RohanColdPool]. data interpolates whole area survey missing data.","code":"# Just so we can see what we are looking at: #plot(terra::unwrap(coldpool::ebs_bottom_temperature)) tmp <- which(readr::parse_number(names(terra::unwrap(coldpool::ebs_bottom_temperature))) %in% YEARS)  dat_temperature <- terra::unwrap(coldpool::ebs_bottom_temperature)[[tmp]] %>%    terra::extract(y = dat_cov[,c(\"lon\", \"lat\")] %>%                     sf::sf_project(from = \"+proj=longlat\",                                   to = \"EPSG:3338\")) %>%    data.frame() names(dat_temperature) <- paste0(\"GEAR_TEMPERATURE\", YEARS)  dat_cov <- dplyr::bind_cols(dat_cov, dat_temperature) %>%    na.omit() head(dat_cov) #>         lon      lat           sx          sy BOTTOM_DEPTH GEAR_TEMPERATURE2015 #> 2 -176.1395 62.14603 -0.007413772 0.003853379     93.00000          -0.07311002 #> 3 -176.0722 62.15686 -0.007346407 0.003864203     93.00000          -0.07311002 #> 4 -176.0047 62.16765 -0.007278995 0.003874995     92.76145          -0.15166534 #> 7 -176.2507 62.09301 -0.007524943 0.003800355     93.00000           0.06603578 #> 8 -176.1835 62.10389 -0.007457733 0.003811231     93.00000          -0.02377643 #> 9 -176.1162 62.11473 -0.007390475 0.003822076     93.00000          -0.11071504 #>   GEAR_TEMPERATURE2016 GEAR_TEMPERATURE2017 GEAR_TEMPERATURE2018 #> 2          -0.30315974            0.2442329             2.066675 #> 3          -0.30315974            0.2442329             2.066675 #> 4          -0.40172631            0.1406713             2.046152 #> 7          -0.08488923            0.4213759             2.109732 #> 8          -0.18901448            0.3380764             2.087453 #> 9          -0.29478970            0.2444835             2.064520 #>   GEAR_TEMPERATURE2019 GEAR_TEMPERATURE2021 GEAR_TEMPERATURE2022 #> 2             1.242070            0.1678221           -1.1127377 #> 3             1.242070            0.1678221           -1.1127377 #> 4             1.178158            0.1119230           -1.1903751 #> 7             1.372879            0.3057251           -0.9713215 #> 8             1.317465            0.2446349           -1.0861878 #> 9             1.257273            0.1832289           -1.1890295 #>   GEAR_TEMPERATURE2023 #> 2           -0.9886659 #> 3           -0.9886659 #> 4           -1.0962228 #> 7           -0.7410921 #> 8           -0.8782412 #> 9           -1.0114685"},{"path":[]},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"a--catch-data","dir":"Articles","previous_headings":"5. DATRAS structure","what":"5a. Catch Data","title":"{sdmgamindex} case study with and without covariates","text":"","code":"# Identify vars that will be used -------------------------------------------- varsbyyr <- unique( # c(\"GEAR_TEMPERATURE\", \"cpi\")   gsub(pattern = \"[0-9]+\",         replacement = \"\",         x = names(dat_cov)[grepl(names(dat_cov),                                  pattern = \"[0-9]+\")]))  vars <- unique( # c(\"BOTTOM_DEPTH\")   names(dat_cov)[!grepl(names(dat_cov),                          pattern = \"[0-9]+\")]) vars <- vars[!(vars %in% c(\"LONG\", \"LAT\", \"lon\", \"lat\", \"sx\", \"sy\"))]  dat_catch_haul <- dat_wrangled  head(dat_catch_haul) #>       wCPUE GEAR_TEMPERATURE BOTTOM_DEPTH   COMMON_NAME   EFFORT Year Ship #> 1   0.00000              4.1          119 red king crab 0.049888 2023  134 #> 2   0.00000              4.0          142 red king crab 0.049980 2023  162 #> 3 419.72701              2.3           73 red king crab 0.049842 2023  134 #> 4  79.13648              0.3           61 red king crab 0.049939 2023  134 #> 5   0.00000              2.0          141 red king crab 0.052054 2022   94 #> 6   0.00000              2.9          150 red king crab 0.054499 2022  162 #>         Lon      Lat       lat        lon           sx            sy ctime #> 1 -171.3599 56.65940  877146.6 -1050529.3 -0.002601332 -0.0016013454  2023 #> 2 -173.2508 56.99770  944820.3 -1151106.0 -0.004492212 -0.0012630454  2023 #> 3 -170.2871 57.67576  970747.6  -959416.2 -0.001528562 -0.0005849854  2023 #> 4 -166.5287 58.00859  959133.7  -734085.4  0.002229868 -0.0002521554  2023 #> 5 -176.7193 60.02075 1328406.2 -1237677.9 -0.007960682  0.0017600046  2022 #> 6 -177.0694 59.32891 1262236.5 -1282319.2 -0.008310772  0.0010681646  2022 #>   TimeShotHour timeOfYear  Gear Quarter HaulDur                    hauljoin #> 1            0  0.5219178 dummy       2   0.504 61_F-23_2023-07-09 07:27:45 #> 2            0  0.5219178 dummy       2   0.509 61_G-26_2023-07-09 07:51:03 #> 3            0  0.5000000 dummy       2   0.515 42_I-21_2023-07-01 07:06:31 #> 4            0  0.4632420 dummy       2   0.530 31_J-03_2023-06-18 12:58:27 #> 5            0  0.5630137 dummy       2   0.548 61_P-30_2022-07-24 07:39:26 #> 6            0  0.5602740 dummy       2   0.539 61_N-31_2022-07-23 16:59:28 allpd <- lapply(YEARS,                  FUN = sdmgamindex::get_prediction_grid,                  x = dat_cov,                  vars = vars,                  varsbyyr = varsbyyr) names(allpd) <- as.character(YEARS) head(allpd[1][[1]]) #>         lon      lat           sx          sy BOTTOM_DEPTH GEAR_TEMPERATURE #> 2 -176.1395 62.14603 -0.007413772 0.003853379     93.00000      -0.07311002 #> 3 -176.0722 62.15686 -0.007346407 0.003864203     93.00000      -0.07311002 #> 4 -176.0047 62.16765 -0.007278995 0.003874995     92.76145      -0.15166534 #> 7 -176.2507 62.09301 -0.007524943 0.003800355     93.00000       0.06603578 #> 8 -176.1835 62.10389 -0.007457733 0.003811231     93.00000      -0.02377643 #> 9 -176.1162 62.11473 -0.007390475 0.003822076     93.00000      -0.11071504 #>   EFFORT #> 2      1 #> 3      1 #> 4      1 #> 7      1 #> 8      1 #> 9      1"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"b--covariate-data","dir":"Articles","previous_headings":"5. DATRAS structure","what":"5b. Covariate Data","title":"{sdmgamindex} case study with and without covariates","text":"","code":"## split data by species, make into DATRASraw + Nage matrix ds <- split(dat_catch_haul,dat_catch_haul$COMMON_NAME) ds <- lapply(ds, sdmgamindex::get_datrasraw) ## OBS, response is added here in \"Nage\" matrix -- use wCPUE ds <- lapply(ds,function(x) { x[[2]]$Nage <- matrix(x$wCPUE,ncol=1); colnames(x[[2]]$Nage)<-1; x } ) save(ds, file = here::here(\"inst\",paste0(\"vigD_DATRAS.Rdata\"))) ds #> $`red king crab` #> Object of class 'DATRASraw' #> =========================== #> Number of hauls: 3008  #> Number of species: 0  #> Number of countries: 0  #> Years: 2015 2016 2017 2018 2019 2021 2022 2023  #> Quarters:  #> Gears:  #> Haul duration: 0.189 - 0.656 minutes #>  #> $`walleye pollock` #> Object of class 'DATRASraw' #> =========================== #> Number of hauls: 3008  #> Number of species: 0  #> Number of countries: 0  #> Years: 2015 2016 2017 2018 2019 2021 2022 2023  #> Quarters:  #> Gears:  #> Haul duration: 0.189 - 0.656 minutes #>  #> $`yellowfin sole` #> Object of class 'DATRASraw' #> =========================== #> Number of hauls: 3008  #> Number of species: 0  #> Number of countries: 0  #> Years: 2015 2016 2017 2018 2019 2021 2022 2023  #> Quarters:  #> Gears:  #> Haul duration: 0.189 - 0.656 minutes"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"formulas","dir":"Articles","previous_headings":"","what":"6. Formulas","title":"{sdmgamindex} case study with and without covariates","text":"","code":"fm <-  list(   # Null model spatial and temporal with an additional year effect   \"fm_1_s_t_st\" = \"Year +     s(sx,sy,bs=c('ts'),k=376) +     s(sx,sy,bs=c('ts'),k=10,by=Year)\",      # Mdoel with simple covariates   \"fm_2_cov\" =     \"s(BOTTOM_DEPTH,bs='ts',k=10) + s(log(GEAR_TEMPERATURE+3),bs='ts',k=10)\",  # Mdoel with simple covariates and spatial and temporal with an additional year effect \"fm_3_s_t_st_cov\" =   \"Year +     s(sx,sy,bs=c('ts'),k=376) +     s(sx,sy,bs=c('ts'),k=10,by=Year) +      s(BOTTOM_DEPTH,bs='ts',k=10) + s(log(GEAR_TEMPERATURE+3),bs='ts',k=10)\" )"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"fit-the-model","dir":"Articles","previous_headings":"","what":"7. Fit the Model","title":"{sdmgamindex} case study with and without covariates","text":"models want try fitting: model df AIC dAIC red king crab fm_1_s_t_st 154.49858 12,311.62 83.39 red king crab fm_2_cov 16.90395 13,568.53 1,340.29 red king crab fm_3_s_t_st_cov 156.75224 12,228.24 0.00 walleye pollock fm_1_s_t_st 197.59827 58,792.61 46,564.37 walleye pollock fm_2_cov 18.36274 59,795.46 47,567.23 walleye pollock fm_3_s_t_st_cov 216.42478 58,550.37 46,322.13 yellowfin sole fm_1_s_t_st 238.72208 36,516.28 24,288.04 yellowfin sole fm_2_cov 16.24816 38,060.37 25,832.13 yellowfin sole fm_3_s_t_st_cov 202.01411 36,401.06 24,172.82","code":"models <- fittimes <- list()  for(i in 1:nrow(comb)){   cat(\"Fitting \",comb$SPECIES[i],\"\\n\", comb$fm_name[i], \": \", comb$fm[i], \"\\n\")      temp <- paste0(comb$SPECIES[i], \" \", comb$fm_name[i])      fittimes[[ temp ]] <-     system.time ( models[[ temp ]] <-                     sdmgamindex::get_surveyidx(                       x = ds[[ comb$SPECIES[i] ]],                       ages = 1,                       myids = NULL,                       predD = allpd,                       cutOff = 0,                       fam = \"Tweedie\",                       modelP = comb$fm[i],                       gamma = 1,                       control = list(trace = TRUE,                                      maxit = 20))  )      model <- models[[ temp ]]   fittime <- fittimes[[ temp ]]      save(model, fittime, file = here::here(\"inst\",paste0(\"vigD_model_fits_\",comb$SPECIES[i], \"_\", comb$fm_name[i],\".Rdata\"))) } #>  #> red king crab fm_1_s_t_st: 1.3e+03 minutes #> red king crab fm_2_cov:  41 minutes #> red king crab fm_3_s_t_st_cov: 1.6e+03 minutes #> walleye pollock fm_1_s_t_st: 1.7e+03 minutes #> walleye pollock fm_2_cov:  40 minutes #> walleye pollock fm_3_s_t_st_cov: 1.8e+03 minutes #> yellowfin sole fm_1_s_t_st: 1.4e+03 minutes #> yellowfin sole fm_2_cov:  41 minutes #> yellowfin sole fm_3_s_t_st_cov: 1.4e+03 minutes aic <- AIC(   models$`red king crab fm_1_s_t_st`$pModels[[1]],    models$`red king crab fm_2_cov`$pModels[[1]],    models$`red king crab fm_3_s_t_st_cov`$pModels[[1]],    models$`walleye pollock fm_1_s_t_st`$pModels[[1]],    models$`walleye pollock fm_2_cov`$pModels[[1]],    models$`walleye pollock fm_3_s_t_st_cov`$pModels[[1]],    models$`yellowfin sole fm_1_s_t_st`$pModels[[1]],    models$`yellowfin sole fm_2_cov`$pModels[[1]],    models$`yellowfin sole fm_3_s_t_st_cov`$pModels[[1]]) %>%    dplyr::mutate(dAIC = round(AIC-min(AIC), digits = 2))  # AIC(sapply(sapply(models,\"[[\",'pModels'),\"[[\",1)) # sdmgamindex::get_surveyidx_aic(x = models) aic %>%    tibble::rownames_to_column(\"model\") %>%    dplyr::mutate(model = gsub(pattern = \"models$`\", replacement = \"\", x = model, fixed = TRUE),                  model = gsub(pattern = \"`$pModels[[1]]\", replacement = \"\", x = model, fixed = TRUE)) %>%   flextable::flextable() %>%    flextable::width(j = \"model\", width = 3, unit = \"in\") lapply(models,function(x) gam.check(x$pModels[[1]])) ## Model summaries lapply(models,function(x) summary(x$pModels[[1]])) #> $`red king crab fm_1_s_t_st` #>  #> Family: Tweedie(p=1.446)  #> Link function: log  #>  #> Formula: #> A1 ~ Year + s(sx, sy, bs = c(\"ts\"), k = 376) + s(sx, sy, bs = c(\"ts\"),  #>     k = 10, by = Year) #>  #> Parametric coefficients: #>             Estimate Std. Error t value Pr(>|t|)   #> (Intercept) -1.98012    1.25695  -1.575   0.1153   #> Year2016    -0.26703    0.23477  -1.137   0.2555   #> Year2017     0.01753    0.20073   0.087   0.9304   #> Year2018    -0.43054    0.20678  -2.082   0.0374 * #> Year2019    -0.07056    0.38366  -0.184   0.8541   #> Year2021     0.33813    0.21900   1.544   0.1227   #> Year2022     0.18401    0.21417   0.859   0.3903   #> Year2023    -0.14346    0.20276  -0.708   0.4793   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                           edf Ref.df     F              p-value     #> s(sx,sy)          129.3276662    375 4.974 < 0.0000000000000002 *** #> s(sx,sy):Year2015   1.9324308      9 4.208 < 0.0000000000000002 *** #> s(sx,sy):Year2016   1.8720437      9 2.599           0.00000294 *** #> s(sx,sy):Year2017   0.0009186      9 0.000             0.271236     #> s(sx,sy):Year2018   0.0008940      9 0.000             0.505286     #> s(sx,sy):Year2019   3.6437459      9 1.880             0.000612 *** #> s(sx,sy):Year2021   1.7831412      9 2.353           0.00000607 *** #> s(sx,sy):Year2022   1.0083459      9 0.337             0.049150 *   #> s(sx,sy):Year2023   0.0002364      9 0.000             0.574074     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.383   Deviance explained = 80.9% #> -ML =   6254  Scale est. = 24.547    n = 3008 #>  #> $`red king crab fm_2_cov` #>  #> Family: Tweedie(p=1.551)  #> Link function: log  #>  #> Formula: #> A1 ~ s(BOTTOM_DEPTH, bs = \"ts\", k = 10) + s(log(GEAR_TEMPERATURE +  #>     3), bs = \"ts\", k = 10) #>  #> Parametric coefficients: #>             Estimate Std. Error t value Pr(>|t|)   #> (Intercept)   0.8184     0.3276   2.498   0.0125 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                                edf Ref.df     F             p-value     #> s(BOTTOM_DEPTH)              6.032      9 64.85 <0.0000000000000002 *** #> s(log(GEAR_TEMPERATURE + 3)) 6.533      9 33.04 <0.0000000000000002 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.0909   Deviance explained = 49.8% #> -ML = 6806.2  Scale est. = 33.425    n = 3008 #>  #> $`red king crab fm_3_s_t_st_cov` #>  #> Family: Tweedie(p=1.433)  #> Link function: log  #>  #> Formula: #> A1 ~ Year + s(sx, sy, bs = c(\"ts\"), k = 376) + s(sx, sy, bs = c(\"ts\"),  #>     k = 10, by = Year) + s(BOTTOM_DEPTH, bs = \"ts\", k = 10) +  #>     s(log(GEAR_TEMPERATURE + 3), bs = \"ts\", k = 10) #>  #> Parametric coefficients: #>             Estimate Std. Error t value Pr(>|t|) #> (Intercept)  -1.2071     1.2522  -0.964    0.335 #> Year2016     -0.8059     0.9654  -0.835    0.404 #> Year2017     -1.3099     0.9539  -1.373    0.170 #> Year2018     -1.5325     0.9558  -1.603    0.109 #> Year2019     -0.8059     1.0276  -0.784    0.433 #> Year2021     -0.9672     0.9580  -1.010    0.313 #> Year2022     -1.1494     0.9578  -1.200    0.230 #> Year2023     -1.5415     0.9560  -1.612    0.107 #>  #> Approximate significance of smooth terms: #>                                      edf Ref.df     F              p-value     #> s(sx,sy)                     112.2583917    375 3.061 < 0.0000000000000002 *** #> s(sx,sy):Year2015              6.8322604      9 9.486 < 0.0000000000000002 *** #> s(sx,sy):Year2016              1.6506829      9 1.452             0.000303 *** #> s(sx,sy):Year2017              0.0002462      9 0.000             0.429081     #> s(sx,sy):Year2018              0.0010538      9 0.000             0.484492     #> s(sx,sy):Year2019              4.2828597      9 2.860            0.0000132 *** #> s(sx,sy):Year2021              1.6758276      9 1.769            0.0000654 *** #> s(sx,sy):Year2022              1.0851801      9 0.399             0.035837 *   #> s(sx,sy):Year2023              0.0004316      9 0.000             0.423626     #> s(BOTTOM_DEPTH)                3.7496746      9 4.081 < 0.0000000000000002 *** #> s(log(GEAR_TEMPERATURE + 3))   5.3404899      9 8.482 < 0.0000000000000002 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.466   Deviance explained = 82.1% #> -ML = 6222.4  Scale est. = 24.551    n = 3008 #>  #> $`walleye pollock fm_1_s_t_st` #>  #> Family: Tweedie(p=1.852)  #> Link function: log  #>  #> Formula: #> A1 ~ Year + s(sx, sy, bs = c(\"ts\"), k = 376) + s(sx, sy, bs = c(\"ts\"),  #>     k = 10, by = Year) #>  #> Parametric coefficients: #>             Estimate Std. Error t value             Pr(>|t|)     #> (Intercept)  9.23060    0.05088 181.433 < 0.0000000000000002 *** #> Year2016    -0.34496    0.07286  -4.734 0.000002304557164575 *** #> Year2017    -0.25207    0.07261  -3.472             0.000525 *** #> Year2018    -0.88267    0.07448 -11.851 < 0.0000000000000002 *** #> Year2019    -0.41853    0.07320  -5.718 0.000000011931844893 *** #> Year2021    -0.86765    0.07432 -11.674 < 0.0000000000000002 *** #> Year2022    -0.60495    0.07364  -8.215 0.000000000000000319 *** #> Year2023    -0.78230    0.07400 -10.572 < 0.0000000000000002 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                          edf Ref.df      F              p-value     #> s(sx,sy)          166.073525    375  4.418 < 0.0000000000000002 *** #> s(sx,sy):Year2015   0.002624      9  0.000              0.99690     #> s(sx,sy):Year2016   1.773308      9  1.107              0.00308 **  #> s(sx,sy):Year2017   1.875983      9  6.011 < 0.0000000000000002 *** #> s(sx,sy):Year2018   7.895874      9 12.792 < 0.0000000000000002 *** #> s(sx,sy):Year2019   1.963464      9  5.689 < 0.0000000000000002 *** #> s(sx,sy):Year2021   1.057997      9  0.270              0.09881 .   #> s(sx,sy):Year2022   1.913812      9  3.195          0.000000625 *** #> s(sx,sy):Year2023   0.005541      9  0.000              0.79914     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.157   Deviance explained = 40.5% #> -ML =  29507  Scale est. = 3.8493    n = 3008 #>  #> $`walleye pollock fm_2_cov` #>  #> Family: Tweedie(p=1.885)  #> Link function: log  #>  #> Formula: #> A1 ~ s(BOTTOM_DEPTH, bs = \"ts\", k = 10) + s(log(GEAR_TEMPERATURE +  #>     3), bs = \"ts\", k = 10) #>  #> Parametric coefficients: #>             Estimate Std. Error t value            Pr(>|t|)     #> (Intercept)  8.98071    0.02158   416.2 <0.0000000000000002 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                                edf Ref.df     F             p-value     #> s(BOTTOM_DEPTH)              6.340      9 33.86 <0.0000000000000002 *** #> s(log(GEAR_TEMPERATURE + 3)) 7.483      9 12.77 <0.0000000000000002 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.0501   Deviance explained = 13.4% #> -ML =  29917  Scale est. = 3.9341    n = 3008 #>  #> $`walleye pollock fm_3_s_t_st_cov` #>  #> Family: Tweedie(p=1.845)  #> Link function: log  #>  #> Formula: #> A1 ~ Year + s(sx, sy, bs = c(\"ts\"), k = 376) + s(sx, sy, bs = c(\"ts\"),  #>     k = 10, by = Year) + s(BOTTOM_DEPTH, bs = \"ts\", k = 10) +  #>     s(log(GEAR_TEMPERATURE + 3), bs = \"ts\", k = 10) #>  #> Parametric coefficients: #>             Estimate Std. Error t value             Pr(>|t|)     #> (Intercept)  9.28409    0.05025 184.775 < 0.0000000000000002 *** #> Year2016    -0.10527    0.07787  -1.352              0.17651     #> Year2017    -0.54712    0.07343  -7.451    0.000000000000123 *** #> Year2018    -0.80830    0.07761 -10.415 < 0.0000000000000002 *** #> Year2019    -0.23379    0.07802  -2.997              0.00275 **  #> Year2021    -1.06709    0.07515 -14.199 < 0.0000000000000002 *** #> Year2022    -0.99166    0.07624 -13.008 < 0.0000000000000002 *** #> Year2023    -1.20438    0.07827 -15.388 < 0.0000000000000002 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                                    edf Ref.df      F              p-value     #> s(sx,sy)                     163.87357    375  3.153 < 0.0000000000000002 *** #> s(sx,sy):Year2015              0.03236      9  0.002             0.260260     #> s(sx,sy):Year2016              1.97517      9  5.699 < 0.0000000000000002 *** #> s(sx,sy):Year2017              1.56004      9  1.230             0.000361 *** #> s(sx,sy):Year2018              8.13378      9 14.218 < 0.0000000000000002 *** #> s(sx,sy):Year2019              1.61099      9  0.801             0.006697 **  #> s(sx,sy):Year2021              1.29987      9  0.519             0.018928 *   #> s(sx,sy):Year2022              6.51218      9  3.296            0.0000113 *** #> s(sx,sy):Year2023              1.61223      9  0.834             0.005508 **  #> s(BOTTOM_DEPTH)                5.42839      9  3.259 < 0.0000000000000002 *** #> s(log(GEAR_TEMPERATURE + 3))   6.16829      9 23.184 < 0.0000000000000002 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.194   Deviance explained = 45.1% #> -ML =  29411  Scale est. = 3.7982    n = 3008 #>  #> $`yellowfin sole fm_1_s_t_st` #>  #> Family: Tweedie(p=1.583)  #> Link function: log  #>  #> Formula: #> A1 ~ Year + s(sx, sy, bs = c(\"ts\"), k = 376) + s(sx, sy, bs = c(\"ts\"),  #>     k = 10, by = Year) #>  #> Parametric coefficients: #>             Estimate Std. Error t value            Pr(>|t|)     #> (Intercept)  3.77833    0.14960  25.256 <0.0000000000000002 *** #> Year2016     0.94125    0.11169   8.427 <0.0000000000000002 *** #> Year2017     1.02760    0.11113   9.247 <0.0000000000000002 *** #> Year2018     0.98426    0.11136   8.839 <0.0000000000000002 *** #> Year2019     1.55079    0.13805  11.233 <0.0000000000000002 *** #> Year2021     0.07911    0.11504   0.688              0.4917     #> Year2022     0.24894    0.11536   2.158              0.0310 *   #> Year2023    -0.30006    0.11907  -2.520              0.0118 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                          edf Ref.df      F              p-value     #> s(sx,sy)          203.387176    375 12.980 < 0.0000000000000002 *** #> s(sx,sy):Year2015   3.355870      9  5.615 < 0.0000000000000002 *** #> s(sx,sy):Year2016   1.956443      9  4.658 < 0.0000000000000002 *** #> s(sx,sy):Year2017   1.963583      9  4.683 < 0.0000000000000002 *** #> s(sx,sy):Year2018   2.015209      9 10.482 < 0.0000000000000002 *** #> s(sx,sy):Year2019   7.347153      9 22.577 < 0.0000000000000002 *** #> s(sx,sy):Year2021   0.003934      9  0.000              0.48971     #> s(sx,sy):Year2022   1.605472      9  0.886              0.00503 **  #> s(sx,sy):Year2023   1.351760      9  0.756              0.00561 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.479   Deviance explained = 85.6% #> -ML =  18452  Scale est. = 17.843    n = 3008 #>  #> $`yellowfin sole fm_2_cov` #>  #> Family: Tweedie(p=1.621)  #> Link function: log  #>  #> Formula: #> A1 ~ s(BOTTOM_DEPTH, bs = \"ts\", k = 10) + s(log(GEAR_TEMPERATURE +  #>     3), bs = \"ts\", k = 10) #>  #> Parametric coefficients: #>             Estimate Std. Error t value            Pr(>|t|)     #> (Intercept)   4.9689     0.1311   37.91 <0.0000000000000002 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                                edf Ref.df      F             p-value     #> s(BOTTOM_DEPTH)              5.717      9 322.67 <0.0000000000000002 *** #> s(log(GEAR_TEMPERATURE + 3)) 7.157      9  65.97 <0.0000000000000002 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.301   Deviance explained = 69.2% #> -ML =  19054  Scale est. = 24.209    n = 3008 #>  #> $`yellowfin sole fm_3_s_t_st_cov` #>  #> Family: Tweedie(p=1.588)  #> Link function: log  #>  #> Formula: #> A1 ~ Year + s(sx, sy, bs = c(\"ts\"), k = 376) + s(sx, sy, bs = c(\"ts\"),  #>     k = 10, by = Year) + s(BOTTOM_DEPTH, bs = \"ts\", k = 10) +  #>     s(log(GEAR_TEMPERATURE + 3), bs = \"ts\", k = 10) #>  #> Parametric coefficients: #>             Estimate Std. Error t value             Pr(>|t|)     #> (Intercept)  3.79038    0.14456  26.221 < 0.0000000000000002 *** #> Year2016     0.56834    0.09456   6.010        0.00000000209 *** #> Year2017     0.90729    0.08819  10.288 < 0.0000000000000002 *** #> Year2018     0.58164    0.09561   6.083        0.00000000134 *** #> Year2019     1.17479    0.13219   8.887 < 0.0000000000000002 *** #> Year2021    -0.20346    0.09928  -2.049              0.04053 *   #> Year2022     0.12633    0.10079   1.253              0.21016     #> Year2023    -0.29181    0.10680  -2.732              0.00633 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                                      edf Ref.df      F              p-value     #> s(sx,sy)                     159.2359674    375  4.277 < 0.0000000000000002 *** #> s(sx,sy):Year2015              1.8021361      9  2.059            0.0000292 *** #> s(sx,sy):Year2016              0.0004319      9  0.000                0.427     #> s(sx,sy):Year2017              0.0232099      9  0.003                0.329     #> s(sx,sy):Year2018              1.8392011      9  2.161            0.0000213 *** #> s(sx,sy):Year2019              7.8978827      9 17.041 < 0.0000000000000002 *** #> s(sx,sy):Year2021              1.9647717      9  4.986 < 0.0000000000000002 *** #> s(sx,sy):Year2022              1.9881936      9  8.208 < 0.0000000000000002 *** #> s(sx,sy):Year2023              1.9869675      9  7.013 < 0.0000000000000002 *** #> s(BOTTOM_DEPTH)                5.2738584      9 17.689 < 0.0000000000000002 *** #> s(log(GEAR_TEMPERATURE + 3))   5.3655026      9 12.804 < 0.0000000000000002 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =   0.49   Deviance explained = 85.8% #> -ML =  18353  Scale est. = 16.809    n = 3008"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"indicies-of-abundance","dir":"Articles","previous_headings":"","what":"8. Indicies of Abundance","title":"{sdmgamindex} case study with and without covariates","text":"","code":"dat_design <- dplyr::bind_rows(   sdmgamindex::noaa_afsc_biomass_estimates %>%     dplyr::filter(survey_definition_id == 98 &                     year %in% YEARS &                     species_code %in% c(21740, 10210))  %>%     dplyr::mutate(common_name = dplyr::case_when(       species_code == 21740 ~ \"walleye pollock\",       species_code == 10210 ~ \"yellowfin sole\")) %>%     dplyr::select(Year = year, Estimate_metric_tons = biomass_mt, SD_mt = biomass_var, common_name) ,   read.csv(file = system.file(\"RKC_Table_for_SS3.csv\",                               package = \"sdmgamindex\" )) %>%     dplyr::mutate(common_name = \"red king crab\") %>%     dplyr::select(-Unit, -Fleet, -SD_log)) %>%   dplyr::rename(design_mt = Estimate_metric_tons,                 design_se = SD_mt) %>%   dplyr::mutate(design_se = (design_se)^2,                 design_CV = NA,                 VAST_mt = NA,                 VAST_se = NA,                 VAST_CV = NA)  dat <- data.frame() for (i in 1:length(models)){   temp <- models[[i]]   dat0 <- data.frame(idx = temp$idx[,1]/1e2, # clearly having an issue with units                      lo = temp$lo[,1]/1e2,                       up = temp$up[,1]/1e2,                      Year = rownames(temp$idx),                       group = names(models)[i],                      formula = paste0(\"cpue_kgkm2 ~ \",                                        as.character(temp$pModels[[1]]$formula)[[3]]))      dat <- dplyr::bind_rows(dat, dat0)  }  dat$common_name <- paste0(sapply(X = strsplit(x = dat$group, split = \" fm\"), `[`, 1))  dat <- dplyr::bind_rows(dat %>%                            dplyr::mutate(Year = as.numeric(Year)) %>%                            dplyr::select(-group),                          dat_design %>%                            dplyr::select(design_mt, common_name, Year) %>%                           dplyr::rename(idx = design_mt) %>%                           dplyr::mutate(lo = NA,                                          up = NA,                                          formula = \"design\")) %>%    dplyr::filter(Year %in% YEARS[-1])  dat[dat$Year == 2020, c(\"idx\", \"up\", \"lo\")] <- NA  ggplot2::ggplot(data = dat,                 mapping = aes(x = Year,                                y = idx,                                group = formula,                                color = formula)) +   ggplot2::geom_line(size = 1.5) +    ggplot2::geom_point(size = 2)  +    ggplot2::geom_ribbon(aes(ymin = lo, ymax = up, fill = formula),                         alpha=0.1,                         linetype=\"dashed\",                        color=\"grey\") +    ggplot2::ggtitle(\"Annual Index Model Results\") +   ggplot2::scale_y_continuous(name = \"Index\", labels = scales::comma) +   ggplot2::facet_wrap(vars(common_name), scales = \"free\", ncol = 1) +   ggplot2::theme_bw() +   ggplot2::theme(legend.position = \"bottom\",                   legend.direction = \"vertical\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"predict-and-plot","dir":"Articles","previous_headings":"","what":"9. Predict and plot","title":"{sdmgamindex} case study with and without covariates","text":"","code":"# for (i in 1:length(unique(dat$facet_group))){ # library(akgfmaps) # idw <- akgfmaps::make_idw_stack( #   x = dat %>%  #     dplyr::filter(facet_group == unique(dat$facet_group)[i]),  #   region = \"bs.south\",  #   grouping.vars = \"aa\",  #   extrapolation.grid.type = \"sf\") #  # reg_dat = akgfmaps::get_base_layers( #       select.region = \"bs.south\",  #       set.crs = out.crs) #  # figure <- ggplot() + #     ggplot2::geom_sf(data = reg_dat0$akland, #                      color = NA, #                      fill = \"grey50\")  + #     ggplot2::geom_sf(data = reg_dat0$graticule, #                      color = \"grey80\", #                      alpha = 0.2) + #     ggplot2::scale_y_continuous(name = \"\", #\"Latitude\", #                                 limits = reg_dat0$plot.boundary$y, #                                 breaks = reg_dat0$lat.breaks) + #     ggplot2::scale_x_continuous(name = \"\", #\"Longitude\", #                                 limits = reg_dat0$plot.boundary$x, #                                 breaks = reg_dat0$lon.breaks) +  #     geom_sf(data = idw$extrapolation.stack, #             mapping = aes(fill = var1.pred), #             na.rm = FALSE, #             show.legend = TRUE,  #             color = NA) + #     ggplot2::facet_wrap( ~ YEAR, nrow = row0) +  #     coord_sf() +  #     ggplot2::scale_fill_manual( #       name = key.title, #       values =  c(\"gray90\", #                   viridis::viridis( #                     option = viridis_palette_option, #                     direction = -1, #                     n = length(set.breaks)-1, #                     begin = 0.20, #                     end = 0.80)), #       na.translate = FALSE, # Don't use NA #       drop = FALSE) +  #     ggplot2::geom_sf( #       data = reg_dat0$survey.area,  #       mapping = aes(color = SURVEY,  #                     geometry = geometry),  #       fill = \"transparent\",  #       linewidth = ifelse(row0 > 2, 1.5, 1),  #       show.legend = FALSE) + #     ggplot2::scale_color_manual( #       name = \" \",  #       values = reg_dat0$survey.area$color, #       breaks = reg_dat0$survey.area$SURVEY, #       labels = reg_dat0$survey.area$SRVY) +  #     ggplot2::guides( #       fill = guide_legend( #         order = 1, #         title.position = \"top\", #         label.position = \"bottom\", #         title.hjust = 0.5, #         override.aes = list(color = NA), #         nrow = 1), #       color = \"none\") #  #   ggsave(filename = paste0(\"vigD_model_fit_idw_\", unique(dat$facet_group)[i], \".png\"),  #          path = here::here(\"inst\"),  #          plot = figure,  #          # device = \"png\", #          width = 6.5, height = 10) # } # sdmgamindex::plot_surveyidx( #   x = models, #   dat = ds, #   myids = NULL, #   predD = allpd)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/articles/D-simple-case-study.html","id":"simulations","dir":"Articles","previous_headings":"","what":"10. Simulations","title":"{sdmgamindex} case study with and without covariates","text":"","code":"sims <- fittimes_sims <- list() for(i in 1:nrow(comb)){    cat(\"Simulating \",comb$SPECIES[i],\"\\n\", comb$fm_name[i], \": \", comb$fm[i], \"\\n\")    temp <- paste0(comb$SPECIES[i], \" \", comb$fm_name[i])    fittimes[[ temp ]] <-     system.time ( sims[[ temp ]] <-                     sdmgamindex::get_surveyidx_sim(                       model = models[[i]],                       d = ds[[ comb$SPECIES[i] ]]) ) } par(mfrow = c(2, 2)) # Create a 2 x 2 plotting matrix for(i in 1:nrow(comb)){   plot(sims[[i]]$sim, main = paste0(names(sims)[i], \" sims\"))   plot(sims[[i]]$mu[[1]], main = paste0(names(sims)[i], \" mu\")) } REPS <- 4 ests <- list()  for(i in 1:nrow(comb)){      cat(\"Simulating \",comb$SPECIES[i],\"\\n\", comb$fm_name[i], \": \", comb$fm[i], \"\\n\")   temp <- paste0(comb$SPECIES[i], \" \", comb$fm_name[i])      # for(SPECIES in specLevels){   ests[[ temp ]] <- list()      ## simulate data   csim <- sdmgamindex::get_surveyidx_sim(models[[i]], ds[[comb$SPECIES[i]]])   sims <-lapply(1:REPS,function(j) sdmgamindex::get_surveyidx_sim(     model = models[[i]],     d = ds[[comb$SPECIES[i]]],      sampleFit = FALSE,     condSim = csim) )      ## re-estimate   tmp <- ds[[i]]   for(ii in 1:REPS) {     tmp[[2]]$Nage <- matrix(sims[[ii]][[1]][,1],ncol=1)     colnames(tmp$Nage)<-1          ests[[SPECIES]][[ii]]  <-       sdmgamindex::get_surveyidx(         x = tmp,         ages = 1,         myids=NULL,         predD=allpd,         cutOff=0,         fam=\"Tweedie\",         modelP=fm,         gamma=1,         control=list(trace=TRUE,maxit=10))   } }  sims ests  png(filename = here::here(\"inst\",\"simest.png\"),     width=640*pngscal,height=480) # par(mfrow=c(2,2)) save(sims, ests, file = here::here(\"inst\",\"vigD_model_sims.Rdata\")) for(i in 1:nrow(comb)){   sdmgamindex::plot_simulation_list(     x = ests[[temp]],     base=models[[temp]],     main=temp,     lwd=2) } dev.off()"},{"path":[]},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emily Markowitz. Author, maintainer. Margaret Siple. Author. Casper Berg. Author.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Markowitz E, Siple M, Berg C (2024). sdmgamindex: Calculate survey indices abundance DATRAS exchange data. R package version 0.1.1, https://emilymarkowitz-noaa.github.io/sdmgamindex/.","code":"@Manual{,   title = {sdmgamindex: Calculate survey indices of abundance from DATRAS exchange data},   author = {Emily Markowitz and Margaret Siple and Casper Berg},   year = {2024},   note = {R package version 0.1.1},   url = {https://emilymarkowitz-noaa.github.io/sdmgamindex/}, }"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/index.html","id":"sdmgamindex-","dir":"","previous_headings":"","what":"Calculate survey indices of abundance from DATRAS exchange data","title":"Calculate survey indices of abundance from DATRAS exchange data","text":"repository previously forked casperwberg/surveyIndex previously named emilymarkowitz-noaa/surveyIndex. R package calculating survey indices age DATRAS exchange data.  code always development. Find code used various reports code releases.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/index.html","id":"code-has-been-modified-and-adapted-by","dir":"","previous_headings":"","what":"Code has been modified and adapted by:","title":"Calculate survey indices of abundance from DATRAS exchange data","text":"Emily Markowitz (Emily.Markowitz noaa.gov; @EmilyMarkowitz-NOAA) Margaret Siple (Margaret.Siple noaa.gov; @MargaretSiple-noaa) Alaska Fisheries Science Center National Marine Fisheries Service National Oceanic Atmospheric Administration Seattle, WA 98195","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/index.html","id":"code-was-originally-developed-by","dir":"","previous_headings":"","what":"Code was originally developed by:","title":"Calculate survey indices of abundance from DATRAS exchange data","text":"Casper W. Berg (https://orbit.dtu.dk/en/persons/casper-willestofte-berg; @casperwberg) National Institute Aquatic Resources, Technical University Denmark Based work published : Berg et al. (2014) Repository: remotes::install_github(\"casperwberg/surveyIndex/surveyIndex\")","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate survey indices of abundance from DATRAS exchange data","text":"install need DATRAS package","code":"library(remotes) remotes::install_github(\"DTUAqua/DATRAS/DATRAS\") # remotes::install_github(\"casperwberg/sdmgamindex/sdmgamindex\") remotes::install_github(\"emilymarkowitz-noaa/sdmgamindex\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Calculate survey indices of abundance from DATRAS exchange data","text":"See examples pkgdown site ?get_surveyidx() documentation.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/index.html","id":"metadata","dir":"","previous_headings":"","what":"Metadata","title":"Calculate survey indices of abundance from DATRAS exchange data","text":"package last produced using:","code":"## R version 4.3.1 (2023-06-16 ucrt) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 19045) ##  ## Matrix products: default ##  ##  ## locale: ## [1] LC_COLLATE=English_United States.utf8  LC_CTYPE=English_United States.utf8    LC_MONETARY=English_United States.utf8 ## [4] LC_NUMERIC=C                           LC_TIME=English_United States.utf8     ##  ## time zone: America/Los_Angeles ## tzcode source: internal ##  ## attached base packages: ## [1] parallel  stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ##  [1] knitr_1.45     badger_0.2.3   pkgdown_2.0.7  tweedie_2.3.5  MASS_7.3-60    sf_1.0-15      sp_2.1-3       RANN_2.6.1     ##  [9] marmap_1.0.10  mapdata_2.3.1  maps_3.4.2     tidyr_1.3.1    mgcv_1.9-1     nlme_3.1-164   RODBC_1.3-23   roxygen2_7.3.1 ## [17] devtools_2.4.5 usethis_2.2.3  here_1.0.1     ##  ## loaded via a namespace (and not attached): ##  [1] DBI_1.2.2           httr2_1.0.0         remotes_2.4.2.1     rlang_1.1.3         magrittr_2.0.3      e1071_1.7-14        ##  [7] compiler_4.3.1      RSQLite_2.3.5       vctrs_0.6.5         reshape2_1.4.4      stringr_1.5.1       profvis_0.3.8       ## [13] crayon_1.5.2        pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       ellipsis_0.3.2      utf8_1.2.4          ## [19] promises_1.2.1      rmarkdown_2.25      sessioninfo_1.2.2   purrr_1.0.2         bit_4.0.5           gert_2.0.1          ## [25] xfun_0.42           rvcheck_0.2.1       cachem_1.0.8        jsonlite_1.8.8      blob_1.2.4          later_1.3.2         ## [31] terra_1.7-71        R6_2.5.1            stringi_1.8.3       RColorBrewer_1.1-3  pkgload_1.3.4       gdistance_1.6.4     ## [37] Rcpp_1.0.12         gitcreds_0.1.2      dlstats_0.1.7       httpuv_1.6.14       Matrix_1.6-5        splines_4.3.1       ## [43] igraph_2.0.2        tidyselect_1.2.0    rstudioapi_0.15.0   yaml_2.3.8          codetools_0.2-19    miniUI_0.1.1.1      ## [49] curl_5.2.0          pkgbuild_1.4.3      lattice_0.22-5      tibble_3.2.1        plyr_1.8.9          shiny_1.8.0         ## [55] askpass_1.2.0       evaluate_0.23       adehabitatMA_0.3.16 units_0.8-5         proxy_0.4-27        urlchecker_1.0.1    ## [61] xml2_1.3.6          pillar_1.9.0        BiocManager_1.30.22 KernSmooth_2.23-22  ncdf4_1.22          generics_0.1.3      ## [67] credentials_2.0.1   rprojroot_2.0.4     ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        xtable_1.8-4        ## [73] class_7.3-22        glue_1.7.0          tools_4.3.1         sys_3.4.2           fs_1.6.3            grid_4.3.1          ## [79] gh_1.4.0            colorspace_2.1-0    raster_3.6-26       cli_3.6.2           rappdirs_0.3.3      fansi_1.0.6         ## [85] dplyr_1.1.4         gtable_0.3.4        yulab.utils_0.1.4   digest_0.6.34       classInt_0.4-10     htmlwidgets_1.6.4   ## [91] memoise_2.0.1       htmltools_0.5.7     lifecycle_1.0.4     mime_0.12           openssl_2.1.1       bit64_4.0.5"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/index.html","id":"noaa-readme","dir":"","previous_headings":"","what":"NOAA README","title":"Calculate survey indices of abundance from DATRAS exchange data","text":"repository scientific product official communication National Oceanic Atmospheric Administration, United States Department Commerce. NOAA GitHub project code provided ‘’ basis user assumes responsibility use. claims Department Commerce Department Commerce bureaus stemming use GitHub project governed applicable Federal law. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring Department Commerce. Department Commerce seal logo, seal logo DOC bureau, shall used manner imply endorsement commercial product activity DOC United States Government.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/index.html","id":"noaa-license","dir":"","previous_headings":"","what":"NOAA License","title":"Calculate survey indices of abundance from DATRAS exchange data","text":"Software code created U.S. Government employees subject copyright United States (17 U.S.C. §105). United States/Department Commerce reserve rights seek obtain copyright protection countries United States Software authored entirety Department Commerce. end, Department Commerce hereby grants Recipient royalty-free, nonexclusive license use, copy, create derivative works Software outside United States.  U.S. Department Commerce | National Oceanographic Atmospheric Administration | NOAA Fisheries","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/anova_likelihood_ratio_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood ratio test for comparing two survey indices. — anova_likelihood_ratio_test","title":"Likelihood ratio test for comparing two survey indices. — anova_likelihood_ratio_test","text":"Previously called anova_SI. TOLDEO.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/anova_likelihood_ratio_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood ratio test for comparing two survey indices. — anova_likelihood_ratio_test","text":"","code":"anova_likelihood_ratio_test(m1, m2)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/anova_likelihood_ratio_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood ratio test for comparing two survey indices. — anova_likelihood_ratio_test","text":"m1 model 1 m2 model 2","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/anova_likelihood_ratio_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood ratio test for comparing two survey indices. — anova_likelihood_ratio_test","text":"p-value.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/anova_likelihood_ratio_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood ratio test for comparing two survey indices. — anova_likelihood_ratio_test","text":"","code":"# Simple example dat <- datasets::airquality m1 <- mgcv::gam(Ozone ~ s(Solar.R), data = dat) m1 #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> Ozone ~ s(Solar.R) #>  #> Estimated degrees of freedom: #> 3.04  total = 4.04  #>  #> GCV score: 892.2281      m2 <- mgcv::gam(Ozone ~ Wind + s(Solar.R), data = dat) m2 #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> Ozone ~ Wind + s(Solar.R) #>  #> Estimated degrees of freedom: #> 2.77  total = 4.77  #>  #> GCV score: 614.5392      # anova_likelihood_ratio_test(m1 = m1, m2 = m2)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/calc_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Get distance (km) between two locations\r\npreviously called gcd.hf — calc_distance","title":"Get distance (km) between two locations\r\npreviously called gcd.hf — calc_distance","text":"Get distance (km) two locations previously called gcd.hf","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/calc_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get distance (km) between two locations\r\npreviously called gcd.hf — calc_distance","text":"","code":"calc_distance(long1, lat1, long2, lat2)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/calc_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get distance (km) between two locations\r\npreviously called gcd.hf — calc_distance","text":"long1 Numeric Decimal degrees. Longitude first location. lat1 Numeric Decimal degrees. Latitude first location. long2 Numeric Decimal degrees. Longitude second location. lat2 Numeric Decimal degrees. Latitude second location.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/calc_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get distance (km) between two locations\r\npreviously called gcd.hf — calc_distance","text":"Distance locations km.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/calc_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get distance (km) between two locations\r\npreviously called gcd.hf — calc_distance","text":"","code":"calc_distance(long1 = 170, lat1 = 62, long2 = 170.1, lat2 = 62.1) #> [1] 780.7205 calc_distance(long1 = -170, lat1 = -62, long2 = -170.1, lat2 = -62.1) #> [1] 780.7205 calc_distance(long1 = 170, lat1 = -62, long2 = 170.1, lat2 = -62.1) #> [1] 780.7205 calc_distance(long1 = 50, lat1 = 50, long2 = 50.1, lat2 = 50.1) #> [1] 890.4222"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/concentration_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Concentration transform — concentration_transform","title":"Concentration transform — concentration_transform","text":"Previously called concTransform. Helper function plotting survey indices. analysis makes easier transform X values concentrations. common transform X values logarithms, required fitting models data. Since logarithm zero undefined, enter X=0 value empty (missing) transformation. analysis  lets substitute value (tiny concentration) zero taking logarithm.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/concentration_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concentration transform — concentration_transform","text":"","code":"concentration_transform(x)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/concentration_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concentration transform — concentration_transform","text":"x vector log-responses","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/concentration_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concentration transform — concentration_transform","text":"vector transformed responses","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/concentration_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concentration transform — concentration_transform","text":"","code":"plot(concentration_transform(x = seq(1,100,5)))  plot(concentration_transform(x = stats::rnorm(n = 123, mean = 5, sd = 25)))"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/consistency_external.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate external consistencies between two survey indices. — consistency_external","title":"Calculate external consistencies between two survey indices. — consistency_external","text":"Calculate external consistencies two survey indices.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/consistency_external.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate external consistencies between two survey indices. — consistency_external","text":"","code":"consistency_external(tt, tt2, print_plot = FALSE)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/consistency_external.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate external consistencies between two survey indices. — consistency_external","text":"tt matrix survey indices (rows=years, cols=ages) tt2 matrix survey indices (rows=years, cols=ages) print_plot plot ?","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/consistency_external.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate external consistencies between two survey indices. — consistency_external","text":"vector correlations (consistencies)","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/consistency_external.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate external consistencies between two survey indices. — consistency_external","text":"Previously called externalCons. Proper alignment years ages must ensured user.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/consistency_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate internal consistency of a survey index. — consistency_internal","title":"Calculate internal consistency of a survey index. — consistency_internal","text":"Calculate internal consistency survey index.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/consistency_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate internal consistency of a survey index. — consistency_internal","text":"","code":"consistency_internal(tt, print_plot = FALSE)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/consistency_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate internal consistency of a survey index. — consistency_internal","text":"tt matrix survey indices (rows=years, cols=ages) print_plot Plot ?","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/consistency_internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate internal consistency of a survey index. — consistency_internal","text":"vector consistencies","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/consistency_internal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate internal consistency of a survey index. — consistency_internal","text":"Previously called internalCons.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/convert_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Change CRS of coordinates — convert_crs","title":"Change CRS of coordinates — convert_crs","text":"Change CRS coordinates","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/convert_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change CRS of coordinates — convert_crs","text":"","code":"convert_crs(x, y, crs_in = \"+proj=longlat +datum=WGS84\", crs_out = \"EPSG:3338\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/convert_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change CRS of coordinates — convert_crs","text":"x Decimal degrees longititude. y Decimal degrees latitude. crs_in Default = \"+proj=longlat +datum=WGS84\". crs_out Default = \"EPSG:3338\".","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/convert_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change CRS of coordinates — convert_crs","text":"data.frame 3 columns: ID, Longitude, Latitude","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/convert_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change CRS of coordinates — convert_crs","text":"","code":"convert_crs(x = 170, y = 62) #>   ID        X       Y #> 1  1 -1789232 1833161 dat <- sdmgamindex::noaa_afsc_public_foss[,c(\"longitude_dd_start\", \"latitude_dd_start\")] head(dat) #>   longitude_dd_start latitude_dd_start #> 1          -171.3599          56.65940 #> 2          -173.2508          56.99770 #> 3          -170.2871          57.67576 #> 4          -166.5287          58.00859 #> 5          -176.7193          60.02075 #> 6          -177.0694          59.32891 ll <- sdmgamindex::convert_crs( # project data    x = dat$longitude_dd_start,    y = dat$latitude_dd_start,    crs_in = \"+proj=longlat +datum=WGS84\",    crs_out = \"EPSG:3338\") head(ll) #>   ID          X         Y #> 1  1 -1050529.3  877146.6 #> 2  2 -1151106.0  944820.3 #> 3  3  -959416.2  970747.6 #> 4  4  -734085.4  959133.7 #> 5  5 -1237677.9 1328406.2 #> 6  6 -1282319.2 1262236.5"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/convert_deg_rad.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert decimal degrees to radians\r\nPreviously called deg2rad. — convert_deg_rad","title":"Convert decimal degrees to radians\r\nPreviously called deg2rad. — convert_deg_rad","text":"Convert decimal degrees radians Previously called deg2rad.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/convert_deg_rad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert decimal degrees to radians\r\nPreviously called deg2rad. — convert_deg_rad","text":"","code":"convert_deg_rad(deg)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/convert_deg_rad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert decimal degrees to radians\r\nPreviously called deg2rad. — convert_deg_rad","text":"deg Numeric Decimal degrees latitude longitude.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/convert_deg_rad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert decimal degrees to radians\r\nPreviously called deg2rad. — convert_deg_rad","text":"value degrees radians.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/convert_deg_rad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert decimal degrees to radians\r\nPreviously called deg2rad. — convert_deg_rad","text":"","code":"convert_deg_rad(170.1) #> [1] 2.968805 convert_deg_rad(-60.1) #> [1] -1.048943"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/export_surveyidx.html","id":null,"dir":"Reference","previous_headings":"","what":"Write survey index to file in standard XSA/SAM format — export_surveyidx","title":"Write survey index to file in standard XSA/SAM format — export_surveyidx","text":"Write survey index file standard XSA/SAM format","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/export_surveyidx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write survey index to file in standard XSA/SAM format — export_surveyidx","text":"","code":"export_surveyidx(x, ages, years, toy, file, nam = \"\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/export_surveyidx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write survey index to file in standard XSA/SAM format — export_surveyidx","text":"x matrix survey indices ages vector ages years vector years toy fraction year survey conducted (0 1) file filename write nam file description header","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/export_surveyidx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write survey index to file in standard XSA/SAM format — export_surveyidx","text":"nothing","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/export_surveyidx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write survey index to file in standard XSA/SAM format — export_surveyidx","text":"Previously named exportSI.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/fix_age_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to ","title":"Helper function to ","text":"Helper function \"borrow\" missing age groups years","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/fix_age_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to ","text":"","code":"fix_age_group(x, age = 0, n = 3, fun = \"mean\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/fix_age_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to ","text":"x DATRASraw object age age impute n least many individuals year fun function 'mean','median','min', 'max'.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/fix_age_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to ","text":"DATRASraw object","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/fix_age_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper function to ","text":"years less 'n' individuals age 'age', add fake individuals age 'n'. length individuals set mean (whatever 'fun' specifies) individuals age. minimum maximum age groups fun reasonable replace 'mean' 'min' 'max' respectively. Note, might need call 'addSpectrum' object .","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_bathy_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bathymetric prediction grid corresponding to the area for a DATRASraw object using the 'marmap' package — get_bathy_grid","title":"Get bathymetric prediction grid corresponding to the area for a DATRASraw object using the 'marmap' package — get_bathy_grid","text":"Get bathymetric prediction grid corresponding area DATRASraw object using 'marmap' package","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_bathy_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bathymetric prediction grid corresponding to the area for a DATRASraw object using the 'marmap' package — get_bathy_grid","text":"","code":"get_bathy_grid(   d,   minDepth = 10,   maxDepth = Inf,   resolution = 2,   maxDist = Inf,   keep = TRUE,   shapefile = NULL,   select = NULL )"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_bathy_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bathymetric prediction grid corresponding to the area for a DATRASraw object using the 'marmap' package — get_bathy_grid","text":"d DATRASraw object minDepth Minimum depth include maxDepth Maximum depth include resolution grid resolution (see marmap::getNOAA.bathy) maxDist include grid points farther maxDist nearest observation. keep Save grid disk fast loading next time? shapefile extra shapefile information add (optional) select columns extract shapefile","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_bathy_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bathymetric prediction grid corresponding to the area for a DATRASraw object using the 'marmap' package — get_bathy_grid","text":"data.frame depths geographical coordinates","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_datrasraw.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame with one row per haul to DATRASraw alike object — get_datrasraw","title":"Data frame with one row per haul to DATRASraw alike object — get_datrasraw","text":"Data frame one row per haul DATRASraw alike object","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_datrasraw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame with one row per haul to DATRASraw alike object — get_datrasraw","text":"","code":"get_datrasraw(x)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_datrasraw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data frame with one row per haul to DATRASraw alike object — get_datrasraw","text":"x Data.frame. Zero filled catch data.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_datrasraw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data frame with one row per haul to DATRASraw alike object — get_datrasraw","text":"","code":"dat <- data.frame(           species = 1:2,           Year = 2016:2020,           lon = rnorm(n = 10, mean = 170, sd = 10),           lat = rnorm(n = 10, mean = 170, sd = 10),           sx = rnorm(n = 10, mean = 60, sd = 10),           sy = rnorm(n = 10, mean = 170, sd = 10),           covA = rnorm(n = 10, mean = 3, sd = 10),           covB = rnorm(n = 10, mean = 20, sd = 10),           EFFORT = rnorm(n = 10, mean = 20, sd = 10))  ds <- split(dat,dat$species)  lapply(ds, get_datrasraw) #> $`1` #> [[1]] #> data frame with 0 columns and 0 rows #>  #> [[2]] #>   species Year      lon      lat       sx       sy      covA      covB   EFFORT #> 1       1 2016 174.2657 156.9488 67.66440 164.4198  5.630667 29.608648 35.25939 #> 3       1 2018 170.2229 174.5434 73.21781 176.7768 -4.882588 30.359308 39.93110 #> 5       1 2020 167.3735 167.1310 65.14600 166.4362  6.636526  7.246651 45.64408 #> 7       1 2017 171.9215 170.6730 75.32741 178.0441  8.176691 42.117695 31.42695 #> 9       1 2019 178.4618 161.7269 61.22103 179.3578 -6.740696  8.534761 16.02999 #>   haul.id #> 1       1 #> 3       2 #> 5       3 #> 7       4 #> 9       5 #>  #> [[3]] #> data frame with 0 columns and 0 rows #>  #> attr(,\"class\") #> [1] \"DATRASraw\" #>  #> $`2` #> [[1]] #> data frame with 0 columns and 0 rows #>  #> [[2]] #>    species Year      lon      lat       sx       sy        covA      covB #> 2        2 2017 171.0758 160.5509 69.79957 180.5254 -14.9059186 27.687214 #> 4        2 2019 176.0361 161.4480 48.80289 170.3850  -8.3302167 15.261129 #> 6        2 2016 164.7174 178.9496 44.90900 177.8284   0.1411209 16.943793 #> 8        2 2018 158.5380 168.3732 64.29147 150.9994   1.9709133  9.583316 #> 10       2 2020 170.8172 188.7651 48.61988 166.9095  15.7067230  3.246727 #>      EFFORT haul.id #> 2  25.54186       1 #> 4  18.45879       2 #> 6  30.61999       3 #> 8  31.23839       4 #> 10 11.76739       5 #>  #> [[3]] #> data frame with 0 columns and 0 rows #>  #> attr(,\"class\") #> [1] \"DATRASraw\" #>"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate confidence intervals for a named parameter in a survey index model. — get_effect","title":"Calculate confidence intervals for a named parameter in a survey index model. — get_effect","text":"Calculate confidence intervals named parameter survey index model.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate confidence intervals for a named parameter in a survey index model. — get_effect","text":"","code":"get_effect(x, dat, parName = \"Gear\", cutOff, nboot = 1000, pOnly = FALSE)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate confidence intervals for a named parameter in a survey index model. — get_effect","text":"x survey index dat DATRASraw object parName name parameter, e.g. \"Gear\" cutOff see getsdmgamindex() nboot see getsdmgamindex() pOnly calculate positive part model, defaults FALSE.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate confidence intervals for a named parameter in a survey index model. — get_effect","text":"list estimates + ci bounds age group.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a grid of haul positions from a DATRASraw object. — get_grid","title":"Create a grid of haul positions from a DATRASraw object. — get_grid","text":"Create grid haul positions DATRASraw object.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a grid of haul positions from a DATRASraw object. — get_grid","text":"","code":"get_grid(dd, nLon = 20)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a grid of haul positions from a DATRASraw object. — get_grid","text":"dd DATRASraw object nLon number grid cells longitude direction.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a grid of haul positions from a DATRASraw object. — get_grid","text":"sdmgamindexGrid (list coordinates haul.ids)","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_prediction_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction a grid for a specific year — get_prediction_grid","title":"Prediction a grid for a specific year — get_prediction_grid","text":"Prediction grid specific year","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_prediction_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction a grid for a specific year — get_prediction_grid","text":"","code":"get_prediction_grid(year, x, subsel = NULL, varsbyyr = NULL, vars = NULL)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_prediction_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction a grid for a specific year — get_prediction_grid","text":"year Numeric string. years data available . x Data.frame. data.frame covariate data going model. subsel Default = NULL. varsbyyr Character string. name variables vary year. vars Character string. name variables vary year.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_prediction_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction a grid for a specific year — get_prediction_grid","text":"list data year","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_prediction_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction a grid for a specific year — get_prediction_grid","text":"","code":"dat <- data.frame(           lon = rnorm(n = 10, mean = 170, sd = 10),           lat = rnorm(n = 10, mean = 170, sd = 10),           sx = rnorm(n = 10, mean = 60, sd = 10),           sy = rnorm(n = 10, mean = 170, sd = 10),           covA = rnorm(n = 10, mean = 3, sd = 10),           covB2019 = rnorm(n = 10, mean = 20, sd = 10),           covB2020 = rnorm(n = 10, mean = 20, sd = 10),           covB2021 = rnorm(n = 10, mean = 20, sd = 10),           covB2022 = rnorm(n = 10, mean = 20, sd = 10),           EFFORT = rnorm(n = 10, mean = 20, sd = 10))  vars <- \"covA\" varsbyyr <- \"covB\" YEARS <- 2019:2022 pg <- lapply(YEARS,        FUN = get_prediction_grid,        x = dat,        vars = vars,        varsbyyr = varsbyyr) names(pg) <- YEARS pg #> $`2019` #>         lon      lat       sx       sy       covA      covB EFFORT #> 1  164.2112 167.2785 47.29487 171.2430 -12.625184 32.037678      1 #> 2  187.6379 145.5332 65.42142 160.0157   3.710534  5.687292      1 #> 3  171.3299 170.6549 60.75106 182.3339  -3.395348 33.829109      1 #> 4  173.7650 159.0149 65.58514 173.4042  -5.451957 20.031259      1 #> 5  181.3871 163.6682 64.15406 165.2730   9.752447 19.221132      1 #> 6  182.4126 149.3635 45.47700 177.0875  14.533758 24.414282      1 #> 7  176.1209 196.4893 69.41206 154.7104 -13.865047 21.289229      1 #> 8  165.7062 158.4660 56.61064 172.3743  -6.028149 11.697857      1 #> 9  183.6046 166.5936 59.24426 156.8719  16.176337 14.964071      1 #> 10 169.2914 177.8636 60.40204 177.4703  14.001897  8.063588      1 #>  #> $`2020` #>         lon      lat       sx       sy       covA      covB EFFORT #> 1  164.2112 167.2785 47.29487 171.2430 -12.625184 12.482767      1 #> 2  187.6379 145.5332 65.42142 160.0157   3.710534 34.558414      1 #> 3  171.3299 170.6549 60.75106 182.3339  -3.395348 11.713965      1 #> 4  173.7650 159.0149 65.58514 173.4042  -5.451957 22.897745      1 #> 5  181.3871 163.6682 64.15406 165.2730   9.752447 15.199465      1 #> 6  182.4126 149.3635 45.47700 177.0875  14.533758 13.951706      1 #> 7  176.1209 196.4893 69.41206 154.7104 -13.865047 34.601102      1 #> 8  165.7062 158.4660 56.61064 172.3743  -6.028149 21.496794      1 #> 9  183.6046 166.5936 59.24426 156.8719  16.176337  5.666789      1 #> 10 169.2914 177.8636 60.40204 177.4703  14.001897 19.896967      1 #>  #> $`2021` #>         lon      lat       sx       sy       covA      covB EFFORT #> 1  164.2112 167.2785 47.29487 171.2430 -12.625184 17.877640      1 #> 2  187.6379 145.5332 65.42142 160.0157   3.710534 10.936598      1 #> 3  171.3299 170.6549 60.75106 182.3339  -3.395348 -1.021525      1 #> 4  173.7650 159.0149 65.58514 173.4042  -5.451957 38.933605      1 #> 5  181.3871 163.6682 64.15406 165.2730   9.752447 10.318742      1 #> 6  182.4126 149.3635 45.47700 177.0875  14.533758 18.973970      1 #> 7  176.1209 196.4893 69.41206 154.7104 -13.865047 22.399596      1 #> 8  165.7062 158.4660 56.61064 172.3743  -6.028149 20.608989      1 #> 9  183.6046 166.5936 59.24426 156.8719  16.176337 -1.775760      1 #> 10 169.2914 177.8636 60.40204 177.4703  14.001897 18.821399      1 #>  #> $`2022` #>         lon      lat       sx       sy       covA     covB EFFORT #> 1  164.2112 167.2785 47.29487 171.2430 -12.625184 21.12295      1 #> 2  187.6379 145.5332 65.42142 160.0157   3.710534 20.07886      1 #> 3  171.3299 170.6549 60.75106 182.3339  -3.395348 38.77744      1 #> 4  173.7650 159.0149 65.58514 173.4042  -5.451957 41.58757      1 #> 5  181.3871 163.6682 64.15406 165.2730   9.752447 27.09715      1 #> 6  182.4126 149.3635 45.47700 177.0875  14.533758 27.66983      1 #> 7  176.1209 196.4893 69.41206 154.7104 -13.865047 16.91789      1 #> 8  165.7062 158.4660 56.61064 172.3743  -6.028149 30.12002      1 #> 9  183.6046 166.5936 59.24426 156.8719  16.176337 10.80948      1 #> 10 169.2914 177.8636 60.40204 177.4703  14.001897 25.63380      1 #>"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate survey indices by age. — get_surveyidx","title":"Calculate survey indices by age. — get_surveyidx","text":"Calculate survey indices age.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate survey indices by age. — get_surveyidx","text":"","code":"get_surveyidx(   x,   ages,   myids,   kvecP = rep(12 * 12, length(ages)),   kvecZ = rep(8 * 8, length(ages)),   gamma = 1.4,   cutOff = 1,   fam = \"Gamma\",   useBIC = FALSE,   nBoot = 1000,   mc.cores = 1,   method = \"ML\",   predD = NULL,   modelZ = NULL,   modelP = NULL,   knotsP = NULL,   knotsZ = NULL,   predfix = NULL,   linkZ = \"logit\",   CIlevel = 0.95,   ... )"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate survey indices by age. — get_surveyidx","text":"x DATRASraw object ages vector ages myids haul.ids grid kvecP vector spatial smoother max. basis dimension age group, strictly positive part model kvecZ vector spatial smoother max. basis dimension age group, presence/absence part model (ignored Tweedie models) gamma model degress freedom inflation factor (see 'gamma' argument mgcv::gam() ) cutOff treat observations value zero fam distribution, either \"Gamma\",\"LogNormal\", \"Tweedie\". useBIC use BIC smoothness selection (overrides 'gamma' argument) nBoot number bootstrap samples used calculating index confidence intervals mc.cores number cores parallel processing method smoothness selection method used 'gam' predD optional DATRASraw object data.frame (named list objects, one year names(predD) years) , defaults NULL. null used grid. modelZ vector model formula presence/absence part, one pr. age group (ignored Tweedie models) modelP vector model formula strictly positive responses, one pr. age group knotsP optional list knots gam, strictly positive responses knotsZ optional list knots gam, presence/absence predfix optional named list extra variables (besides Gear, HaulDur, Ship, TimeShotHour),  fixed prediction step (standardized) linkZ link function grDevices::dev.new part model, default: \"logit\" (used Tweedie models). CIlevel Confidence interval level, defaults 0.95. ... Optional extra arguments \"gam\"","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate survey indices by age. — get_surveyidx","text":"survey index (list)","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate survey indices by age. — get_surveyidx","text":"based methods described Berg et al. (2014): \"Evaluation alternative age-based methods estimating relative abundance survey data relation assessment models\", Fisheries Research 151(2014) 91-99.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate survey indices by age. — get_surveyidx","text":"","code":"if (FALSE) { library(DATRAS) # example data library(sdmgamindex) library(tidyverse) dat <- yfs <- sdmgamindex::noaa_afsc_public_foss |>    dplyr::filter(srvy==\"EBS\" & species_code == 10210) # Megsie todo: add example here using EBS data! }"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_aic.html","id":null,"dir":"Reference","previous_headings":"","what":"Akaike Information Criterion (or BIC) for survey index models — get_surveyidx_aic","title":"Akaike Information Criterion (or BIC) for survey index models — get_surveyidx_aic","text":"Akaike Information Criterion (BIC) survey index models","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_aic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Akaike Information Criterion (or BIC) for survey index models — get_surveyidx_aic","text":"","code":"get_surveyidx_aic(x, BIC = FALSE)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_aic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Akaike Information Criterion (or BIC) for survey index models — get_surveyidx_aic","text":"x survey index return get_surveyidx BIC TRUE compute BIC instead AIC","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_aic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Akaike Information Criterion (or BIC) for survey index models — get_surveyidx_aic","text":"numeric value","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_aic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Akaike Information Criterion (or BIC) for survey index models — get_surveyidx_aic","text":"previously named AIC.surveyIdx.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_resid.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomized quantile residuals for class 'sdmgamindex' — get_surveyidx_resid","title":"Randomized quantile residuals for class 'sdmgamindex' — get_surveyidx_resid","text":"Randomized quantile residuals class 'sdmgamindex'","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_resid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomized quantile residuals for class 'sdmgamindex' — get_surveyidx_resid","text":"","code":"get_surveyidx_resid(x, a = 1)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_resid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomized quantile residuals for class 'sdmgamindex' — get_surveyidx_resid","text":"x object type 'sdmgamindex' created 'get_surveyidx' age group","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_resid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomized quantile residuals for class 'sdmgamindex' — get_surveyidx_resid","text":"vector residuals, iid standard normal distributed","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_resid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Randomized quantile residuals for class 'sdmgamindex' — get_surveyidx_resid","text":"Previously named residuals.surveyIdx.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data from a sdmgamindex model (experimental and subject to change) — get_surveyidx_sim","title":"Simulate data from a sdmgamindex model (experimental and subject to change) — get_surveyidx_sim","text":"Simulate data surveyIdx model (experimental subject change)","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data from a sdmgamindex model (experimental and subject to change) — get_surveyidx_sim","text":"","code":"get_surveyidx_sim(model, d, sampleFit = FALSE, condSim = NULL)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data from a sdmgamindex model (experimental and subject to change) — get_surveyidx_sim","text":"model object class 'surveyIdx' d dataset (DATRASraw object) sampleFit Use random sample gaussian approximation distribution estimated parameter vector. Default: FALSE. condSim optional results previous call function. Use want generate many datasets (much faster, since mean predictions re-used).","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data from a sdmgamindex model (experimental and subject to change) — get_surveyidx_sim","text":"list  1) simulated observations noise 2) mean (noise) 3) zero probability.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate data from a sdmgamindex model (experimental and subject to change) — get_surveyidx_sim","text":"Previously named simulate surveyIdx.simulate.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_stratmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey index using the stratified mean method using ICES statistical rectangles as strata. — get_surveyidx_stratmean","title":"Survey index using the stratified mean method using ICES statistical rectangles as strata. — get_surveyidx_stratmean","text":"Survey index using stratified mean method using ICES statistical rectangles strata.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_stratmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey index using the stratified mean method using ICES statistical rectangles as strata. — get_surveyidx_stratmean","text":"","code":"get_surveyidx_stratmean(x, ageCols, doLog = FALSE)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_stratmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survey index using the stratified mean method using ICES statistical rectangles as strata. — get_surveyidx_stratmean","text":"x DATRASraw object. Must contain matrix: x[[2]]$Nage. ageCols columns Nage matrix included? doLog log-transform?","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_stratmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survey index using the stratified mean method using ICES statistical rectangles as strata. — get_surveyidx_stratmean","text":"matrix survey indices","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/get_surveyidx_stratmean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survey index using the stratified mean method using ICES statistical rectangles as strata. — get_surveyidx_stratmean","text":"Previously named get_surveyidxStratMean.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_biomass_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass Estimates from AKFIN for EBS walleye pollock, yellowfin sole, and red king crab from 2015 to present — noaa_afsc_biomass_estimates","title":"Biomass Estimates from AKFIN for EBS walleye pollock, yellowfin sole, and red king crab from 2015 to present — noaa_afsc_biomass_estimates","text":"table copy GAP_PRODUCTS.BIOMASS object dependencies. data produced Resource Assessment Conservation Engineering Division (RACE) Groundfish Assessment Program (GAP) Alaska Fisheries Science Center (AFSC). legal restrictions access data. data intended public dissemination shared without explicit written consent data managers owners (NOAA Fisheries). GitHub repository scripts created code can found https://github.com/afsc-gap-products/gap_products. data last updated October 04, 2023. table copy GAP_PRODUCTS.BIOMASS object dependencies. data produced Resource Assessment Conservation Engineering Division (RACE) Groundfish Assessment Program (GAP) Alaska Fisheries Science Center (AFSC). legal restrictions access data. data intended public dissemination shared without explicit written consent data managers owners (NOAA Fisheries). GitHub repository scripts created code can found https://github.com/afsc-gap-products/gap_products. data last updated February 20, 2024.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_biomass_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biomass Estimates from AKFIN for EBS walleye pollock, yellowfin sole, and red king crab from 2015 to present — noaa_afsc_biomass_estimates","text":"","code":"data('noaa_afsc_biomass_estimates')  data('noaa_afsc_biomass_estimates')"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_biomass_estimates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Biomass Estimates from AKFIN for EBS walleye pollock, yellowfin sole, and red king crab from 2015 to present — noaa_afsc_biomass_estimates","text":"data frame 16 observations following 7 variables. population_count Estimated population. estimated population caught survey species, group, total given survey. population_var Estimated population variance. estimated population variance caught survey species, group, total given survey. species_code Taxon code. species code organism associated 'common_name' 'scientific_name' columns. complete species list, review [code books](https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual). survey_definition_id Survey ID. number uniquely identifies survey. Name description survey. column 'survey_id' associated 'srvy' 'survey' columns. complete list surveys, review [code books](https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual). year Survey year. Year observation (survey) collected. biomass_mt Estimated biomass. estimated total biomass. biomass_var Estimated biomass variance. estimated variance associated total biomass. data frame 82 observations following 7 variables. biomass_mt Estimated biomass. estimated total biomass. biomass_var Estimated biomass variance. estimated variance associated total biomass. year Survey year. Year observation (survey) collected. population_count Estimated population. estimated population caught survey species, group, total given survey. population_var Estimated population variance. estimated population variance caught survey species, group, total given survey. species_code Taxon code. species code organism associated 'common_name' 'scientific_name' columns. complete species list, review [code books](https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual). survey_definition_id Survey ID. survey definition ID code uniquely identifies survey/survey design. column 'survey_definition_id' associated 'srvy' 'survey' columns. complete list surveys, review [code books](https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual).","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_biomass_estimates.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Biomass Estimates from AKFIN for EBS walleye pollock, yellowfin sole, and red king crab from 2015 to present — noaa_afsc_biomass_estimates","text":"https://github.com/afsc-gap-products/gap_products https://github.com/afsc-gap-products/gap_products","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_biomass_estimates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biomass Estimates from AKFIN for EBS walleye pollock, yellowfin sole, and red king crab from 2015 to present — noaa_afsc_biomass_estimates","text":"Resource Assessment Conservation Engineering (RACE) Division Groundfish Assessment Program (GAP) Alaska Fisheries Science Center (AFSC) conducts fisheries-independent bottom trawl surveys assess populations demersal fish crab stocks Alaska. Resource Assessment Conservation Engineering (RACE) Division Groundfish Assessment Program (GAP) Alaska Fisheries Science Center (AFSC) conducts fisheries-independent bottom trawl surveys assess populations demersal fish crab stocks Alaska.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_biomass_estimates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Biomass Estimates from AKFIN for EBS walleye pollock, yellowfin sole, and red king crab from 2015 to present — noaa_afsc_biomass_estimates","text":"Emily Markowitz (Emily.Markowitz noaa.gov)","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_biomass_estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biomass Estimates from AKFIN for EBS walleye pollock, yellowfin sole, and red king crab from 2015 to present — noaa_afsc_biomass_estimates","text":"","code":"data(noaa_afsc_biomass_estimates) data(noaa_afsc_biomass_estimates)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_public_foss.html","id":null,"dir":"Reference","previous_headings":"","what":"Public data from FOSS for EBS walleye pollock, yellowfin sole, and red king crab from 1982 to present — noaa_afsc_public_foss","title":"Public data from FOSS for EBS walleye pollock, yellowfin sole, and red king crab from 1982 to present — noaa_afsc_public_foss","text":"datasets, FOSS_CATCH, FOSS_CPUE_PRESONLY, FOSS_HAUL, FOSS_SPECIES, full joined HAULJOIN variable, includes zero-filled (presence absence) observations catch-per-unit-effort (CPUE) estimates identified species index stations. tables created Resource Assessment Conservation Engineering Division (RACE) Groundfish Assessment Program (GAP) Alaska Fisheries Science Center (AFSC). legal restrictions access data. data intended public dissemination shared without explicit written consent data managers owners (NOAA Fisheries). GitHub repository scripts created code can found https://github.com/afsc-gap-products/gap_products. information codes used tables, please refer survey code books (https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual). data last updated February 21, 2024.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_public_foss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Public data from FOSS for EBS walleye pollock, yellowfin sole, and red king crab from 1982 to present — noaa_afsc_public_foss","text":"","code":"data('noaa_afsc_public_foss')"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_public_foss.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Public data from FOSS for EBS walleye pollock, yellowfin sole, and red king crab from 1982 to present — noaa_afsc_public_foss","text":"data frame 45651 observations following 37 variables. area_swept_km2 Area swept (km). area net covered net fishing (kilometers squared), defined distance fished times net width. bottom_temperature_c Bottom temperature (degrees celsius). Bottom temperature (tenths degree Celsius); NA indicates removed missing values. common_name Taxon common name. common name marine organism associated 'scientific_name' 'species_code' columns. complete species list, review [code books](https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual). count Taxon count. Total whole number individuals caught haul samples collected. cpue_kgkm2 Weight CPUE (kg/km2). Catch weight (kilograms) per unit effort (area swept net, units square kilometers). cpue_nokm2 Number CPUE (/km2). Numerical catch per unit effort (area swept net, units square kilometers). cruise Cruise ID. six-digit integer identifying cruise number form: YYYY99 (YYYY = year cruise; 99 = 2-digit number sequential; 01 denotes first cruise vessel made year, 02 second, etc.). cruisejoin Cruise ID. Unique integer ID assigned survey, vessel, year combination. date_time Date time. date (MM/DD/YYYY) time (HH:MM) haul. dates times Alaska time (AKDT) Anchorage, AK, USA (UTC/GMT -8 hours). depth_m Depth (m). Bottom depth (meters). distance_fished_km Distance fished (km). Distance net fished (thousands kilometers). duration_hr Tow duration (decimal hr). elapsed time start end haul (decimal hours). haul Haul number. number uniquely identifies sampling event (haul) within cruise. sequential number, chronological order occurrence. hauljoin Haul ID. unique numeric identifier assigned (vessel, cruise, haul) combination. id_rank Lowest taxonomic rank. Lowest taxonomic rank given species entry. itis ITIS taxonomic serial number. Species code identified Integrated Taxonomic Information System (https://itis.gov/). latitude_dd_end End latitude (decimal degrees). Latitude (one hundred thousandth decimal degree) end haul. latitude_dd_start Start latitude (decimal degrees). Latitude (one hundred thousandth decimal degree) start haul. longitude_dd_end End longitude (decimal degrees). Longitude (one hundred thousandth decimal degree) end haul. longitude_dd_start Start longitude (decimal degrees). Longitude (one hundred thousandth decimal degree) start haul. net_height_m Net height (m). Measured estimated distance (meters) footrope headrope trawl. taxon_confidence Taxon confidence rating. Confidence ability survey team correctly identify taxon specified level, based solely identification skill (e.g., likelihood taxon caught station location--location basis). Quality codes follow: **'High'**: High confidence consistency. Taxonomy stable reliable level, field identification characteristics well known reliable. **'Moderate'**: Moderate confidence. Taxonomy may questionable level, field identification characteristics may variable difficult assess consistently. **'Low'**: Low confidence. Taxonomy incompletely known, reliable field identification characteristics unknown. Documentation: [Species identification confidence eastern Bering Sea shelf survey (1982-2008)](http://apps-afsc.fisheries.noaa.gov/Publications/ProcRpt/PR2009-04.pdf), [Species identification confidence eastern Bering Sea slope survey (1976-2010)](http://apps-afsc.fisheries.noaa.gov/Publications/ProcRpt/PR2014-05.pdf), [Species identification confidence Gulf Alaska Aleutian Islands surveys (1980-2011)](http://apps-afsc.fisheries.noaa.gov/Publications/ProcRpt/PR2014-01.pdf). vessel_id Vessel ID. ID number vessel used collect data haul. column 'vessel_id' associated 'vessel_name' column. Note possible vessel new name vessel id number. complete list vessel ID codes, review [code books](https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual). vessel_name Vessel name. Name vessel used collect data haul. column 'vessel_name' associated 'vessel_id' column. Note possible vessel new name vessel id number. complete list vessel ID codes, review [code books](https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual). weight_kg Sample taxon weight (kg). Weight (thousandths kilogram) individuals haul taxon. worms World Register Marine Species Taxonomic Serial Number. Species code identified World Register Marine Species (WoRMS) (https://www.marinespecies.org/). year Survey year. Year observation (survey) collected. net_width_m Net width (m). Measured estimated distance (meters) wingtips trawl. performance Haul performance code. denotes , , issues arose haul. information, review [code books](https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual). scientific_name Taxon scientific name. scientific name organism associated 'common_name' 'species_code' columns. complete taxon list, review [code books](https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual). species_code Taxon code. species code organism associated 'common_name' 'scientific_name' columns. complete species list, review [code books](https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual). srvy Survey. Abbreviated survey names. column 'srvy' associated 'survey' 'survey_definition_id' columns. Northern Bering Sea (NBS), Southeastern Bering Sea (EBS), Bering Sea Slope (BSS), Gulf Alaska (GOA), Aleutian Islands (AI). station Station ID. Alpha-numeric designation station established design survey. stratum Stratum ID. RACE database statistical area analyzing data. Strata designed using bathymetry geographic habitat-related elements. strata unique survey region. Stratum value 0 indicates experimental tows. surface_temperature_c Surface temperature (Degrees Celsius). Surface temperature (tenths degree Celsius); NA indicates removed missing values. survey Survey Name. Name description survey. column 'survey' associated 'srvy' 'survey_definition_id' columns. survey_definition_id Survey ID. survey definition ID code uniquely identifies survey/survey design. column 'survey_definition_id' associated 'srvy' 'survey' columns. complete list surveys, review [code books](https://www.fisheries.noaa.gov/resource/document/groundfish-survey-species-code-manual--data-codes-manual).","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_public_foss.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Public data from FOSS for EBS walleye pollock, yellowfin sole, and red king crab from 1982 to present — noaa_afsc_public_foss","text":"https://github.com/afsc-gap-products/gap_products","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_public_foss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Public data from FOSS for EBS walleye pollock, yellowfin sole, and red king crab from 1982 to present — noaa_afsc_public_foss","text":"Resource Assessment Conservation Engineering (RACE) Division Groundfish Assessment Program (GAP) Alaska Fisheries Science Center (AFSC) conducts fisheries-independent bottom trawl surveys assess populations demersal fish crab stocks Alaska.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_public_foss.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Public data from FOSS for EBS walleye pollock, yellowfin sole, and red king crab from 1982 to present — noaa_afsc_public_foss","text":"Emily Markowitz (Emily.Markowitz noaa.gov)","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/noaa_afsc_public_foss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Public data from FOSS for EBS walleye pollock, yellowfin sole, and red king crab from 1982 to present — noaa_afsc_public_foss","text":"","code":"data(noaa_afsc_public_foss)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_simulation_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot survey index list (e.g. retrospective analysis) — plot_simulation_list","title":"Plot survey index list (e.g. retrospective analysis) — plot_simulation_list","text":"Plot survey index list (e.g. retrospective analysis)","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_simulation_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot survey index list (e.g. retrospective analysis) — plot_simulation_list","text":"","code":"plot_simulation_list(   x,   base = 1,   rescale = FALSE,   lwd = 1.5,   main = NULL,   allCI = FALSE,   includeCI = TRUE,   ylim = NULL )"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_simulation_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot survey index list (e.g. retrospective analysis) — plot_simulation_list","text":"x (named) list \"surveyIdx\" objects example \"retro.surveyIdx\" \"leaveout.surveyIdx\" base Either index x considered \"base run\" (integer), object class \"surveyIdx\". Confidence bounds shown model . rescale indices rescaled mean 1 (set intersecting years)? Default: FALSE lwd line width argument plot main NULL override main plotting default title \"Age group \" allCI show 95% confidence lines indices? Default FALSE. includeCI Show confidence intervals? Default TRUE. ylim Y axis range. NULL (default) determine automatically.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_simulation_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot survey index list (e.g. retrospective analysis) — plot_simulation_list","text":"nothing","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_surveyidx.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize results from a survey index model fitted with get_surveyidx(). — plot_surveyidx","title":"Visualize results from a survey index model fitted with get_surveyidx(). — plot_surveyidx","text":"Visualize results survey index model fitted get_surveyidx().","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_surveyidx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize results from a survey index model fitted with get_surveyidx(). — plot_surveyidx","text":"","code":"plot_surveyidx(   x,   dat,   alt.idx = NULL,   myids,   cols = 1:length(x$pModels),   select = c(\"index\", \"map\", \"residuals\", \"fitVsRes\"),   par = list(mfrow = c(3, 3)),   colors = rev(grDevices::heat.colors(6)),   map.cex = 1,   plotByAge = TRUE,   legend = TRUE,   predD = NULL,   year = NULL,   main = NULL,   legend.signif = 3,   legend.pos = \"topright\",   restoreOldPar = FALSE,   mapBubbles = FALSE,   cutp = NULL,   ... )"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_surveyidx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize results from a survey index model fitted with get_surveyidx(). — plot_surveyidx","text":"x Survey index produced getsdmgamindex() dat DATRASraw object alt.idx optional matrix alternative index myids vector haul ids constitute grid cols age columns consider? select character vector chosen plots. Either one \"index\",\"map\",\"absolutemap\",\"CVmap\",\"residuals\",\"fitVsRes\",\"\"resVsYear\",\"resVsShip\",\"spatialResiduals\", number. Numbers refer smooths order appear formula. par 'par' settings plotting (named list). colors colors spatial effect. map.cex size grid points maps plotByAge boolean (default=TRUE). true, par(par) called age group. legend boolean (default=TRUE). add legends plot? predD DATRASraw object grid (optional). Overrides 'myids' supplied. year numeric scalar vector (default=NULL). 'select' equals 'map' specific year can chosen (meaningful time-varying spatial effects). select equals 'absolutemap' 'CVmap' year must vector. main optional main title (overrides default title) legend.signif Number significant digits map legends legend.pos Position legend (e.g. \"bottomleft\") see ?legend restoreOldPar restore old par() exit? Default=FALSE mapBubbles boolean (default=FALSE) add observation bubbles? cutp optional vector break points color scale maps ... Additional parameters plot()","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_surveyidx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize results from a survey index model fitted with get_surveyidx(). — plot_surveyidx","text":"series production plots","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_surveyidx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize results from a survey index model fitted with get_surveyidx(). — plot_surveyidx","text":"","code":"# plot_surveyidx()"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_surveyidx_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a sdmgamindexGrid — plot_surveyidx_grid","title":"Plot a sdmgamindexGrid — plot_surveyidx_grid","text":"Plot sdmgamindexGrid","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_surveyidx_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a sdmgamindexGrid — plot_surveyidx_grid","text":"","code":"plot_surveyidx_grid(grid, pch = 1, gridCol = \"lightgrey\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_surveyidx_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a sdmgamindexGrid — plot_surveyidx_grid","text":"grid sdmgamindexGrid (created \"get_grid\" function) pch Inherited base::plot(). plotting ‘character’, .e., symbol use. gridCol Color grid plot output.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_surveyidx_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a sdmgamindexGrid — plot_surveyidx_grid","text":"nothing","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/plot_surveyidx_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a sdmgamindexGrid — plot_surveyidx_grid","text":"","code":"# TOLEDO"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/pred_grid_ebs.html","id":null,"dir":"Reference","previous_headings":"","what":"EBS Prediction Grid — pred_grid_ebs","title":"EBS Prediction Grid — pred_grid_ebs","text":"EBS Prediction Grid","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/pred_grid_ebs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EBS Prediction Grid — pred_grid_ebs","text":"","code":"data(\"pred_grid_ebs\")"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/pred_grid_ebs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EBS Prediction Grid — pred_grid_ebs","text":"data frame 36690 observations following 3 variables. lon Numeric; Longitude (one hundred thousandth decimal degree). lat Numeric; Latitude (one hundred thousandth decimal degree). Shape_Area Numeric; area location represents.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/pred_grid_ebs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"EBS Prediction Grid — pred_grid_ebs","text":"https://github.com/James-Thorson-NOAA/VAST","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/pred_grid_ebs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EBS Prediction Grid — pred_grid_ebs","text":"DETAILS","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/pred_grid_ebs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EBS Prediction Grid — pred_grid_ebs","text":"Emily Markowitz (emily.markowitz noaa.gov) James Thorson (james.thorson noaa.gov)","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/pred_grid_ebs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EBS Prediction Grid — pred_grid_ebs","text":"","code":"data(pred_grid_ebs)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/qres_tweedie.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomized quantile residuals for Tweedie models — qres_tweedie","title":"Randomized quantile residuals for Tweedie models — qres_tweedie","text":"Randomized quantile residuals Tweedie models","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/qres_tweedie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomized quantile residuals for Tweedie models — qres_tweedie","text":"","code":"qres_tweedie(gam.obj)"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/qres_tweedie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomized quantile residuals for Tweedie models — qres_tweedie","text":"gam.obj gam object (mgcv package)","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/qres_tweedie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomized quantile residuals for Tweedie models — qres_tweedie","text":"vector residuals, iid standard normal distributed","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/qres_tweedie.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Randomized quantile residuals for Tweedie models — qres_tweedie","text":"Previously named qres.tweedie.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/redo_surveyidx.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-compute standardized survey indices for an alternative grid from a previous fitted ","title":"Re-compute standardized survey indices for an alternative grid from a previous fitted ","text":"Re-compute standardized survey indices alternative grid previous fitted \"surveyIdx\" model.","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/redo_surveyidx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-compute standardized survey indices for an alternative grid from a previous fitted ","text":"","code":"redo_surveyidx(   x,   model,   predD = NULL,   myids,   nBoot = 1000,   predfix = list(),   mc.cores = 1 )"},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/redo_surveyidx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-compute standardized survey indices for an alternative grid from a previous fitted ","text":"x DATRASraw dataset model object class \"surveyIdx\" created \"get_surveyidx\" predD optional DATRASraw object, defaults NULL. null used grid. myids haul.ids grid nBoot number bootstrap samples used calculating index confidence intervals predfix optional named list extra variables (besides Gear, HaulDur, Ship, TimeShotHour),  fixed prediction step (standardized) mc.cores mc.cores number cores parallel processing","code":""},{"path":"https://emilymarkowitz-noaa.github.io/sdmgamindex/reference/redo_surveyidx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-compute standardized survey indices for an alternative grid from a previous fitted ","text":"object class \"surveyIdx\"","code":""}]
